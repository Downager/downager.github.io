<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Raspberry Pi 變身為 Seedbox 製作實錄 (PPPoE+DDNS+BT+FTP)</title>
    <url>/2013/03/22/Raspberry-Pi-%E8%AE%8A%E8%BA%AB%E7%82%BA-Seedbox-%E8%A3%BD%E4%BD%9C%E5%AF%A6%E9%8C%84-PPPoE-DDNS-BT-FTP/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文章大部分都是參考網路上的資源，純粹只是自己做個紀錄，內容有誤還望各位先進指教！</p>
<h1 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h1><ul>
<li>韌體版本：<a href="https://www.raspberrypi.org/downloads/">2013-02-09-wheezy-raspbian</a></li>
<li>格式成exFAT的隨身硬碟</li>
</ul>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>第一次開機就能用 ssh 進入了<br>帳號：pi<br>密碼：raspberry</p>
<span id="more"></span> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 登入後先把預設密碼改掉</span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line"># 更改鍵盤配置</span><br><span class="line">sudo dpkg-reconfigure keyboard-configuration</span><br><span class="line">// ssh 底下無法使用這指令</span><br><span class="line"></span><br><span class="line"># 更改地區</span><br><span class="line">sudo dpkg-reconfigure locales</span><br><span class="line"></span><br><span class="line"># 設定時區</span><br><span class="line">sudo dpkg-reconfigure tzdata</span><br><span class="line"></span><br><span class="line"># 更新索引清單（package list）</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"># 更新套件</span><br><span class="line">sudo apt-get -y dist-upgrade</span><br><span class="line">// 這動作會耗費一段時間，可以先休息一下</span><br><span class="line"></span><br><span class="line"># 清除更新時所下載的檔案</span><br><span class="line">sudo apt-get clean</span><br><span class="line"></span><br><span class="line"># 安裝PPPoE撥號程式</span><br><span class="line">sudo apt-get install pppoeconf</span><br><span class="line"></span><br><span class="line"># 設定PPPoE</span><br><span class="line">sudo pppoeconf</span><br><span class="line">// 如果不是直接接在數據機後請先跳過</span><br><span class="line"></span><br><span class="line"># 安裝no-ip</span><br><span class="line">cd /usr/local/src/</span><br><span class="line">sudo wget http://www.no-ip.com/client/linux/noip-duc-linux.tar.gz</span><br><span class="line">sudo tar xf noip-duc-linux.tar.gz</span><br><span class="line">cd noip-2.1.9-1/</span><br><span class="line">sudo make install</span><br><span class="line"># 輸入 no-ip資料</span><br><span class="line"># 建立 /etc/init.d/noip2</span><br><span class="line">sudo touch /etc/init.d/noip2</span><br><span class="line">sudo nano /etc/init.d/noip2 </span><br><span class="line"># 將以下腳本複製進去</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#! /bin/sh</span><br><span class="line"># /etc/init.d/noip </span><br><span class="line"></span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides:          noip</span><br><span class="line"># Required-Start:    $remote_fs $syslog</span><br><span class="line"># Required-Stop:     $remote_fs $syslog</span><br><span class="line"># Default-Start:     2 3 4 5</span><br><span class="line"># Default-Stop:      0 1 6</span><br><span class="line"># Short-Description: Simple script to start a program at boot</span><br><span class="line"># Description:       A simple script from www.stuffaboutcode.com which will start / stop a program a boot / shutdown.</span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line"># If you want a command to always run, put it here</span><br><span class="line"></span><br><span class="line"># Carry out specific functions when asked to by the system</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">  start)</span><br><span class="line">    echo &quot;Starting noip&quot;</span><br><span class="line">    # run application you want to start</span><br><span class="line">    /usr/local/bin/noip2</span><br><span class="line">    ;;</span><br><span class="line">  stop)</span><br><span class="line">    echo &quot;Stopping noip&quot;</span><br><span class="line">    # kill application you want to stop</span><br><span class="line">    killall noip2</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    echo &quot;Usage: /etc/init.d/noip &#123;start|stop&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 變更 script 權限</span><br><span class="line">sudo chmod 755 /etc/init.d/noip2</span><br><span class="line"># 進行開機啟動</span><br><span class="line">sudo update-rc.d noip2 defaults</span><br><span class="line"># 一鍵安裝 rtorrent+rutorrent</span><br><span class="line">cd ~</span><br><span class="line">sudo wget --no-check-certificate https://blog.downager.com/2013/03/22/Raspberry-Pi-變身為-Seedbox-製作實錄-PPPoE-DDNS-BT-FTP/rtorrent.sh</span><br><span class="line">sudo sh rtorrent.sh</span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 這部分會裝很久，久到不可思議。</span><br><span class="line">// # rutorrent 出問題請嘗試</span><br><span class="line">// sudo rm /home/rtorrent/rtorrent/session/rtorrent.lock</span><br><span class="line"></span><br><span class="line"># 接上硬碟，確認是否在/dev/sda1下</span><br><span class="line">sudo fdisk -l</span><br><span class="line"></span><br><span class="line"># 安裝exfat-fuse，讓mount支持exFAT格式</span><br><span class="line">sudo apt-get install exfat-fuse</span><br><span class="line"></span><br><span class="line"># 建立資料夾，將隨身硬碟掛載到下面</span><br><span class="line">sudo mkdir /mnt/extHDD</span><br><span class="line">sudo mount /dev/sda1 /mnt/extHDD/</span><br><span class="line"></span><br><span class="line"># 確認是否正確掛載</span><br><span class="line">df -h</span><br><span class="line"></span><br><span class="line"># 開機自動掛載</span><br><span class="line">sudo nano /etc/fstab </span><br><span class="line"># 加入下面這行</span><br><span class="line">/dev/sda1       /mnt/extHDD     exfat-fuse      defaults        0       0</span><br><span class="line">// 使用tab空格</span><br><span class="line"></span><br><span class="line"># 修改 rtorrent.rc</span><br><span class="line">sudo nano /home/rtorrent/.rtorrent.rc</span><br><span class="line"># 修改預設下載位置</span><br><span class="line">directory = /mnt/extHDD</span><br><span class="line"># 增加記憶體使用上限</span><br><span class="line">max_memory_usage = 256M</span><br><span class="line"></span><br><span class="line"># 修改rutorrent conf.php</span><br><span class="line">sudo nano /var/rutorrent/rutorrent/conf/config.php</span><br><span class="line">修改這兩項</span><br><span class="line">$scgi_port = &quot;23876&quot;;</span><br><span class="line">$topDirectory = &#x27;/mnt/extHDD&#x27;;</span><br><span class="line"></span><br><span class="line"># 儲存完畢後重新開機</span><br><span class="line">sudo shutdown -r now</span><br><span class="line">檢查pppoe noip ftp rtorrent rutorrent mount 是否正確運作</span><br></pre></td></tr></table></figure>

<p>這記錄就到此結束了，有任何問題可以在下方留言，<br>有地方能夠更精簡也歡迎指教，感謝您的觀看。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="http://yehnan.blogspot.tw/2012/06/raspberry-pi_10.html">Raspberry Pi基本設定、編譯核心、上網</a></li>
<li><a href="http://kawa812.blogspot.tw/2013/02/raspberry-pi.html">Raspberry PI 設定紀錄</a></li>
<li><a href="http://www.stuffaboutcode.com/2012/06/raspberry-pi-run-program-at-start-up.html">Raspberry Pi - run program at start-up</a></li>
<li><a href="https://sourceforge.net/projects/autodl-irssi/">autodl-irssi</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>[開箱] LGA771 雙路 Xeon 5160 -- 老兵不死，只是凋零</title>
    <url>/2013/06/19/%E9%96%8B%E7%AE%B1-LGA771-%E9%9B%99%E8%B7%AF-Xeon-5160-%E8%80%81%E5%85%B5%E4%B8%8D%E6%AD%BB%EF%BC%8C%E5%8F%AA%E6%98%AF%E5%87%8B%E9%9B%B6/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>沒事不要亂看東西啊，不小心就跌入坑了</p>
<p>心血來潮想弄台雙路Xeon來玩，仔細評估價格和效能後決定採用LGA771作為主軸。</p>
<h1 id="配備清單"><a href="#配備清單" class="headerlink" title="配備清單"></a>配備清單</h1><ol>
<li>Intel Xeon 5160 *2 （二手）    $ 800</li>
<li>TYAN Tempest i5000VS (S5372) （庫存新品）   $ 1500</li>
<li>Kingston DDR2 667 1G FB-Dimm *2 （二手）    $ 600</li>
<li>LGA 771 原廠純銅CPU散熱器 *2 （二手）    $ 500</li>
<li>保銳 戰斧 80+ 450W （全新）    $ 1500<span id="more"></span></li>
</ol>
<h1 id="配備介紹"><a href="#配備介紹" class="headerlink" title="配備介紹"></a>配備介紹</h1><h2 id="Intel-Xeon-5160（3GHz-x2F-4MB-L2-x2F-1333MHz-FSB）"><a href="#Intel-Xeon-5160（3GHz-x2F-4MB-L2-x2F-1333MHz-FSB）" class="headerlink" title="Intel Xeon 5160（3GHz&#x2F;4MB L2&#x2F;1333MHz FSB）"></a>Intel Xeon 5160（3GHz&#x2F;4MB L2&#x2F;1333MHz FSB）</h2>


<p><strong>這是Xeon（Woodcrest）採用Core 2架構（65nm）Server級雙核心處理器（2C&#x2F;2T），</strong><br><strong>採用LGA 771（Socket J），全線只有Xeon 5160的TDP是80W，其餘皆為65W。</strong></p>
<h2 id="TYAN-Tempest-i5000VS-S5372"><a href="#TYAN-Tempest-i5000VS-S5372" class="headerlink" title="TYAN Tempest i5000VS (S5372)"></a>TYAN Tempest i5000VS (S5372)</h2>


<p><strong>這張圖片可以看到，在左下角的部分有除錯代碼燈號，很貼心的設計</strong><br><strong>除錯燈旁邊的是Speaker，本來要去找來裝的，定睛一看才發現已經內建在板子上了阿</strong></p>



<p>*<em>LGA 771 Socket <em>2</em></em></p>



<p>*<em>FBDIMM <em>6</em></em></p>



<p><strong>雙Gigabit乙太網路卡</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 主機板規格表</span><br><span class="line">Processor </span><br><span class="line">• (2) LGA771 sockets</span><br><span class="line">• Supports up to two Intel® Xeon® processors </span><br><span class="line">     5000/5100/5300 series; dual-core</span><br><span class="line">• 1333/1066/667MHz FSB; VRD 11.0 </span><br><span class="line">Chipset </span><br><span class="line">• Intel® 5000V chipset</span><br><span class="line">• Intel® 6321ESB I/O Controller Hub</span><br><span class="line">• SMSC SCH5017 Super I/O chip </span><br><span class="line">Memory </span><br><span class="line">• Dual memory channels</span><br><span class="line">• (6) 240-pin DDR2 FBDIMM sockets</span><br><span class="line">• Supports up to 24GB of ECC memory</span><br><span class="line">• Supports FBDIMM 667/533MHz </span><br><span class="line">Expansion Slots </span><br><span class="line">• One 64/133 PCI-X slot in-lined with one (1)</span><br><span class="line">     inversed PCI-E x4 slot (routed to PCI-E x8 bus)</span><br><span class="line">• One 32/33 PCI 2.3 slot</span><br><span class="line">• One x8 PCI-E slot (with PCI-E x4 bus)</span><br><span class="line">• One TYAN TARO™ SO-DIMM socket </span><br><span class="line">Integrated I/O </span><br><span class="line">• One floppy connector; one IDE connector</span><br><span class="line">• Six (6) SATA ports support RAID 0, 1, 5, 10</span><br><span class="line">• Four (4) USB 2.0 ports (two at rear, two via cable)</span><br><span class="line">• Two (2) COM ports (one at rear, one via cable)</span><br><span class="line">• Tyan 2 x 9 front-panel pin header</span><br><span class="line">• Tyan 2 x 6 front-panel pin header for LAN/ID LED</span><br><span class="line">• Two 25-pin connector for Tyan IPMI SMDC (opt.) </span><br><span class="line">Back Panel I/O ports</span><br><span class="line">• One 9-pin COM port</span><br><span class="line">• One 15-pin VGA port </span><br><span class="line">• Stacked PS/2 mouse &amp; keyboard ports</span><br><span class="line">• Following ports come with activity LED:</span><br><span class="line">      - Stacked two USB 2.0 &amp; RJ45 10/100 ports</span><br><span class="line">      - Two RJ-45 10/100/1000 Base-T port </span><br><span class="line">Integrated SATA Controller (ESB2)</span><br><span class="line">• (1) Serial ATA Host controller embedded</span><br><span class="line">• (6) SATA ports, RAID 0, 1, 5, 10 supported</span><br><span class="line">     (Window OS only)</span><br><span class="line">• SATA activity LED connector </span><br><span class="line">Integrated LAN Controllers </span><br><span class="line">• Dual Gigabit MAC (ESB2 embedded) with</span><br><span class="line">     i82563EB dual-PHY</span><br><span class="line">• Intel® i82551QM fast ethernet LAN controller</span><br><span class="line">      - Operating at 32bit/33MHz interface</span><br><span class="line">• Pin headers for front panel LAN LED </span><br></pre></td></tr></table></figure>
<h2 id="Kingston-DDR2-667-1G-FB-Dimm"><a href="#Kingston-DDR2-667-1G-FB-Dimm" class="headerlink" title="Kingston DDR2 667 1G FB-Dimm"></a>Kingston DDR2 667 1G FB-Dimm</h2>


<p><strong>FB-Dimm</strong><br><strong>Fully Buffered DIMM（全緩存模組技術）串行內存技術</strong><br>**由INTEL公司研發，特點為採用已有的DDR2內存芯片，借助一個緩衝芯片將並行數據轉換為串行數據流，並經由類似PCI Express的點對點高速串行總線將數據傳輸給CPU。若採用DDR2-800顆粒，FB-DIMM的帶寬提升到38.4GBps，而它的帶寬極限可突破57.6GBps。在多通道設計上，FB-DIMM非常靈活，你可以使用單通道、雙通道、四通道或者是六通道。（百度百科） **</p>
<h1 id="上機測試"><a href="#上機測試" class="headerlink" title="上機測試"></a>上機測試</h1>


<p><strong>先來張 CPU-Z 驗明正身</strong></p>






<p><strong>待機約1小時後的溫度</strong><br><strong>除了CPU以外其他最好都別摸，很燙很恐怖</strong></p>



<p><strong>再次驗身</strong></p>



<p><strong>AIDA64 Memtest</strong></p>



<p><strong>CINEBENCH R11.5</strong></p>



<p><strong>Nuclearus Multi Core</strong></p>



<p><strong>Fritz Chess Benchmark</strong></p>



<h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p><strong>單核效能被i3-3220菊爆，不過仗著實體四核心，全線程能贏個10%到30%沒問題的。</strong></p>
]]></content>
      <categories>
        <category>Unboxing</category>
      </categories>
      <tags>
        <tag>開箱</tag>
      </tags>
  </entry>
  <entry>
    <title>[網路] 集線器 (hub) 與交換器 (switch) 的差別</title>
    <url>/2013/07/01/%E7%B6%B2%E8%B7%AF-%E9%9B%86%E7%B7%9A%E5%99%A8-hub-%E8%88%87%E4%BA%A4%E6%8F%9B%E5%99%A8-switch-%E7%9A%84%E5%B7%AE%E5%88%A5/</url>
    <content><![CDATA[<h3 id="集線器-Hub"><a href="#集線器-Hub" class="headerlink" title="集線器 - Hub"></a>集線器 - Hub</h3><p><code>Hub</code>是屬於 <code>Layer 1</code> （實體層）的設備，所有資料只會視為電子流，只做洪泛、沖刷 <code>(flood)</code>的動作。<br>另外，由於 Hub 也有訊號增益的功能，所以能將每個 Port 視為一個 <code>Repeater</code>。</p>
<img src="/2013/07/01/%E7%B6%B2%E8%B7%AF-%E9%9B%86%E7%B7%9A%E5%99%A8-hub-%E8%88%87%E4%BA%A4%E6%8F%9B%E5%99%A8-switch-%E7%9A%84%E5%B7%AE%E5%88%A5/diff_001.gif" class="">

<span id="more"></span> 
<p>這張圖我們可以看到，Hub 會將資料沖刷到每個 Port 造成<code>頻寬壅塞</code>，故集線器只適合用於<code>臨時串接</code>。</p>
<h3 id="交換器-Switch"><a href="#交換器-Switch" class="headerlink" title="交換器 - Switch"></a>交換器 - Switch</h3><p><code>Switch</code> 則是 <code>Layer 2</code> （資料鏈結層）的設備，L2 的設備最大的不同是他會以學習的方式記錄每一個 Port 底下設備的 <code>Mac Address</code>，再根據 <code>Mac Address Table</code> 內的資料選擇要將封包轉發至哪個 Port。</p>
<img src="/2013/07/01/%E7%B6%B2%E8%B7%AF-%E9%9B%86%E7%B7%9A%E5%99%A8-hub-%E8%88%87%E4%BA%A4%E6%8F%9B%E5%99%A8-switch-%E7%9A%84%E5%B7%AE%E5%88%A5/diff_002.gif" class="">


<p><strong>下圖為 Cisco Switch 的 Mac Address Table</strong></p>
<img src="/2013/07/01/%E7%B6%B2%E8%B7%AF-%E9%9B%86%E7%B7%9A%E5%99%A8-hub-%E8%88%87%E4%BA%A4%E6%8F%9B%E5%99%A8-switch-%E7%9A%84%E5%B7%AE%E5%88%A5/diff_003.jpg" class="">


<p>可以看到學習到的 <code>MAC-Address</code> 分別隸屬於哪個 Port，Switch 會根據這張表格轉發封包到對應的 Port</p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
      </tags>
  </entry>
  <entry>
    <title>[網路] 淺談 ARP (Address Resolution Protocol) 運作原理</title>
    <url>/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h1><p>　　在乙太網路上，資料的傳遞必須要有實體位址 (MAC Address)，Layer 2 設備會驗證 Frame 的實體位址，不是找它的一律捨棄，但設備一開機總不可能就有所有設備的實體位址吧？所以就需要 ARP 協定來協助取得各個設備的實體位址。</p>
<h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>　　ARP 是利用乙太網路的廣播功能所設計出來的位址解析協定，它的主要特性是它的位址對應關係是動態的，以查詢的方式來獲得 I P位址 (IP Address) 和實體位址 (MAC Address &#x2F; Physical Address) 的對應關係。</p>
<p>　　只要是 Layer 3 的設備都一定會有 ARP Cache，並且會在 ARP 快取內建立 ARP 表格 (ARP Table) 用來記錄 IP 位址和實體位址的對應關係。這個 Table 會依據自身的存活時間遞減而消失，以確保資料的正確性。</p>
<span id="more"></span> 

<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>　　當發送主機有一個封包要傳送給目標主機時，並且已獲得目標主機的 IP 位址，那發送主機會先檢查自己的 ARP 表格中有沒有該 IP 位址的實體位址對應。</p>
<ul>
<li>如果有，就直接將此 IP 所對應的 MAC Address 填入 Layer 2 表頭。</li>
<li>如果沒有，則向網路發出一個 ARP Request 的廣播封包，查詢目標主機的實體位址。</li>
</ul>
<p>例：<code>PC0</code> 要 <code>Ping PC1</code>，且該網段還有一台 <code>PC2</code></p>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_001.jpg" class="">


<ul>
<li>綠色為 <code>ARP Request</code> 的廣播封包，L2 表頭內的目標實體位址全為 FFFF</li>
<li>黃綠色為 <code>ICMP(Ping)</code> 封包，等待填入 L2 表頭內的目標實體位址</li>
</ul>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_002.jpg" class="">


<p><code>ARP Request</code> 封包<br>當初我看到這張圖時心裡就想，沒有 IP 位址的話 L3 不是沒辦法辨認嗎？<br>後來才發現，原來 <code>ARP</code> 和 <code>IP</code> 同屬於 <code>Layer 3</code> 的 Protocol，拆開後發現是給 ARP 的封包就丟給 ARP 處理囉！</p>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_003.jpg" class="">


<p>由於是廣播封包，所以 L2 會移除表頭後交給 L3 做處理，<code>PC2</code> 的 ARP 接收後發現目標 IP 並不是找他，故<code>丟棄</code>之。</p>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_004.jpg" class="">


<p><code>PC1</code> 在收到 <code>ARP Request</code> 封包後發現是找自己的，便將 <code>PC0</code> 的 IP 位址及 MAC 位址對應寫到 <code>ARP 表格</code> 裡以及回傳一個 <code>ARP Reply</code> 封包給 <code>PC0</code>。</p>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_005.jpg" class="">


<p><code>ARP Reply</code> 封包內包含 <code>Source MAC/IP</code>及 <code>Target MAC/IP</code>。(<code>ARP Request</code><strong>沒有</strong>目標<code>MAC Address</code>)</p>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_006.jpg" class="">


<p><code>PC0</code> 收到 <code>ARP Reply</code> 後，將目標 <code>MAC Address</code> 填入 <code>ICMP(Ping)</code> 封包的 L2 表頭之後就開始執行Ping <code>PC1</code> 的動作。<br><em>註：綠色為 <code>ARP Reply</code>、橘色為 <code>ICMP</code></em></p>
<p>那 <code>PC2</code> 會不會將 <code>PC0</code> 的對應關係寫進去 <code>ARP</code> 表格啊？</p>
<img src="/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/ARP_007.jpg" class="">


<p>上面也提到了，雖然 L2 會往上送，但 L3 會捨棄此封包，所以 <code>ARP</code> 表格內不會有 <code>PC0</code> 的記錄。</p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
      </tags>
  </entry>
  <entry>
    <title>[網路] 淺談路由器 (Router) 工作原理</title>
    <url>/2013/07/22/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87%E8%B7%AF%E7%94%B1%E5%99%A8-Router-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在乙太網路上，許多協定都會使用到廣播來做資料交換，數量一多就會造成網路效能低落，因此使用路由器作為廣播網域(Broadcast Domain)邊界，切割出不同網段來遏止廣播風暴蔓延。</p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>在 TCP&#x2F;IP 的設定中，有個**預設閘道 (Default Gateway)**欄位讓你填，如果你要離開本地網段的話，ARP 就會去詢問預設閘道的 Mac Address，將 L2 表頭的目的地位址填上預設閘道的實體位址，送出封包後 L2 的目的地位址會是預設閘道的網卡。</p>
<p>舉個例吧，<code>PC0</code> 要 Ping <code>PC3</code>，封包轉送前和轉送後的改變。</p>
<img src="/2013/07/22/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87%E8%B7%AF%E7%94%B1%E5%99%A8-Router-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/Router_001.jpg" class="">

<span id="more"></span> 
<p>當<code>PC0 (192.168.10.10/24)</code>要 Ping <code>PC3 (192.168.20.10/24)</code>時，ARP 會判斷目標 IP 是否在同一網段。<br>此例是跨網段，故 ARP 會回覆預設路由的 MAC</p>
<img src="/2013/07/22/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87%E8%B7%AF%E7%94%B1%E5%99%A8-Router-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/Router_002.jpg" class="">

<p>這是 <code>PC0</code> 像 <code>PC3</code> 發出的 ICMP 封包，我們可以看到 L2 的目標 MAC 是填**預設閘道 (Router)**的 MAC，L3 的的目標 IP 則是 PC3 的 IP 位址。</p>
<img src="/2013/07/22/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87%E8%B7%AF%E7%94%B1%E5%99%A8-Router-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/Router_003.jpg" class="">

<p>經由路由器轉發後，封包內的 L2 的原始 MAC 改為 <code>192.168.20.254</code> 這張網卡的 MAC，但 L3 不會改變。</p>
<img src="/2013/07/22/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87%E8%B7%AF%E7%94%B1%E5%99%A8-Router-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/Router_004.jpg" class="">

<p>你問我怎麼回去?怎麼來的就怎麼回去阿，來源 <code>MAC/IP</code> 和目標 <code>MAC/IP</code> 調換就是了。</p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 如何設定Hinet IPv6 Dual Stack</title>
    <url>/2013/09/12/RouterOS-%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9AHinet-IPv6-Dual-Stack/</url>
    <content><![CDATA[<ul>
<li>打開<code>IPv6/DHCPv6 Client</code>，將<code>Interface</code>指向<code>PPPoE</code>的介面，再來設定<code>Pool Name</code>，稍後 LAN Port 會去此 Pool 取 Prefix。（記得勾選加入預設路由）</li>
</ul>
<img src="/2013/09/12/RouterOS-%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9AHinet-IPv6-Dual-Stack/ROS_IPv6DS_001.jpg" class="">

<span id="more"></span> 
<ul>
<li>打開<code>IPv6/Address</code>，在<code>Address</code>的部分輸入<code>::1/64</code>，<code>Pool</code>選擇剛剛建好的<code>hinet_ipv6_prefix</code>，ROS 就會自動帶入 prefix 組合成 IPv6 Address。</li>
</ul>
<img src="/2013/09/12/RouterOS-%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9AHinet-IPv6-Dual-Stack/ROS_IPv6DS_002.jpg" class="">


<ul>
<li>套用後，將會自動組合Address</li>
</ul>
<img src="/2013/09/12/RouterOS-%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9AHinet-IPv6-Dual-Stack/ROS_IPv6DS_003.jpg" class="">


<p><strong>完成！</strong></p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 每日自動備份設定檔 Script</title>
    <url>/2013/09/13/RouterOS-%E6%AF%8F%E6%97%A5%E8%87%AA%E5%8B%95%E5%82%99%E4%BB%BD%E8%A8%AD%E5%AE%9A%E6%AA%94-Script/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>為了避免設備無預警掛點，排程備份設定檔是必須的工作，<br>若要使用本腳本，請預先配置好 <code>Tools/Email</code>，謝謝</p>
<p>本 Script 為參考”<a href="http://www.minitw.com/routeros/automatic-backup-routeros-and-email-send-backup-file.htm">電腦茶包 Blog</a>“所製作之 Script 修改而來。</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h4 id="1-打開-System-Scripts，新增一個新的Script並命名為-gmail-backup-system"><a href="#1-打開-System-Scripts，新增一個新的Script並命名為-gmail-backup-system" class="headerlink" title="1.打開 System/Scripts，新增一個新的Script並命名為 gmail_backup_system"></a>1.打開 <code>System/Scripts</code>，新增一個新的Script並命名為 <code>gmail_backup_system</code></h4><h4 id="2-將-Script-貼入-Source-內"><a href="#2-將-Script-貼入-Source-內" class="headerlink" title="2.將 Script 貼入 Source 內"></a>2.將 Script 貼入 Source 內</h4><span id="more"></span> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#--------------------------------------------------------</span><br><span class="line">#本Script為參考&quot;電腦茶包 Blog&quot;所製作之Script修改而來    </span><br><span class="line">#Script Name:gmail_backup_system</span><br><span class="line">#--------------------------------------------------------</span><br><span class="line"></span><br><span class="line">#收件人</span><br><span class="line">:local MailTo &quot;example@gmail.com&quot;</span><br><span class="line"> </span><br><span class="line">#寄出後是否刪除已存檔的Log(/file裡的檔案)</span><br><span class="line">#0=保留 1=刪除</span><br><span class="line"> </span><br><span class="line">:local DeleteLogFile 1</span><br><span class="line"> </span><br><span class="line">:local BackupFileName</span><br><span class="line">:set BackupFileName ([/system identity get name] . &quot;_Backup-&quot; . [:pick [/system clock get date] 7 11] . [:pick [/system clock get date] 0 3] . [:pick [/system clock get date] 4 6] . &quot;.backup&quot;);</span><br><span class="line"> /system backup save name=($BackupFileName);</span><br><span class="line"> delay 10;</span><br><span class="line"> </span><br><span class="line">/tool e-mail send to=$MailTo subject=([/system identity get name] . &quot; -- RouterOS Backup &quot; . [:pick [/system clock get date] 7 11] . [:pick [/system clock get date] 0 3] . [:pick [/system clock get date] 4 6]) file=[$BackupFileName];</span><br><span class="line"> </span><br><span class="line">:delay 10;</span><br><span class="line"> </span><br><span class="line">:if ($DeleteLogFile =1) do=&#123;</span><br><span class="line"> /file rem [/file find name=($BackupFileName)];</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">:log info (&quot;System Backup emailed at &quot; . [/sys cl get time] . &quot; &quot; . [/sys cl get date] . &quot; &quot;);</span><br></pre></td></tr></table></figure>
<h4 id="3-打開-System-Schedule，建立新的排程，設定每日執行-gmail-backup-system"><a href="#3-打開-System-Schedule，建立新的排程，設定每日執行-gmail-backup-system" class="headerlink" title="3.打開 System/Schedule，建立新的排程，設定每日執行 gmail_backup_system"></a>3.打開 <code>System/Schedule</code>，建立新的排程，設定每日執行 <code>gmail_backup_system</code></h4><img src="/2013/09/13/RouterOS-%E6%AF%8F%E6%97%A5%E8%87%AA%E5%8B%95%E5%82%99%E4%BB%BD%E8%A8%AD%E5%AE%9A%E6%AA%94-Script/emailbackup_001.jpg" class="">


<h4 id="4-成果！"><a href="#4-成果！" class="headerlink" title="4.成果！"></a>4.成果！</h4><img src="/2013/09/13/RouterOS-%E6%AF%8F%E6%97%A5%E8%87%AA%E5%8B%95%E5%82%99%E4%BB%BD%E8%A8%AD%E5%AE%9A%E6%AA%94-Script/emailbackup_002.jpg" class="">


<p>設定完成後，可以檢視log確認是否運作正常</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="http://www.minitw.com/routeros/automatic-backup-routeros-and-email-send-backup-file.htm">全自動備份 RouterOS，並以Email寄送備份檔</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 使用 NetWatch 監測主機狀態，主機離線時自動傳送警告信</title>
    <url>/2013/09/15/RouterOS-%E4%BD%BF%E7%94%A8-NetWatch-%E7%9B%A3%E6%B8%AC%E4%B8%BB%E6%A9%9F%E7%8B%80%E6%85%8B%EF%BC%8C%E4%B8%BB%E6%A9%9F%E9%9B%A2%E7%B7%9A%E6%99%82%E8%87%AA%E5%8B%95%E5%82%B3%E9%80%81%E8%AD%A6%E5%91%8A%E4%BF%A1/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>首先，請先將E-Mail相關設定配置完成，否則無法寄出警告信  </p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h4 id="1-Tools-Email"><a href="#1-Tools-Email" class="headerlink" title="1. Tools/Email"></a>1. <code>Tools/Email</code></h4><img src="/2013/09/15/RouterOS-%E4%BD%BF%E7%94%A8-NetWatch-%E7%9B%A3%E6%B8%AC%E4%B8%BB%E6%A9%9F%E7%8B%80%E6%85%8B%EF%BC%8C%E4%B8%BB%E6%A9%9F%E9%9B%A2%E7%B7%9A%E6%99%82%E8%87%AA%E5%8B%95%E5%82%B3%E9%80%81%E8%AD%A6%E5%91%8A%E4%BF%A1/NetWatch_001.jpg" class="">


<p><strong>( for Gmail )</strong></p>
<span id="more"></span>   

<h4 id="2-Tools-Netwatch"><a href="#2-Tools-Netwatch" class="headerlink" title="2. Tools/Netwatch"></a>2. <code>Tools/Netwatch</code></h4><img src="/2013/09/15/RouterOS-%E4%BD%BF%E7%94%A8-NetWatch-%E7%9B%A3%E6%B8%AC%E4%B8%BB%E6%A9%9F%E7%8B%80%E6%85%8B%EF%BC%8C%E4%B8%BB%E6%A9%9F%E9%9B%A2%E7%B7%9A%E6%99%82%E8%87%AA%E5%8B%95%E5%82%B3%E9%80%81%E8%AD%A6%E5%91%8A%E4%BF%A1/NetWatch_002.jpg" class="">

<ul>
<li><code>Host</code> 填上你要偵測的主機 IP address  </li>
<li><code>Interval</code> 設定偵測間隔  </li>
<li><code>Timeont</code> 設定多久沒回應判定主機為 Down</li>
</ul>
<img src="/2013/09/15/RouterOS-%E4%BD%BF%E7%94%A8-NetWatch-%E7%9B%A3%E6%B8%AC%E4%B8%BB%E6%A9%9F%E7%8B%80%E6%85%8B%EF%BC%8C%E4%B8%BB%E6%A9%9F%E9%9B%A2%E7%B7%9A%E6%99%82%E8%87%AA%E5%8B%95%E5%82%B3%E9%80%81%E8%AD%A6%E5%91%8A%E4%BF%A1/NetWatch_003.jpg" class="">

<h4 id="3-當偵測到主機為狀態變更時，自動寄送通知信"><a href="#3-當偵測到主機為狀態變更時，自動寄送通知信" class="headerlink" title="3.當偵測到主機為狀態變更時，自動寄送通知信"></a>3.當偵測到主機為狀態變更時，自動寄送通知信</h4><p><strong>將以下腳本分別貼入對應的框，並根據自身環境修改內容</strong></p>
<ul>
<li>Host UP<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/tool e-mail send to=test@gmail.com from=&quot;&lt;Mikrotik RB750Gr3&gt;&quot; subject=(&quot;[Notice] &quot; . &quot;HOST : Downager-PC | &quot; .  &quot;TIME : &quot; . [/system clock get time] . &quot; | STATUS : UP&quot;) body=&quot;HOST : Downager-PC\nSTATUS : UP&quot;</span><br></pre></td></tr></table></figure></li>
<li>Host Down<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/tool e-mail send to=test@gmail.com from=&quot;&lt;Mikrotik RB750Gr3&gt;&quot; subject=(&quot;[Warning!] &quot; . &quot;HOST : Downager-PC | &quot; .  &quot;TIME : &quot; . [/system clock get time] . &quot; | STATUS : DOWN&quot;) body=&quot;HOST : Downager-PC\nSTATUS : DOWN&quot;</span><br></pre></td></tr></table></figure>
成果！</li>
</ul>
<img src="/2013/09/15/RouterOS-%E4%BD%BF%E7%94%A8-NetWatch-%E7%9B%A3%E6%B8%AC%E4%B8%BB%E6%A9%9F%E7%8B%80%E6%85%8B%EF%BC%8C%E4%B8%BB%E6%A9%9F%E9%9B%A2%E7%B7%9A%E6%99%82%E8%87%AA%E5%8B%95%E5%82%B3%E9%80%81%E8%AD%A6%E5%91%8A%E4%BF%A1/NetWatch_004.jpg" class="">


<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="http://blog.kyosls.org/index.php/2012/03/02/routeros-%E4%BD%BF%E7%94%A8netwatch-%E5%81%B5%E6%B8%AC%E4%B8%BB%E6%A9%9F/">RouterOS 使用NetWatch 偵測主機</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 將特定流量導向至VPN的作法 (策略路由)</title>
    <url>/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　日本、中國有許多資源常常只有開放給國內，對海外 IP 採取封鎖狀態，這是通常都會使用 VPN 來做翻牆，但其他國內流量也被強迫導向至海外 VPN ，因此拖慢了網路速度，這時使用策略路由就能完美解決囉！</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><ul>
<li>新增一個 <code>VPN Interface</code></li>
</ul>
<span id="more"></span> 

<ul>
<li>在 <code>IP/Firewall</code> 底下建立 <code>Address List</code> ，以後方便維護</li>
</ul>
<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_002.jpg" class="">


<ul>
<li>新增 <code>Mangle</code> ，標記路由</li>
</ul>
<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_003.jpg" class="">


<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_004.jpg" class="">


<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_005.jpg" class="">


<ul>
<li>新增 <code>NAT</code>，沒 NAT 會出不去的</li>
</ul>
<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_006.jpg" class="">


<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_007.jpg" class="">


<ul>
<li>新增路由 <code>IP/Routes</code></li>
</ul>
<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_008.jpg" class="">


<p><strong>完成！</strong></p>
<ul>
<li>使用 <code>Traceroute</code> 驗證一下</li>
</ul>
<img src="/2014/01/05/RouterOS-%E5%B0%87%E7%89%B9%E5%AE%9A%E6%B5%81%E9%87%8F%E5%B0%8E%E5%90%91%E8%87%B3VPN%E7%9A%84%E4%BD%9C%E6%B3%95-%E7%AD%96%E7%95%A5%E8%B7%AF%E7%94%B1/PolicyRouting_009.jpg" class="">


<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://www.mobile01.com/topicdetail.php?f=110&t=3205444&p=33#42935068#42935068">[研究所] MikroTik RouterOS 學習 (持續更新)</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 自動重播 PPPoE-client 以取得特定網段 IP Address</title>
    <url>/2014/01/11/RouterOS-%E8%87%AA%E5%8B%95%E9%87%8D%E6%92%AD-PPPoE-client-%E4%BB%A5%E5%8F%96%E5%BE%97%E7%89%B9%E5%AE%9A%E7%B6%B2%E6%AE%B5-IP-Address/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近觀察到知名花店業者某些浮動 IP 連外特別塞，所以寫了以下腳本來協助取得連外速度較佳的 IP 位置</p>
<p>相關討論：<a href="http://www.mobile01.com/topicdetail.php?f=507&t=3369399&p=1">111夜間聯陸暴PING~石牌二機房過海纜第一站300ms</a></p>
<h1 id="腳本"><a href="#腳本" class="headerlink" title="腳本"></a>腳本</h1><span id="more"></span> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Script:</span><br><span class="line"># Auto Redial PPPoE-client</span><br><span class="line">#Version:</span><br><span class="line"># RouterOS v6.37</span><br><span class="line">#Descript: </span><br><span class="line"># 自動重播PPPoE-client以取得特定網段IP Address</span><br><span class="line">#History:</span><br><span class="line"># 2014/01/10 Relk(http://blog.downager.com/)</span><br><span class="line">#---------------------------------------------------------------</span><br><span class="line">#在此設定PPPoE Interface及所需要的IP網段</span><br><span class="line">:local PPPoEInt &quot;Hinet-PPPoE-out&quot;;</span><br><span class="line">:local Network 1.160.0.0/12;</span><br><span class="line"></span><br><span class="line">#取得Interface IP address</span><br><span class="line">:local IntIPAddress [/ip address get [find interface=$PPPoEInt] address];</span><br><span class="line">:set IntIPAddress [:pick $IntIPAddress 0 [:find $IntIPAddress &quot;/&quot;]];</span><br><span class="line">:local CheckIP ([:toip $IntIPAddress] in $Network);</span><br><span class="line"></span><br><span class="line">#確認目前IP是否在目標網段內</span><br><span class="line">:if ($CheckIP = false) do=&#123;</span><br><span class="line">:do &#123;</span><br><span class="line">/interface pppoe-client disable $PPPoEInt;</span><br><span class="line">/interface pppoe-client enable $PPPoEInt;</span><br><span class="line">:log info ($PPPoEInt . &quot;: &quot; . $IntIPAddress);</span><br><span class="line">:log info ($PPPoEInt . &quot;: &quot; . &quot;IP不符需求&quot;);</span><br><span class="line">:delay 10;</span><br><span class="line">#重新寫入新取得的IP</span><br><span class="line">:set IntIPAddress [/ip address get [find interface=$PPPoEInt] address];</span><br><span class="line">:set IntIPAddress [:pick $IntIPAddress 0 [:find $IntIPAddress &quot;/&quot;]];</span><br><span class="line">:set CheckIP ([:toip $IntIPAddress] in $Network)&#125; while=($CheckIP = false)&#125;</span><br><span class="line">:log info ($PPPoEInt . &quot;: &quot; . $IntIPAddress);</span><br><span class="line">:log info ($PPPoEInt . &quot;: &quot; . &quot;IP符合需求&quot;);</span><br></pre></td></tr></table></figure>

<p>另外，也可以使用此 script 搭配 Multi-Session PPPoE 做策略路由，進一步優化連外速度。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="http://wiki.mikrotik.com/wiki/Manual:Scripting">Manual:Scripting - MikroTik Wiki</a></li>
<li><a href="http://wiki.mikrotik.com/wiki/Manual:Scripting-examples">Manual:Scripting-examples - MikroTik Wiki</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>[網路] IEEE 802.11 分散式系統 (Distribution System) 訊框 (Frame) 交換簡解</title>
    <url>/2014/10/09/%E7%B6%B2%E8%B7%AF-IEEE-802-11-%E5%88%86%E6%95%A3%E5%BC%8F%E7%B3%BB%E7%B5%B1-Distribution-System-%E8%A8%8A%E6%A1%86-Frame-%E4%BA%A4%E6%8F%9B%E7%B0%A1%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>這篇比較像是學習筆記，有些部分就不會寫那麼仔細了。</p>
<h1 id="分散式系統-Distribution-System"><a href="#分散式系統-Distribution-System" class="headerlink" title="分散式系統 (Distribution System)"></a>分散式系統 (Distribution System)</h1><img src="/2014/10/09/%E7%B6%B2%E8%B7%AF-IEEE-802-11-%E5%88%86%E6%95%A3%E5%BC%8F%E7%B3%BB%E7%B5%B1-Distribution-System-%E8%A8%8A%E6%A1%86-Frame-%E4%BA%A4%E6%8F%9B%E7%B0%A1%E8%A7%A3/Distribution_001.jpg" class="">

<span id="more"></span> 
<p>這邊分散式系統指的是將每個 AP 相互連結，使得彼此的客戶端能夠交換資料的一套系統。</p>
<h4 id="IEEE-802-11-Frame-Format"><a href="#IEEE-802-11-Frame-Format" class="headerlink" title="IEEE 802.11 Frame Format"></a>IEEE 802.11 Frame Format</h4><p>IEEE 802.11 我們常見的應用 Wi-Fi 就是其中之一，它的 Frame 長這樣：</p>
<img src="/2014/10/09/%E7%B6%B2%E8%B7%AF-IEEE-802-11-%E5%88%86%E6%95%A3%E5%BC%8F%E7%B3%BB%E7%B5%B1-Distribution-System-%E8%A8%8A%E6%A1%86-Frame-%E4%BA%A4%E6%8F%9B%E7%B0%A1%E8%A7%A3/Distribution_002.jpg" class="">


<p>我們可以看到，802.11 的 MAC Header 的地址欄位有四欄，和 802.3 (Ethernet) 非常不同，等等會繼續提到。</p>
<p>另外要先提的是，Frame Control 欄位裡的 To DS 和 From DS</p>
<ul>
<li>To DS : 目的地是否為分散式系統，是就打 1 ，否就打 0 </li>
<li>From DS : 發送地是否為分散式系統，是就打 1 ，否就打 0</li>
</ul>
<p> </p>
<p>接下來看到這張圖，這是 802.3 下 MAC Header 會遇到的四種情形：</p>
<img src="/2014/10/09/%E7%B6%B2%E8%B7%AF-IEEE-802-11-%E5%88%86%E6%95%A3%E5%BC%8F%E7%B3%BB%E7%B5%B1-Distribution-System-%E8%A8%8A%E6%A1%86-Frame-%E4%BA%A4%E6%8F%9B%E7%B0%A1%E8%A7%A3/Distribution_003.jpg" class="">


<ul>
<li>BSSID : AP 的 MAC address</li>
<li>SA : 原始來源地址</li>
<li>DA : 最終目的地地址</li>
<li>TA : 發送端地址</li>
<li>RA : 接收端地址</li>
</ul>
<p>第一種都是 0 的，就是在同一 AP 訊號涵蓋範圍下互送</p>
<img src="/2014/10/09/%E7%B6%B2%E8%B7%AF-IEEE-802-11-%E5%88%86%E6%95%A3%E5%BC%8F%E7%B3%BB%E7%B5%B1-Distribution-System-%E8%A8%8A%E6%A1%86-Frame-%E4%BA%A4%E6%8F%9B%E7%B0%A1%E8%A7%A3/Distribution_004.jpg" class="">


<ul>
<li>To DS &#x3D; <code>0</code></li>
<li>From DS &#x3D; <code>0</code></li>
<li>Addr 1 &#x3D; <code>Laptop B</code></li>
<li>Addr 2 &#x3D; <code>Laptop A</code></li>
<li>Addr 3 &#x3D; <code>AP 0</code></li>
<li>Addr 4 &#x3D; <code>N/A</code></li>
</ul>
<p>第二到四種我合在一起講：<br>假設現在 Laptop A 要送資料給 Laptop D，由於雙方並不在同一 AP 下那勢必會經過 DS，所以總共有三步驟： </p>
<img src="/2014/10/09/%E7%B6%B2%E8%B7%AF-IEEE-802-11-%E5%88%86%E6%95%A3%E5%BC%8F%E7%B3%BB%E7%B5%B1-Distribution-System-%E8%A8%8A%E6%A1%86-Frame-%E4%BA%A4%E6%8F%9B%E7%B0%A1%E8%A7%A3/Distribution_005.jpg" class="">

<ul>
<li><p><code>Laptop A</code> to <code>AP 0</code> :</p>
<ul>
<li>To DS &#x3D; <code>1</code></li>
<li>From DS &#x3D; <code>0</code></li>
<li>Addr 1 &#x3D; <code>AP 0</code></li>
<li>Addr 2 &#x3D; <code>Laptop A</code></li>
<li>Addr 3 &#x3D; <code>Laptop D</code></li>
<li>Addr 4 &#x3D; <code>N/A</code></li>
</ul>
</li>
<li><p><code>AP 0</code> to <code>AP 2</code> : </p>
<ul>
<li>To DS &#x3D; <code>1</code></li>
<li>From DS &#x3D; <code>1</code></li>
<li>Addr 1 &#x3D; <code>AP 2</code></li>
<li>Addr 2 &#x3D; <code>AP 0</code></li>
<li>Addr 3 &#x3D; <code>Laptop D</code></li>
<li>Addr 4 &#x3D; <code>Laptop A</code></li>
</ul>
</li>
<li><p><code>AP 2</code> to <code>Laptop D</code> : </p>
<ul>
<li>To DS &#x3D; <code>0</code></li>
<li>From DS &#x3D; <code>1</code></li>
<li>Addr 1 &#x3D; <code>Laptop D</code></li>
<li>Addr 2 &#x3D; <code>AP 2</code></li>
<li>Addr 3 &#x3D; <code>Laptop A</code></li>
<li>Addr 4 &#x3D; <code>N/A</code></li>
</ul>
</li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="http://en.wikipedia.org/wiki/IEEE_802.11">IEEE 802.11</a></li>
</ul>
<p><strong>大致上就是這樣，有什麼錯誤或是問題歡迎在下方指出，感謝您的閱讀。</strong></p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>802.11</tag>
        <tag>Distribution-System</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] Stateless Address Autoconfiguration (SLAAC) + Stateless DHCPv6 配置方法</title>
    <url>/2014/11/13/RouterOS-Stateless-Address-Autoconfiguration-SLAAC-Stateless-DHCPv6-%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　之前已經將 <a href="http://downager.blogspot.tw/2013/09/routeros-hinet-ipv6-dual-stack.html">Hinet IPv6 Dual Stack</a> 給配置完畢了，接下來要使用 SLAAC + Stateless DHCPv6 來配置 IPv6 Address 及 IPv6 DNS Server。</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h4 id="1-開啟-IP-DNS-，配置-IPv6-DNS-Server"><a href="#1-開啟-IP-DNS-，配置-IPv6-DNS-Server" class="headerlink" title="1.開啟 IP/DNS ，配置 IPv6 DNS Server"></a>1.開啟 <code>IP/DNS</code> ，配置 <code>IPv6 DNS Server</code></h4><img src="/2014/11/13/RouterOS-Stateless-Address-Autoconfiguration-SLAAC-Stateless-DHCPv6-%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/DHCPv6_001.jpg" class="">

<span id="more"></span> 
<h4 id="2-開啟-IPv6-DHCPv6-Server-，新增-DHCPv6-Server-並啟用它"><a href="#2-開啟-IPv6-DHCPv6-Server-，新增-DHCPv6-Server-並啟用它" class="headerlink" title="2.開啟 IPv6/DHCPv6 Server ，新增 DHCPv6 Server 並啟用它"></a>2.開啟 <code>IPv6/DHCPv6 Server</code> ，新增 <code>DHCPv6 Server</code> 並啟用它</h4><img src="/2014/11/13/RouterOS-Stateless-Address-Autoconfiguration-SLAAC-Stateless-DHCPv6-%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/DHCPv6_002.jpg" class="">


<h4 id="3-開啟-IPv6-ND，確定-Other-Configuration-是勾起的"><a href="#3-開啟-IPv6-ND，確定-Other-Configuration-是勾起的" class="headerlink" title="3.開啟 IPv6/ND，確定 Other Configuration 是勾起的"></a>3.開啟 <code>IPv6/ND</code>，確定 <code>Other Configuration</code> 是勾起的</h4><img src="/2014/11/13/RouterOS-Stateless-Address-Autoconfiguration-SLAAC-Stateless-DHCPv6-%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/DHCPv6_003.jpg" class="">


<p><strong>這邊說明一下四個選項的意義：</strong></p>
<ul>
<li><code>Advertise MAC Address</code> : 預設是勾起，決定 Router Advertisement (RA) 是否自帶介面 MAC Address。</li>
<li><code>Advertise DNS</code> : 決定 Router Advertisement (RA) 是否自帶 DNS Server 資訊，若勾起則為 SLAAC + RDNSS ，目前 Windows 尚未支援。</li>
<li><code>Managed Adddress Configuration</code> : 決定是否由 DHCPv6 Server 發送 IPv6 Address ，若勾起則為 Stateful DHCPv6，經測試後發現尚有問題 (ver. 6.20)。</li>
<li><code>Other Configuration</code> : 決定是否向 DHCPv6 Server 要求 DNS 資訊等等，單獨勾起不會要求 IPv6 Address，此為 Stateless DHCPv6。</li>
</ul>
<p>設定到這邊就可以去確定 Client 是否有配置成功 IPv6 Address 及 IPv6 DNS Server 了，<br>如果配置正確會如下圖：</p>
<img src="/2014/11/13/RouterOS-Stateless-Address-Autoconfiguration-SLAAC-Stateless-DHCPv6-%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/DHCPv6_004.jpg" class="">


<p>成功！若有任何設定上的疑問皆可在下方發問，我會盡快回覆。</p>
<h4 id="11-x2F-15-新增-MikroTik-回信"><a href="#11-x2F-15-新增-MikroTik-回信" class="headerlink" title="11&#x2F;15 新增 MikroTik 回信"></a>11&#x2F;15 新增 MikroTik 回信</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello, </span><br><span class="line">RouterOS does not have DHCPv6 implementation. </span><br><span class="line">All address negotiation is done only via RA. </span><br><span class="line">But you can add DHCP-PD server &#x27;/ipv6 dhcp-server&#x27; and </span><br><span class="line">if you have ipv6 ip addresses set as DNS servers router </span><br><span class="line">will give them out to clients asking for it.</span><br><span class="line"></span><br><span class="line">Regards, </span><br><span class="line"></span><br><span class="line">Janis K.</span><br></pre></td></tr></table></figure>
<p>看起來是確定不支援 Stateful DHCPv6 了。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://www.gsnv6.tw/docu/SOP/08.IPv6_SOP_Home_Gateway.pdf">IPv6 升級實作技術手冊第1.1版</a></li>
<li><a href="http://www.lijyyh.com/2012/04/ipv6ipv6-auto-configuration.html">傲笑紅塵路: IPv6自動組態配置(IPv6 Auto configuration)</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>RouterOS</tag>
        <tag>DHCPv6</tag>
      </tags>
  </entry>
  <entry>
    <title>[Raspberry Pi] 利用 syslog-ng 收取 RouterOS 的 Log</title>
    <url>/2017/03/22/Raspberry-Pi-%E5%88%A9%E7%94%A8-syslog-ng-%E6%94%B6%E5%8F%96-RouterOS-%E7%9A%84-Log/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近剛好有將 Syslog 備存的需求，就用擱置在旁的 Raspberry Pi 來當 Syslog Server 吧！</p>
<h1 id="操作準備"><a href="#操作準備" class="headerlink" title="操作準備"></a>操作準備</h1><p>版本：<a href="http://dietpi.com/downloads/images/DietPi_RPi-armv6-%28Jessie%29.7z">DietPi_v145_RPi-armv6-(Jessie)</a></p>
<p>燒錄進記憶卡後開機並將基本設定完畢，本次教學會略過 DietPi 的基礎設定。</p>
<h1 id="本文"><a href="#本文" class="headerlink" title="本文"></a>本文</h1><ul>
<li>安裝 <code>syslog-ng</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# apt-get install syslog-ng</span><br></pre></td></tr></table></figure>
<span id="more"></span> </li>
<li>編輯 <code>syslog-ng</code> 的設定檔<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# nano /etc/syslog-ng/syslog-ng.conf</span><br></pre></td></tr></table></figure></li>
<li>在 <code>SOURCES</code> 前貼上這段後存檔<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Accept connection on UDP</span><br><span class="line">source s_net &#123; udp (); &#125;;</span><br><span class="line"># MIKROTIK ###########</span><br><span class="line"># Add Filter to add our mikroti</span><br><span class="line">filter f_mikrotik &#123; host( &quot;Your_Router_IP_Addr&quot; ); &#125;;</span><br><span class="line"># Add destination file where logs will be stored</span><br><span class="line">#destination df_mikrotik &#123; file(&quot;/var/log/mikrotik.log&quot;); &#125;;</span><br><span class="line">log &#123; source ( s_net ); filter( f_mikrotik ); destination ( df_mikrotik ); &#125;;</span><br><span class="line">destination df_mikrotik &#123;</span><br><span class="line">file(&quot;/var/log/mikrotik/mikrotik.$&#123;YEAR&#125;.$&#123;MONTH&#125;.$&#123;DAY&#125;.log&quot;</span><br><span class="line"># template(&quot;$&#123;HOUR&#125;:$&#123;MIN&#125;:$&#123;SEC&#125; $&#123;HOST&#125; $&#123;MSG&#125; $&#123;MSG&#125;\n&quot;)</span><br><span class="line">template-escape(no));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>在 <code>/var/log</code> 下新增 <code>mikrotik</code> 資料夾<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# mkdir /var/log/mikrotik</span><br></pre></td></tr></table></figure></li>
<li>重新啟動 syslog-ng 服務來套用新的設定檔<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# service syslog-ng restart</span><br></pre></td></tr></table></figure></li>
<li>將 syslog-ng 設定成開機自動啟動<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# update-rc.d syslog-ng defaults</span><br></pre></td></tr></table></figure></li>
<li>重新開機<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# reboot</span><br></pre></td></tr></table></figure></li>
<li>確認 syslog-ng 是否有自動啟動<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# htop</span><br></pre></td></tr></table></figure></li>
<li>檢查 Log 是否有正確進到 Syslog Server<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@DietPi:~# tail -f /var/log/mikrotik/mikrotik.YYYY.MM.DD.log</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://aacable.wordpress.com/tag/howto-send-mikrotik-logs-to-remote-syslog-server/">Howto Save Mikrotik Logs to Remote SYSLOG Server</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>RaspberryPi</tag>
        <tag>RouterOS</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 實作 VLAN Trunk 讓 MOD 流量通過 Switch 並隔離其他上網流量</title>
    <url>/2017/03/26/RouterOS-%E5%AF%A6%E4%BD%9C-VLAN-Trunk-%E8%AE%93-MOD-%E6%B5%81%E9%87%8F%E9%80%9A%E9%81%8E-Switch-%E4%B8%A6%E9%9A%94%E9%9B%A2%E5%85%B6%E4%BB%96%E4%B8%8A%E7%B6%B2%E6%B5%81%E9%87%8F/</url>
    <content><![CDATA[<h1 id="架構圖"><a href="#架構圖" class="headerlink" title="架構圖"></a>架構圖</h1><img src="/2017/03/26/RouterOS-%E5%AF%A6%E4%BD%9C-VLAN-Trunk-%E8%AE%93-MOD-%E6%B5%81%E9%87%8F%E9%80%9A%E9%81%8E-Switch-%E4%B8%A6%E9%9A%94%E9%9B%A2%E5%85%B6%E4%BB%96%E4%B8%8A%E7%B6%B2%E6%B5%81%E9%87%8F/MikroTik_MOD.jpg" class="">


<span id="more"></span> 

<h1 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h1><ul>
<li>Home Gateway 到 MOD 只有一條線，想要在那條線後接除了 MOD 外的設備</li>
<li>將 RB750GL 當成網管型 Switch 使用</li>
<li>MOD 為 VLAN 100，其餘設備皆為 VLAN 1</li>
</ul>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h3 id="MikroTik-hEX"><a href="#MikroTik-hEX" class="headerlink" title="MikroTik hEX"></a>MikroTik hEX</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/interface ethernet</span><br><span class="line">set [ find default-name=ether1 ] master-port=none name=ether1-gateway</span><br><span class="line">set [ find default-name=ether2 ] master-port=none name=ether2-master-local</span><br><span class="line">set [ find default-name=ether3 ] master-port=ether2-master-local name=ether3-slave-local</span><br><span class="line">set [ find default-name=ether4 ] master-port=ether2-master-local name=ether4-slave-local</span><br><span class="line">set [ find default-name=ether5 ] master-port=none name=ether5-Hinet-MOD</span><br><span class="line"></span><br><span class="line">/interface ethernet switch port</span><br><span class="line">set 0 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 1 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 2 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 3 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 4 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 5 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line"></span><br><span class="line">/interface vlan</span><br><span class="line">add interface=ether5-Hinet-MOD name=eth5_vlan100_MOD vlan-id=100</span><br><span class="line">add interface=ether5-Hinet-MOD name=eth5_vlan1_LAN vlan-id=1</span><br><span class="line"></span><br><span class="line">/interface bridge</span><br><span class="line">add name=bridge_vlan1</span><br><span class="line">add name=bridge_vlan100</span><br><span class="line"></span><br><span class="line">/interface bridge port</span><br><span class="line">add bridge=bridge_vlan1 interface=ether2-master-local</span><br><span class="line">add bridge=bridge_vlan1 interface=eth5_vlan1_LAN</span><br><span class="line">add bridge=bridge_vlan100 interface=eth5_vlan100_MOD</span><br><span class="line">add bridge=bridge_vlan100 interface=ether1-gateway</span><br></pre></td></tr></table></figure>
<img src="/2017/03/26/RouterOS-%E5%AF%A6%E4%BD%9C-VLAN-Trunk-%E8%AE%93-MOD-%E6%B5%81%E9%87%8F%E9%80%9A%E9%81%8E-Switch-%E4%B8%A6%E9%9A%94%E9%9B%A2%E5%85%B6%E4%BB%96%E4%B8%8A%E7%B6%B2%E6%B5%81%E9%87%8F/hex.jpg" class="">


<ul>
<li><code>PPPoE</code> 撥號介面請改為 <code>bridge_vlan100</code></li>
<li><code>DHCP Server / IPv4 Address</code> 介面請改為 <code>bridge_vlan1</code></li>
</ul>
<h3 id="MikroTik-RB750GL"><a href="#MikroTik-RB750GL" class="headerlink" title="MikroTik RB750GL"></a>MikroTik RB750GL</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/interface ethernet switch port</span><br><span class="line">set 0 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 1 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 2 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 3 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 4 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line">set 5 vlan-mode=disabled vlan-header=leave-as-is default-vlan-id=auto </span><br><span class="line"></span><br><span class="line">/interface ethernet</span><br><span class="line">set [ find default-name=ether2 ] master-port=none name=ether2-RPI</span><br><span class="line">set [ find default-name=ether3 ] master-port=none name=ether3-1043ND</span><br><span class="line">set [ find default-name=ether4 ] master-port=none name=ether4-MOD</span><br><span class="line">set [ find default-name=ether5 ] master-port=none name=ether5-hEX</span><br><span class="line"></span><br><span class="line">/interface vlan</span><br><span class="line">add interface=ether5-hEX name=eth5_vlan100_MOD vlan-id=100</span><br><span class="line">add interface=ether5-hEX name=eth5_vlan1_LAN vlan-id=1</span><br><span class="line"></span><br><span class="line">/interface bridge</span><br><span class="line">add name=bridge_vlan1</span><br><span class="line">add name=bridge_vlan100</span><br><span class="line"></span><br><span class="line">/interface bridge port</span><br><span class="line">add bridge=bridge_vlan100 interface=eth5_vlan100_MOD</span><br><span class="line">add bridge=bridge_vlan100 interface=ether4-mod</span><br><span class="line">add bridge=bridge_vlan1 interface=eth5_vlan1_LAN</span><br><span class="line">add bridge=bridge_vlan1 interface=ether1</span><br><span class="line">add bridge=bridge_vlan1 interface=ether2-RPI</span><br><span class="line">add bridge=bridge_vlan1 interface=ether3-1043ND</span><br></pre></td></tr></table></figure>
<img src="/2017/03/26/RouterOS-%E5%AF%A6%E4%BD%9C-VLAN-Trunk-%E8%AE%93-MOD-%E6%B5%81%E9%87%8F%E9%80%9A%E9%81%8E-Switch-%E4%B8%A6%E9%9A%94%E9%9B%A2%E5%85%B6%E4%BB%96%E4%B8%8A%E7%B6%B2%E6%B5%81%E9%87%8F/750GL.jpg" class="">


<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://wiki.mikrotik.com/wiki/Manual:Interface/VLAN">Manual:Interface&#x2F;VLAN</a></li>
<li><a href="https://www.mobile01.com/topicdetail.php?f=110&t=4393418&p=1">使用VLAN連接MOD Part 1</a></li>
<li><a href="http://deanma.blogspot.tw/2015/06/routeros-vlan-cht-mod.html">[RouterOS] 透過BRIDGE(軟體式)作VLAN連接MOD 實做紀錄</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>MOD</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] 自動將 Log 郵寄至 E-Mail</title>
    <url>/2017/04/01/RouterOS-%E8%87%AA%E5%8B%95%E5%B0%87-Log-%E9%83%B5%E5%AF%84%E8%87%B3-E-Mail/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前陣子使用了 syslog-ng 來收 log，但是要看 log 還要登入進 Raspberry Pi 上看略嫌麻煩，不如讓 RouterOS 定時寄到我信箱看比較方便些。（本腳本適用於每日 log 量不大的家用設備，一天會超過兩三千條的還是乖乖用 syslog server 吧！）</p>
<span id="more"></span> 
<h1 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#read log</span><br><span class="line">:local logcontent</span><br><span class="line">:foreach int in=[/log find ] do=&#123;</span><br><span class="line">:set logcontent (&quot;$logcontent\r\n&quot; .[/log get $int time]. &quot; - &quot; .[/log get $int message])</span><br><span class="line">&#125;</span><br><span class="line">#send email</span><br><span class="line">/tool e-mail send to=&quot;example@email.com&quot; subject=(&quot;[Syslog] &quot; . &quot;Mikrotik &quot; . [/system clock get date]) body=$logcontent</span><br><span class="line">#delete old log</span><br><span class="line">/system logging action set memory memory-lines=1</span><br><span class="line">/system logging action set memory memory-lines=500</span><br><span class="line">:log info &quot;finishing the log dump&quot;</span><br></pre></td></tr></table></figure>

<h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><ul>
<li>首先在 <strong>&#x2F;system script</strong> 下新增腳本，將上面那段腳本貼上</li>
<li>在 <strong>&#x2F;system scheduler</strong> 下新增行程，輸入 <code>/system script run LogDump</code><br> 我是設定每 6 小時寄送一次，因為這個腳本一次寄送上限大概是 500 條 log 左右，<br> 如果設備每天的 log 不多，可以調整為每 12 小時或是每 24 小時寄送一次就好。</li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://forum.mikrotik.com/viewtopic.php?t=22207">script to save logs and send via email</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>Script</tag>
      </tags>
  </entry>
  <entry>
    <title>[網路] 淺談 STP - Spanning Tree Protocol</title>
    <url>/2017/04/01/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-STP-Spanning-Tree-Protocol/</url>
    <content><![CDATA[<h1 id="名詞介紹"><a href="#名詞介紹" class="headerlink" title="名詞介紹"></a>名詞介紹</h1><ul>
<li><code>Bridge ID</code> (8 Bytes)</li>
<li><code>Priority Part</code> (2 Bytes) : programmable (可程式設定)</li>
<li><code>Address Part</code> (6 Bytes) : MAC-address</li>
<li><code>Root Bridge</code> : Bridge ID 最小的為 Root Bridge。</li>
<li><code>Path Cost</code> (路徑成本) : 每個 Port 所需的傳送成本。</li>
<li><code>Root Port</code> : 每個 Bridge，往 Root Bridge 路徑成本最低的 Port。</li>
<li><code>Root Port Cost</code> : Root Port 的路徑成本。</li>
<li><code>Designated Bridge</code> :  每個 LAN 都會有一個代理 Bridge，該 Bridge 可以提供往 Root Bridge 最低的路徑成本，且該 LAN 所有進出流量統一由該 LAN 代理。</li>
</ul>
<span id="more"></span> 

<img src="/2017/04/01/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-STP-Spanning-Tree-Protocol/STP_01.jpg" class="">


<p>若有兩條以上路徑成本相同，則將 Bridge ID 較小的設為Designated Bridge。</p>
<ul>
<li><code>Designated Port</code> : 和 Designated Bridge 代理的 LAN 接入的 Port</li>
</ul>
<h1 id="收斂三步驟"><a href="#收斂三步驟" class="headerlink" title="收斂三步驟"></a>收斂三步驟</h1><ol>
<li>尋找 <code>Root Bridge</code> ( <code>Bridge ID</code> 最小 )</li>
<li>尋找其他<code>非 Root Bridge</code> 的 <code>Root Port</code><br>( 往 <code>Root Bridge</code> 最小成本之 Port，且 <code>Port ID</code> 最小的 )</li>
<li>找出每個 LAN 的 <code>Designated Bridge</code><br>( 擁有 LAN 到 <code>Root Bridge</code> 最小成本的路徑 ，若成本一樣則比 <code>Bridge ID/Port ID</code> )</li>
<li>剩下不是 DP 和 RP 的 Port 將會被 Block</li>
</ol>
<p><del>三步驟有四項也是很正常的</del></p>
<h1 id="Spanning-Tree-Port-States"><a href="#Spanning-Tree-Port-States" class="headerlink" title="Spanning Tree Port States"></a>Spanning Tree Port States</h1><p><code>Listening</code> : (會接收 BPDU 以及發送自身 BPDU)<br>起始時每個 Bridge 會認為自身擁有最小 Bridge ID (此時所有 Port 為 DP)，直到某一 Port 收到其他較小 BID 之 BPDU，該 Port 會轉為 RP 且會協助轉發較小 BID 之 BPDU 出去。<br>若又有更小 BID 之 BPDU 經過其他 DP，則該 DP 會取代原 RP 成為唯一 RP。</p>
<p><em>經過 15 秒後未變更</em></p>
<p><code>Learning</code> : 能夠學習 MAC 了，但仍無法轉送資料。</p>
<p><em>經過 15 秒後未變更</em></p>
<p><code>Forwarding</code> : 最終成為 D&#x2F;R Port，剩下沒有扮演任何角色的將會被 Block。</p>
<p><code>Blocking</code> : 剩下沒有扮演任何角色的將會被 Block，但能接收 BPDU 封包。</p>
<p><code>Disabled</code> : 管理者關閉，不參與 STP 運作。</p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>Spanning-Tree</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ubuntu] 使用 Github 架設 Octopress Blog</title>
    <url>/2017/06/01/Ubuntu-%E4%BD%BF%E7%94%A8-Github-%E6%9E%B6%E8%A8%AD-Octopress-Blog/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　最近寫 blog 時發現用 Markdown 語法來寫作效率快很多，可以省去一些無謂的排版精力，無奈 Blogger 不支援 Markdown，在網路上搜尋了一番找到了 Octopress，然而我並沒有使用 Github 的經驗，所以在這邊記錄一下我當初所遇到的問題。</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p><strong>安裝環境：Ubuntu 16.04</strong></p>
<h2 id="前置步驟"><a href="#前置步驟" class="headerlink" title="前置步驟"></a>前置步驟</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install ruby-dev</span><br><span class="line">apt-get install nodejs</span><br><span class="line">apt-get install rbenv</span><br><span class="line">gem install bundler</span><br><span class="line">rbenv rehash</span><br></pre></td></tr></table></figure>
<span id="more"></span> 

<h2 id="將-Octopress-給-git-clone-下來"><a href="#將-Octopress-給-git-clone-下來" class="headerlink" title="將 Octopress 給 git clone 下來"></a>將 Octopress 給 git clone 下來</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/imathis/octopress</span><br><span class="line">cd octopress</span><br><span class="line">bundle install</span><br><span class="line">rake install</span><br></pre></td></tr></table></figure>

<h2 id="輸入-Github-Page-連結"><a href="#輸入-Github-Page-連結" class="headerlink" title="輸入 Github Page 連結"></a>輸入 Github Page 連結</h2><p>先到 <a href="https://github.com/new">https://github.com/new</a> 新建一個 <code>Repository</code></p>
<p><code>Repository name</code> 內輸入 <code>username.github.io</code></p>
<p>記得不要勾選 <code>initialize this repository with a README</code></p>
<p>送出後你會得到一個 <code>git@github.com:username/username.github.io.git</code> 的格式</p>
<p>回來 Ubuntu 輸入指令並將剛剛獲得的 SSH 位置給填進去</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rake setup_github_pages</span><br></pre></td></tr></table></figure>

<h2 id="生成靜態網頁並上傳到-Github-Page"><a href="#生成靜態網頁並上傳到-Github-Page" class="headerlink" title="生成靜態網頁並上傳到 Github Page"></a>生成靜態網頁並上傳到 Github Page</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rake generate</span><br><span class="line">rake deploy</span><br></pre></td></tr></table></figure>

<p>如果你 <code>rake deploy</code> 時遇到 <code>Public Key</code> 的問題，請你參考 <a href="https://git-scm.com/book/zh-tw/v1/%E4%BC%BA%E6%9C%8D%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%96%8B%E9%87%91%E9%91%B0">伺服器上的 Git - 生成 SSH 公開金鑰</a></p>
<p>生成完公開金鑰後，到 <a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 新增 <code>SSH Key</code></p>
<p>以上步驟都完成後，試著訪問 username.github.io 你應該可以看到一個初步的 Blog</p>
<h2 id="指定域名"><a href="#指定域名" class="headerlink" title="指定域名"></a>指定域名</h2><p>要綁定頂級域名的話，新增兩筆 A 記錄分別指到 <code>192.30.252.153</code> 及 <code>192.30.252.154</code></p>
<p>次級域名只需要新增一個 CNAME 記錄即可</p>
<p>新增完畢後回到主機上建立 CNAME 檔案即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;downager.com&#x27; &gt;&gt; source/CNAME</span><br></pre></td></tr></table></figure>

<h2 id="編輯網站設定"><a href="#編輯網站設定" class="headerlink" title="編輯網站設定"></a>編輯網站設定</h2><p>編輯 <code>/octopress</code> 底下的 <code> _config.yml</code> 來修改設定</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano _config.yml</span><br></pre></td></tr></table></figure>
<pre><code># ----------------------- #
#      Main Configs       #
# ----------------------- #

url: http://downager.com
title: Downager&#39;s 工作手札
subtitle: 記錄安裝上遇到的疑難雜症
author: Downager
simple_search: https://www.google.com/search
description:

# Default date format is &quot;ordinal&quot; (resulting in &quot;July 22nd 2007&quot;)
# You can customize the format as defined in
# http://www.ruby-doc.org/core-1.9.2/Time.html#method-i-strftime
# Additionally, %o will give you the ordinal representation of the day
date_format: &quot;ordinal&quot;
</code></pre>
<h2 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rake new_post[&quot;XXXXXXXXXX&quot;]</span><br></pre></td></tr></table></figure>
<p>新增完畢後到 	<code>source/_posts/</code> 底下去編輯 <code>YYYY-MM-DD-XXXXXXXXXX.markdown</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim source/_posts/YYYY-MM-DD-XXXXXXXXXX.markdown</span><br></pre></td></tr></table></figure>
<p>編輯完成後將文章發布</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rake generate</span><br><span class="line">rake deploy</span><br></pre></td></tr></table></figure>

<h2 id="上傳-Blog-原始文件到-Github"><a href="#上傳-Blog-原始文件到-Github" class="headerlink" title="上傳 Blog 原始文件到 Github"></a>上傳 Blog 原始文件到 Github</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#x27;your message&#x27;</span><br><span class="line">git push origin source</span><br></pre></td></tr></table></figure>

<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://becoder.org/github-octopress-install/">[Github] 使用 OctoPress 架設靜態 Blog</a></li>
<li><a href="https://git-scm.com/book/zh-tw/v1/%E4%BC%BA%E6%9C%8D%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%96%8B%E9%87%91%E9%91%B0">伺服器上的 Git - 生成 SSH 公開金鑰</a></li>
<li><a href="http://shengmingzhiqing.com/blog/setup-octopress-with-github-pages.html/">Octopress 搭建流程 – Github Pages</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Octopress</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ubuntu] 搭建 Socks5 &amp; PPTP 代理 with Google BBR</title>
    <url>/2017/06/01/Ubuntu-%E6%90%AD%E5%BB%BA-Socks5-amp-PPTP-%E4%BB%A3%E7%90%86-with-Google-BBR/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近測了 Google BBR 搭配 Socks5 的效果，速度簡直飛快，留個文章記錄安裝過程</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>安裝環境：Ubuntu 16.04</p>
<h2 id="首先更新下系統"><a href="#首先更新下系統" class="headerlink" title="首先更新下系統"></a>首先更新下系統</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get dist-upgrade -y</span><br></pre></td></tr></table></figure>

<span id="more"></span> 

<h2 id="安裝-Google-BBR"><a href="#安裝-Google-BBR" class="headerlink" title="安裝 Google BBR"></a>安裝 Google BBR</h2><p>使用腳本：<a href="https://teddysun.com/489.html">一键安装最新内核并开启 BBR 脚本</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure>


<h2 id="檢查-BBR-模塊是否啟用"><a href="#檢查-BBR-模塊是否啟用" class="headerlink" title="檢查 BBR 模塊是否啟用"></a>檢查 BBR 模塊是否啟用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>
<p>返回的值有 BBR 字樣就代表啟動成功</p>
<h2 id="安裝-Dante-Socks5-Server"><a href="#安裝-Dante-Socks5-Server" class="headerlink" title="安裝 Dante Socks5 Server"></a>安裝 Dante Socks5 Server</h2><p>使用腳本：<a href="https://github.com/Lozy/danted">Dante socks5 server</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.github.com/Lozy/danted/master/install.sh -O install.sh</span><br><span class="line">bash install.sh --port=30678 --user=Downager --passwd=1234 --whitelist=&quot;example.com&quot;</span><br></pre></td></tr></table></figure>



<h2 id="安裝-PPTP-Server"><a href="#安裝-PPTP-Server" class="headerlink" title="安裝 PPTP Server"></a>安裝 PPTP Server</h2><p>使用腳本：<a href="http://mednoter.com/install-pptp-in-ubuntu.html">Ubuntu 一键部署 PPTP</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://raw.github.com/viljoviitanen/setup-simple-pptp-vpn/master/setup.sh</span><br><span class="line">sh setup.sh</span><br></pre></td></tr></table></figure>



<h2 id="安裝完畢後到-etc-ppp-chap-secrets-配置一下用戶及密碼"><a href="#安裝完畢後到-etc-ppp-chap-secrets-配置一下用戶及密碼" class="headerlink" title="安裝完畢後到 /etc/ppp/chap-secrets 配置一下用戶及密碼"></a>安裝完畢後到 <code>/etc/ppp/chap-secrets</code> 配置一下用戶及密碼</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano /etc/ppp/chap-secrets</span><br><span class="line"></span><br><span class="line">    # Secrets for authentication using CHAP</span><br><span class="line">    # client server secret IP addresses</span><br><span class="line">    username pptpd password *</span><br></pre></td></tr></table></figure>

<h2 id="保存後，退出重啟-pptp-服務"><a href="#保存後，退出重啟-pptp-服務" class="headerlink" title="保存後，退出重啟 pptp 服務"></a>保存後，退出重啟 pptp 服務</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service pptpd restart</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ubuntu] 利用 Resilio Sync 將 Octopress 資料夾同步到本機</title>
    <url>/2017/06/02/Ubuntu-%E5%88%A9%E7%94%A8-Resilio-Sync-%E5%B0%87-Octopress-%E8%B3%87%E6%96%99%E5%A4%BE%E5%90%8C%E6%AD%A5%E5%88%B0%E6%9C%AC%E6%A9%9F/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　前陣子在 VPS 上弄好了 Octopress 的環境，但是不論是要上傳或備份檔案，透過文字介面來處理總是稍嫌麻煩，於是弄了個雙邊自動同步的軟體來達成要求</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p><strong>安裝環境：Ubuntu 16.04</strong></p>
<h2 id="首先添加-Resilio-的源"><a href="#首先添加-Resilio-的源" class="headerlink" title="首先添加 Resilio 的源"></a>首先添加 Resilio 的源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;deb http://linux-packages.resilio.com/resilio-sync/deb resilio-sync non-free&quot; | sudo tee /etc/apt/sources.list.d/resilio-sync.list</span><br><span class="line"></span><br><span class="line">wget -qO - https://linux-packages.resilio.com/resilio-sync/key.asc | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<h2 id="安裝-Resilio-Sync"><a href="#安裝-Resilio-Sync" class="headerlink" title="安裝 Resilio-Sync"></a>安裝 Resilio-Sync</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install resilio-sync</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<h2 id="編輯-config-json"><a href="#編輯-config-json" class="headerlink" title="編輯 config.json"></a>編輯 <code>config.json</code></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/resilio-sync/config.json</span><br></pre></td></tr></table></figure>
<p><strong>由於我們是遠端訪問，所以將 <code>listen</code> 的值修改為 <code>0.0.0.0:8888</code></strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;storage_path&quot; : &quot;/var/lib/resilio-sync/&quot;,</span><br><span class="line">    &quot;pid_file&quot; : &quot;/var/run/resilio-sync/sync.pid&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;webui&quot; :</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;listen&quot; : &quot;0.0.0.0:8888&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="重啟服務"><a href="#重啟服務" class="headerlink" title="重啟服務"></a>重啟服務</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart resilio-sync</span><br></pre></td></tr></table></figure>
<h2 id="使用-http-訪問-Resilio-Sync-服務"><a href="#使用-http-訪問-Resilio-Sync-服務" class="headerlink" title="使用 http 訪問 Resilio-Sync 服務"></a>使用 http 訪問 Resilio-Sync 服務</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://your_ip_addr:8888</span><br></pre></td></tr></table></figure>
<ul>
<li>進入後設定初始帳號密碼以及主機名稱</li>
<li>選擇要同步的資料夾（如果遇到問題請參考下列解法）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Don’t have permissions to write to selected folder.</span><br><span class="line">sudo setfacl -R -m &quot;u:rslsync:rwx&quot; /home/your-username</span><br></pre></td></tr></table></figure></li>
<li>選擇完成後複製可讀寫權限的金鑰</li>
<li>貼上本機的 Resilio-Sync 客戶端開始同步</li>
</ul>
<h2 id="設定-Resilio-Sync-自動啟動"><a href="#設定-Resilio-Sync-自動啟動" class="headerlink" title="設定 Resilio-Sync 自動啟動"></a>設定 Resilio-Sync 自動啟動</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable resilio-sync</span><br></pre></td></tr></table></figure>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://help.getsync.com/hc/en-us/articles/206178924">Installing Sync Package On Linux</a></li>
<li><a href="https://www.linuxbabe.com/ubuntu/install-resilio-sync-ubuntu-16-04-16-10">How to Install Resilio Sync on Ubuntu 16.04 and Ubuntu 16.10</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Resilio-Sync</tag>
      </tags>
  </entry>
  <entry>
    <title>[RouterOS] Namecheap DDNS 自動更新腳本</title>
    <url>/2017/06/03/RouterOS-Namecheap-DDNS-%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0%E8%85%B3%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近從 GoDaddy 轉換到 Namecheap，發現 Namecheap 有自動更新 <code>A Record</code> 的服務，<br>將別人提供的腳本簡單修改一下，提供給各位使用</p>
<h1 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h1><ul>
<li>首先先到 Namecheap 的 <a href="https://ap.www.namecheap.com/Domains/DomainControlPanel/downager.com/advancedns">Advanced DNS</a> 開啟 <code>DDNS</code> 服務以及抄下 <code>Dynamic DNS Password</code></li>
</ul>
<img src="/2017/06/03/RouterOS-Namecheap-DDNS-%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0%E8%85%B3%E6%9C%AC/Namecheap_001.jpg" class="">


<span id="more"></span> 

<ul>
<li>再來是新增一個 <code>A + Dynamic DNS Record</code><br>IP address 可以先隨意填，之後 DDNS 就會更新成正確的</li>
</ul>
<img src="/2017/06/03/RouterOS-Namecheap-DDNS-%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0%E8%85%B3%E6%9C%AC/Namecheap_002.jpg" class="">



<h1 id="腳本內容"><a href="#腳本內容" class="headerlink" title="腳本內容"></a>腳本內容</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Namecheap 的更新伺服器</span><br><span class="line">:global ddnsserv &quot;dynamicdns.park-your-domain.com&quot;</span><br><span class="line"># A Record 的 Host</span><br><span class="line">:global ddnshostname &quot;www&quot;</span><br><span class="line"># 你的域名</span><br><span class="line">:global ddnsdomain &quot;example.com&quot;</span><br><span class="line"># DDNS Password</span><br><span class="line">:global ddnspass &quot;e07910a2eb9943bad94014ad5ba54e83&quot;</span><br><span class="line"># 對外的 PPPoE 介面</span><br><span class="line">:global ddnsint &quot;Hinet-PPPoE-out&quot;</span><br><span class="line">:global ddnsip</span><br><span class="line">:global ddnslastip</span><br><span class="line"></span><br><span class="line">:global ddnsip [ /ip address get [/ip address find interface=$ddnsint ] address ]</span><br><span class="line"></span><br><span class="line"># Strip the net mask off the IP address</span><br><span class="line">:for i from=( [:len $ddnsip] - 1) to=0 do=&#123;</span><br><span class="line">    :if ( [:pick $ddnsip $i] = &quot;/&quot;) do=&#123; </span><br><span class="line">        :set ddnsip [:pick $ddnsip 0 $i]</span><br><span class="line">       &#125; </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">:if ([ :typeof $ddnslastip ] = nil ) do=&#123; :global ddnslastip &quot;0&quot; &#125;</span><br><span class="line">:if ([ :typeof $ddnsip ] = nil ) do=&#123;</span><br><span class="line">   :log info (&quot;DDNS: No ip address present on pppoe interface, dammit TM.&quot;)</span><br><span class="line">&#125; else=&#123;</span><br><span class="line">  :if ($ddnsip != $ddnslastip) do=&#123;</span><br><span class="line">    :log info (&quot;DDNS: Updating $ddnsip $ddnslastip&quot;)</span><br><span class="line">    :local str &quot;/update?host=$ddnshostname&amp;domain=$ddnsdomain&amp;password=$ddnspass&amp;ip=$ddnsip&quot;</span><br><span class="line">    /tool fetch address=$ddnsserv src-path=$str mode=http dst-path=(&quot;/disk1/NamecheapDDNS.&quot;.$ddnshostname)</span><br><span class="line">    :global ddnslastip &quot;$ddnsip&quot;</span><br><span class="line">  &#125; else=&#123; </span><br><span class="line"># 我把下面這行給註解掉了，每分鐘更新一次會一直跑 log 出來，你要抓問題再把註解去掉</span><br><span class="line">#    :log info &quot;DDNS: No update required.&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://wiki.mikrotik.com/wiki/Dynamic_DNS_Update_Script_for_Namecheap">Dynamic DNS Update Script for Namecheap</a></li>
<li><a href="https://www.namecheap.com/support/knowledgebase/article.aspx/29/11/how-do-i-use-a-browser-to-dynamically-update-the-hosts-ip">How do I use a browser to dynamically update the host’s IP?</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>RouterOS</tag>
        <tag>Script</tag>
        <tag>Namecheap</tag>
        <tag>DDNS</tag>
      </tags>
  </entry>
  <entry>
    <title>[教學] 如何用 Resilio Sync 快速分享以及接收檔案</title>
    <url>/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　原本分享檔案都是利用 <code>HFS</code>，但是對檔名有特殊符號的支援度不佳，以及分享大型檔案時續傳不易，決定使用 <code>Resilio Sync</code>  作為分享大型檔案的解決方案</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h3 id="接收檔案"><a href="#接收檔案" class="headerlink" title="接收檔案"></a>接收檔案</h3><ul>
<li>首先先到<a href="https://www.resilio.com/individuals/">官網</a>去下載軟體</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_001.jpg" class="">

<span id="more"></span> 
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_002.jpg" class="">


<ul>
<li>自行決定是否要開機自動啟動</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_003.jpg" class="">


<ul>
<li>設定你的名稱</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_004.jpg" class="">


<ul>
<li>選擇 <code>輸入金鑰或連結</code></li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_005.jpg" class="">


<ul>
<li>輸入金鑰</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_006.jpg" class="">


<ul>
<li>選擇資料夾存放位置</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_007.jpg" class="">


<ul>
<li>開始同步</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_008.jpg" class="">


<h3 id="分享檔案"><a href="#分享檔案" class="headerlink" title="分享檔案"></a>分享檔案</h3><ul>
<li>選擇 <code>標準資料夾</code> 以及選擇要分享的資料夾位置</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_009.jpg" class="">


<ul>
<li>複製金鑰，有分 <code>唯讀</code> 或 <code>可讀寫</code> 兩種，單純分享檔案選擇 <code>唯讀</code> 即可。<br>若要雙邊協作同步檔案，那就選擇 <code>可讀寫</code> 金鑰</li>
</ul>
<img src="/2017/06/04/%E6%95%99%E5%AD%B8-%E5%A6%82%E4%BD%95%E7%94%A8-Resilio-Sync-%E5%BF%AB%E9%80%9F%E5%88%86%E4%BA%AB%E4%BB%A5%E5%8F%8A%E6%8E%A5%E6%94%B6%E6%AA%94%E6%A1%88/Resilio_010.jpg" class="">
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Resilio-Sync</tag>
        <tag>教學</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ubuntu] 使用 PuTTY 產生的 SSH KEY 來達到免密碼登入</title>
    <url>/2017/06/11/Ubuntu-%E4%BD%BF%E7%94%A8-PuTTY-%E7%94%A2%E7%94%9F%E7%9A%84-SSH-KEY-%E4%BE%86%E9%81%94%E5%88%B0%E5%85%8D%E5%AF%86%E7%A2%BC%E7%99%BB%E5%85%A5/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　最近看了一下 VPS 的 log，發現一直有人在踹密碼，所以決定把 ssh 密碼驗證給關掉，改用 SSH KEY 來做登入驗證。</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h4 id="1-產生一對公私鑰"><a href="#1-產生一對公私鑰" class="headerlink" title="1. 產生一對公私鑰"></a>1. 產生一對公私鑰</h4><ul>
<li>首先在 Windows 上執行 <code>PuTTYgen</code></li>
<li>選擇 <code>Genarate a public/private key pair</code></li>
<li>產生後將 <code>Private Key</code> 給儲存起來</li>
<li>接下來將 <code>Public Key</code> 欄位複製起來，待會要用</li>
</ul>
<span id="more"></span> 

<h4 id="2-將公鑰儲存至遠端主機"><a href="#2-將公鑰儲存至遠端主機" class="headerlink" title="2. 將公鑰儲存至遠端主機"></a>2. 將公鑰儲存至遠端主機</h4><ul>
<li>登入遠端主機</li>
<li>編輯 <code>.ssh/authorized_keys</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim .ssh/authorized_keys</span><br></pre></td></tr></table></figure></li>
<li>將剛剛複製的 <code>public key</code> 給貼上，<code>authorized_keys</code> 可以儲存複數支公鑰</li>
<li>儲存完畢後登出</li>
</ul>
<h4 id="3-使用-PuTTY-測試登入"><a href="#3-使用-PuTTY-測試登入" class="headerlink" title="3. 使用 PuTTY 測試登入"></a>3. 使用 PuTTY 測試登入</h4><ul>
<li>打開 <code>PuTTY</code></li>
<li>到左半邊的 <code>Connection &gt; SSH &gt; Auth</code> 內找到 <code>Private key file for authentication</code> 選擇剛剛儲存的私鑰</li>
<li>回到 <code>Session</code>，輸入遠端主機 IP 位置<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username@192.168.1.1</span><br></pre></td></tr></table></figure></li>
<li>測試一下是否能正常登入</li>
</ul>
<h4 id="4-修改-ssh-設定"><a href="#4-修改-ssh-設定" class="headerlink" title="4. 修改 ssh 設定"></a>4. 修改 ssh 設定</h4><ul>
<li><p>成功的話接下來編輯 <code>/etc/ssh/sshd_config</code> 關閉密碼驗證</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li>
<li><p>找到下面兩行，關閉 root 登入以及關閉密碼驗證</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PermitRootLogin no</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure>
</li>
<li><p>儲存後重啟服務 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="5-使用-PuTTY-確認密碼驗證及-root-帳號登入是否成功關閉"><a href="#5-使用-PuTTY-確認密碼驗證及-root-帳號登入是否成功關閉" class="headerlink" title="5. 使用 PuTTY 確認密碼驗證及 root 帳號登入是否成功關閉"></a>5. 使用 PuTTY 確認密碼驗證及 root 帳號登入是否成功關閉</h4><ul>
<li>成功關閉的話 PuTTY 會彈出下列訊息<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Disconnected: No supported authentication methods available (server sent: publickey)</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="http://xtony77.logdown.com/posts/209067-ubuntu-notes-using-ssh-key-login">Ubuntu筆記 - 使用 SSH key 登入</a></li>
<li><a href="https://support.rackspace.com/how-to/logging-in-with-an-ssh-private-key-on-windows/">Log in with an SSH Private Key on Windows</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>PuTTY</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows] 解決 Win10 安裝時無法選擇版本的問題</title>
    <url>/2017/07/30/Windows-%E8%A7%A3%E6%B1%BA-Win10-%E5%AE%89%E8%A3%9D%E6%99%82%E7%84%A1%E6%B3%95%E9%81%B8%E6%93%87%E7%89%88%E6%9C%AC%E7%9A%84%E5%95%8F%E9%A1%8C/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>現在新的套裝主機都已經把 Windows 序號內置進 BIOS 裡了，導致全新安裝系統時會自動選擇和序號匹配的版本，無法自行決定要安裝哪個版本。</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><ul>
<li>將 Windows 安裝 iso 寫進隨身碟裡，通常是使用 Rufus</li>
<li><code>X:\sources\</code> 底下使用記事本新增 <code>ei.cfg</code></li>
<li>在 <code>ei.cfg</code> 內新增以下內容<span id="more"></span> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[EditionID]</span><br><span class="line"></span><br><span class="line">[Channel]</span><br><span class="line">Retail</span><br><span class="line">[VL]</span><br><span class="line">0</span><br></pre></td></tr></table></figure></li>
<li>保存退出，重開機以後選單就會自動出來了</li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://msdn.microsoft.com/zh-tw/library/hh824952.aspx">Windows 安裝程式版本設定和產品識別碼檔案 EI.cfg和 PID.txt</a></li>
<li><a href="http://club.lenovo.cn/detail/1935300/12916636">重装Win10专业版（防止出现无法选择版本从而默认安装家庭版的情况</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>隨筆</tag>
      </tags>
  </entry>
  <entry>
    <title>[心得] uTorrent 無痛轉 qBittorrent 工具介紹</title>
    <url>/2018/03/15/%E5%BF%83%E5%BE%97-uTorrent-%E7%84%A1%E7%97%9B%E8%BD%89-qBittorrent-%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%B4%B9/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近 uTorrent 爆出 3.x 版本 WebUI 有漏洞，導致各大 PT 站不再支援 uTorrent 3.x<br>需要尋找一個無痛轉換的工具，在網上找了找總算找到，分享給大家</p>
<h1 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h1><ol>
<li>種子名不同但內容相同的種子會重新下載，多站輔種的記得先限速 1KB</li>
<li>種子路徑有 Junction Link 的會有問題，請多注意</li>
<li>下載中的種子也會遷移，建議是都完種了再來搬家</li>
<li>搬家前可以把 <code>未完成檔案加上 .!qb 副檔名</code> 功能給拿掉，避免意外</li>
<li>謹慎操作，隨手備份，本人不為你的檔案負任何責任</li>
</ol>
<span id="more"></span> 

<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><ol>
<li>完全關閉 uTorrent 以及 qBittorrent 客戶端</li>
<li>下載 <a href="%5C2018%5C03%5C15%5C%E5%BF%83%E5%BE%97-uTorrent-%E7%84%A1%E7%97%9B%E8%BD%89-qBittorrent-%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%B4%B9%5Cut2qt_20150911.7z">ut2qt.exe</a>，不能運作請下載 <a href="%5C2018%5C03%5C15%5C%E5%BF%83%E5%BE%97-uTorrent-%E7%84%A1%E7%97%9B%E8%BD%89-qBittorrent-%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%B4%B9%5Cut2qt.7z">舊版本</a></li>
<li>開啟 cmd 命令提示列，並 cd 到 <code>ut2qt.exe</code> 所在目錄</li>
<li>執行 ut2qt.exe <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ut2qt.exe &quot;C:\Users\&lt;username&gt;\AppData\Roaming\uTorrent\resume.dat&quot; &quot;C:\Users\&lt;username&gt;\AppData\Local\qBittorrent\BT_backup\&quot;</span><br></pre></td></tr></table></figure></li>
<li>等待執行完成後開啟 qBittorrent 檢查種子是否遷移完成</li>
</ol>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://qbforums.shiki.hu/index.php?topic=3224.0">Migrate from uTorrent to qBittorrent easily</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>BitTorrent</tag>
      </tags>
  </entry>
  <entry>
    <title>[記錄] WhatsUP Gold 資料庫已滿處理方法</title>
    <url>/2018/03/22/%E8%A8%98%E9%8C%84-WhatsUP-Gold-%E8%B3%87%E6%96%99%E5%BA%AB%E5%B7%B2%E6%BB%BF%E8%99%95%E7%90%86%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天登入 WUG 主控台發現 DB 滿了，頂到 SQL SERVER 2005 EXPRESS 的上限 4GB，<br>查了下官方文檔可以清除以下幾個 table 而不影響系統運作，所以在這邊留個操作記錄</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><ul>
<li><p>請先登入WinServer桌面</p>
</li>
<li><p>打開 WUG Administration Console 停止所有 Ipswitch 服務和應用程式：</p>
<ul>
<li>Ipswitch WhatsUp 軟體引擎</li>
<li>Ipswitch Web Server$WhatsUp</li>
<li>Ipswitch Discovery</li>
<li>Ipswitch 警報中心</li>
<li>Ipswitch Flow Collector</li>
</ul>
</li>
</ul>
<span id="more"></span> 

<ul>
<li>執行 cmd ，貼上以下指令</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;sqlcmd -E -S &quot;%COMPUTERNAME%\WHATSUP&quot;</span><br><span class="line"></span><br><span class="line">truncate table WhatsUp.dbo.PassiveMonitorActivityLog;</span><br><span class="line">truncate table WhatsUp.dbo.StatisticalPing;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalinterface;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalpingpacketloss;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalping;</span><br><span class="line">truncate table WhatsUp.dbo.statisticaldisk;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalpingcache;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalpingpacketlosscache;</span><br><span class="line">truncate table WhatsUp.dbo.activemonitorstatechangelog;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalmemory;</span><br><span class="line">truncate table WhatsUp.dbo.statisticalnumeric;</span><br><span class="line">truncate table WhatsUp.dbo.actionactivitylog;</span><br><span class="line">truncate table WhatsUp.dbo.passivemonitoractivitylog;</span><br><span class="line">truncate table WhatsUp.dbo.generalerrorlog;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line">DBCC SHRINKDATABASE (&#x27;WhatsUp&#x27;);</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>
<ul>
<li>重新啟用服務</li>
</ul>
<p>執行完畢後從 4GB 縮到剩 1310 MB，減少了 68%  左右。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://community.ipswitch.com/s/article/Database-Maintenance-Cleanup">Database Maintenance and Cleanup</a></li>
<li><a href="https://docs.ipswitch.com/NM/74_WhatsUpGoldv16/03_Help/1028/index.htm?31698.htm?toc.htm">縮減 PassiveMonitorActivityLog</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>WhatsUP-Gold</tag>
        <tag>Database</tag>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>[翻牆] 2018 ShadowsocksR 安裝及設定推薦</title>
    <url>/2018/03/24/%E7%BF%BB%E7%89%86-2018-ShadowsocksR-%E5%AE%89%E8%A3%9D%E5%8F%8A%E8%A8%AD%E5%AE%9A%E6%8E%A8%E8%96%A6/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近朋友要去中國，幫忙研究一下了翻牆軟體，以下是我從網路上資料整理出來的安裝和設定推薦</p>
<h2 id="SSR-安裝-Ubuntu-16-04"><a href="#SSR-安裝-Ubuntu-16-04" class="headerlink" title="SSR 安裝 (Ubuntu 16.04)"></a>SSR 安裝 (Ubuntu 16.04)</h2><p>以下使用 <strong>秋水逸冰</strong> 撰寫的一鍵腳本 <a href="https://teddysun.com/486.html">Shadowsocks 一键安装脚本（四合一）</a></p>
<ul>
<li><p>使用 root 用戶執行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</span><br><span class="line">chmod +x shadowsocks-all.sh</span><br><span class="line">./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<p>選擇安裝 SSR，配置按照以下推薦方案選擇</p>
</li>
<li><p><strong>翻牆用 避免被 GFW 封鎖</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 端口 : 不要使用 80,443 等常見端口，避免被主動探測是否有正常網頁服務在運作</span><br><span class="line">- 加密 : none</span><br><span class="line">- 協議 : auth_chain_a</span><br><span class="line">- 混淆 : plain</span><br></pre></td></tr></table></figure>
<p>auth_chain_a 自帶加密，故不需要二次加密<br>若非遭到 QoS 或是網路出口對對外流量限制較嚴格(只放行網頁流量)，不需要開啟混淆</p>
</li>
<li><p><strong>混淆流量躲避網路出口 QoS 用</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 端口 : 推薦 443</span><br><span class="line">- 加密 : none</span><br><span class="line">- 協議 : auth_chain_a 或是 chain_b,c,d 後者封包分布大小更加規整，避免遭到分析，根據客戶端能支援到那些做選擇</span><br><span class="line">- 混淆 : tls1.2_ticket_auth</span><br></pre></td></tr></table></figure>
<p>設定端口為 443 並搭配 tls1.2 混淆使得流量看起來更像正規的 HTTPS 上網流量，<br>但若被人主動探測 443 是否有運作 https 服務可能會被發現正在使用代理上網，若要長久翻牆不推薦使用。</p>
</li>
</ul>
<h2 id="SSR-客戶端下載"><a href="#SSR-客戶端下載" class="headerlink" title="SSR 客戶端下載"></a>SSR 客戶端下載</h2><ul>
<li><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases">SSR Windows Client</a> 只代理 http 流量，若要全局代理改用 SSTAP</li>
<li><a href="https://github.com/shadowsocksrr/shadowsocksr-android/releases">SSR Android Client</a></li>
</ul>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://github.com/iMeiji/shadowsocks_install/wiki/ShadowsocksR-%E5%8D%8F%E8%AE%AE%E6%8F%92%E4%BB%B6%E6%96%87%E6%A1%A3">協議插件文檔</a></li>
<li><a href="https://lolico.moe/tutorial/shadowsocksr.html">[ShadowsocksR] 大概是萌新也看得懂的SSR功能详细介绍&amp;使用教程</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Proxy</tag>
        <tag>隨筆</tag>
        <tag>ShadowsocksR</tag>
        <tag>翻牆</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] Cisco Smart Install 漏洞處理紀錄</title>
    <url>/2018/04/12/%E9%9A%A8%E7%AD%86-Cisco-Smart-Install-%E6%BC%8F%E6%B4%9E%E8%99%95%E7%90%86%E7%B4%80%E9%8C%84/</url>
    <content><![CDATA[<h2 id="如何檢查設備是否受到影響"><a href="#如何檢查設備是否受到影響" class="headerlink" title="如何檢查設備是否受到影響"></a>如何檢查設備是否受到影響</h2><p><strong><a href="https://www.cisco.com/c/en/us/td/docs/switches/lan/smart_install/configuration/guide/smart_install/supported_devices.html#51890">影響的Switch列表： (65xx&#x2F; 45xx&#x2F;3xxx &#x2F; 29xx 系列)</a></strong></p>
<p><strong>手動確認設備是否開啟 Smart Install：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">switch# show vstack config | inc Role</span><br><span class="line">Role: Client (SmartInstall enabled)</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<p><strong>探針測試：</strong><br>Windows 請安裝 Python 2.7 後，使用 cmd 執行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smi_check.py [-h] -i IP [-p PORT]</span><br></pre></td></tr></table></figure>
<p>下載：<br><a href="https://github.com/Cisco-Talos/smi_check">https://github.com/Cisco-Talos/smi_check</a></p>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><ol>
<li>升級 IOS 版本</li>
<li>手動關閉 Smart Install<br> <code>switch(config)# no vstack</code></li>
<li>建立 Firewall Policy （禁止連線到 switch的 TCP 4786）</li>
<li>若必須要使用請在 Switch 上設定 ACL 限定來源<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip access-list extended SMI_HARDENING_LIST</span><br><span class="line">permit tcp host 10.10.10.1 host 10.10.10.200 eq 4786</span><br><span class="line">deny tcp any any eq 4786</span><br><span class="line">permit ip any any</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://embedi.com/blog/cisco-smart-install-remote-code-execution/">Cisco Smart Install Remote Code Execution</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20180328-smi2">Cisco IOS and IOS XE Software Smart Install Remote Code Execution Vulnerability</a></li>
<li><a href="http://blog.talosintelligence.com/2018/04/critical-infrastructure-at-risk.html">Critical Infrastructure at Risk: Advanced Actors Target Smart Install Client</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>Cisco</tag>
        <tag>漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>[F5 Networks] 檔案莫名下載失敗/連線重設處理紀錄 (TCP RST)</title>
    <url>/2018/03/31/F5-Networks-%E6%AA%94%E6%A1%88%E8%8E%AB%E5%90%8D%E4%B8%8B%E8%BC%89%E5%A4%B1%E6%95%97-%E9%80%A3%E7%B7%9A%E9%87%8D%E8%A8%AD%E8%99%95%E7%90%86%E7%B4%80%E9%8C%84-TCP-RST/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近常收到教授抱怨科技部網站有些檔案能載，有些不能，但教授回到家裡用自家網路下載又正常。<br>我這邊嘗試在 F5 上對科技部網站固定走其中一條 HiNET 出去，在 Palo Alto 上對該網站都不做 IPS、防毒等等功能也沒用，折騰了很久決定跟科技部借一組帳號來做測試。</p>
<h3 id="WireShark-抓包分析"><a href="#WireShark-抓包分析" class="headerlink" title="WireShark 抓包分析"></a>WireShark 抓包分析</h3><p><em>使用 Analyze &gt; Follow &gt; TCP Stream 可以很快的篩選出資料流</em></p>
<p>當我下載時對伺服器發出 <code>HTTP GET</code>，後面跟著一長串回傳值</p>
<span id="more"></span> 
<img src="/2018/03/31/F5-Networks-%E6%AA%94%E6%A1%88%E8%8E%AB%E5%90%8D%E4%B8%8B%E8%BC%89%E5%A4%B1%E6%95%97-%E9%80%A3%E7%B7%9A%E9%87%8D%E8%A8%AD%E8%99%95%E7%90%86%E7%B4%80%E9%8C%84-TCP-RST/Image_100.png" class="" title="HTTP GET">


<p>最後下載完成後，WEB Server 回覆 <code>HTTP 200 OK</code></p>
<img src="/2018/03/31/F5-Networks-%E6%AA%94%E6%A1%88%E8%8E%AB%E5%90%8D%E4%B8%8B%E8%BC%89%E5%A4%B1%E6%95%97-%E9%80%A3%E7%B7%9A%E9%87%8D%E8%A8%AD%E8%99%95%E7%90%86%E7%B4%80%E9%8C%84-TCP-RST/Image_101.png" class="" title="HTTP 200">


<p>但可以看到回覆完 <code>HTTP 200 OK</code> 後就收到一連串的 <code>TCP RST</code>，這時 Chrome 下載的檔案會顯示 <strong>失敗 - 網路錯誤</strong></p>
<h3 id="在-F5-上使用-TCPDUMP-抓包分析"><a href="#在-F5-上使用-TCPDUMP-抓包分析" class="headerlink" title="在 F5 上使用 TCPDUMP 抓包分析"></a>在 F5 上使用 TCPDUMP 抓包分析</h3><p>為了確認 TCP RST 是誰發出的，在 F5 上使用 tcpdump 抓包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~ # tcpdump -i any &quot;((src host 61.60.96.9) or (dst host 61.60.96.9))&quot; -c 500000 -w /shared/tmp/tcpdump_20180330.pacp</span><br></pre></td></tr></table></figure>
<p>一樣用 WireShark 來看，發現 <code>HTTP 200 OK</code> 後 F5 對兩端都發了 <code>TCP RST</code></p>
<img src="/2018/03/31/F5-Networks-%E6%AA%94%E6%A1%88%E8%8E%AB%E5%90%8D%E4%B8%8B%E8%BC%89%E5%A4%B1%E6%95%97-%E9%80%A3%E7%B7%9A%E9%87%8D%E8%A8%AD%E8%99%95%E7%90%86%E7%B4%80%E9%8C%84-TCP-RST/Image_102.png" class="" title="F5 TCP RST">


<p>接下來檢查 F5 發 <code>TCP RST</code> 的原因</p>
<h3 id="在-F5-上設定-Log-TCP-RST-Packet"><a href="#在-F5-上設定-Log-TCP-RST-Packet" class="headerlink" title="在 F5 上設定 Log TCP RST Packet"></a>在 F5 上設定 Log TCP RST Packet</h3><p><a href="https://support.f5.com/csp/article/K13223">K13223: Configuring the BIG-IP system to log TCP RST packets</a></p>
<p>輸入以下指令啟用 log （詳細請看文檔）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmsh</span><br><span class="line">modify /sys db tm.rstcause.log value enable</span><br><span class="line">modify /sys db tm.rstcause.pkt value enable</span><br></pre></td></tr></table></figure>

<p>篩選並顯示 log</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~ # tail -f /var/log/ltm | grep 61.60.96.9</span><br><span class="line"></span><br><span class="line">Mar 30 09:28:57 &lt;my_username&gt; err tmm[17913]: 011f0016:3: http_process_state_prepend - Invalid action:0x109010 Server sends too much data. serverside (61.60.96.9:80 -&gt; &lt;my_ip_addr&gt;:64704) clientside (&lt;my_ip_addr&gt;:64704 -&gt; 61.60.96.9:80) (Server side: vip=/Common/VS_Http profile=http pool=/Common/HiNET_1 server_ip=61.60.96.9)</span><br><span class="line"></span><br><span class="line">Mar 30 09:28:57 &lt;my_username&gt; err tmm1[17913]: 011f0016:3: http_process_state_prepend - Invalid action:0x109010 Server sends too much data. serverside (61.60.96.9:80 -&gt; &lt;my_ip_addr&gt;:64705) clientside (&lt;my_ip_addr&gt;:64705 -&gt; 61.60.96.9:80) (Server side: vip=/Common/VS_Http profile=http pool=/Common/HiNET_1 server_ip=61.60.96.9)</span><br><span class="line"></span><br><span class="line">Mar 30 09:28:59 &lt;my_username&gt; err tmm2[17913]: 011f0016:3: http_process_state_prepend - Invalid action:0x109010 Server sends too much data. serverside (61.60.96.9:80 -&gt; &lt;my_ip_addr&gt;:64706) clientside (&lt;my_ip_addr&gt;:64706 -&gt; 61.60.96.9:80) (Server side: vip=/Common/VS_Http profile=http pool=/Common/HiNET_1 server_ip=61.60.96.9)</span><br><span class="line"></span><br><span class="line">Mar 30 09:29:00 &lt;my_username&gt; err tmm3[17913]: 011f0016:3: http_process_state_prepend - Invalid action:0x109010 Server sends too much data. serverside (61.60.96.9:80 -&gt; &lt;my_ip_addr&gt;:64707) clientside (&lt;my_ip_addr&gt;:64707 -&gt; 61.60.96.9:80) (Server side: vip=/Common/VS_Http profile=http pool=/Common/HiNET_1 server_ip=61.60.96.9)</span><br></pre></td></tr></table></figure>
<p>發現為以下問題導致：<strong>http_process_state_prepend - Invalid action:0x109010 Server sends too much data.</strong></p>
<h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><p>根據官方文檔 <a href="https://support.f5.com/csp/article/K5922">K5922: Error Message: http_process_state_prepend - Invalid action</a> 提到，可能是 Web Server 發送的資料長度比 <strong>Content-Length</strong> 內的值還高，不符 RFC 規範。<br>或是有做 <code>connection mirroring</code>、<code>HTTP pipelining</code>、<code>OneConnect</code>等等也會導致。</p>
<p>另外根據這篇討論：<a href="https://devcentral.f5.com/questions/http-process-state-prepend-server-sends-too-much-data-49488">http_process_state_prepend - Server sends too much data
</a>，可以利用在 iRule 加上 <code>http::disable</code> 來跳過對包含 <code>Content-Disposition</code> HTTP 包的檢查</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">when HTTP_RESPONSE &#123; </span><br><span class="line">   if &#123;  [HTTP::header  exists &quot;Content-Disposition&quot;]  &#125; &#123;</span><br><span class="line">        HTTP::disable</span><br><span class="line">           &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或是利用以下指令也可以全域啟用 Pass-through <code>Content-Length</code> 值不規範的 HTTP 包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~ # tmsh modify sys db tmm.http.passthru.invalid_content_length value enable</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://support.f5.com/csp/article/K42151600">K42151600: Error Message: 011f0016:3: <process> - Invalid action: Server sends too much data.</a></li>
<li><a href="https://devcentral.f5.com/questions/http-process-state-prepend-server-sends-too-much-data-49488">http_process_state_prepend - Server sends too much data</a></li>
<li><a href="https://devcentral.f5.com/wiki/iRules.HTTP__disable.ashx">HTTP::disable (Changes the HTTP filter from full parsing to passthrough mode.)</a></li>
<li><a href="https://support.f5.com/csp/article/K13223">Log TCP RST Packet</a></li>
<li><a href="https://support.f5.com/csp/article/K5922">Error Message: http_process_state_prepend - Invalid action</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>F5-Networks</tag>
        <tag>TCP-RST</tag>
        <tag>TCPDump</tag>
        <tag>WireShark</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] Proxmox VE 常用指令筆記</title>
    <url>/2018/04/24/%E9%9A%A8%E7%AD%86-Proxmox-VE-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h2 id="ZFS-Pool-增加-ZFS-硬碟"><a href="#ZFS-Pool-增加-ZFS-硬碟" class="headerlink" title="ZFS Pool 增加 ZFS 硬碟"></a>ZFS Pool 增加 ZFS 硬碟</h2><ul>
<li><a href="http://www.gienginali.idv.tw/modules/tad_book3/pda.php?tbdsn=797">Proxmox 虛擬主機架設-從無到有(ZFS)</a></li>
</ul>
<p><code>#ls /dev/disk/by-id</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node01:~# ls /dev/disk/by-id</span><br><span class="line">scsi-36782bcb01d6dd9002199a07f11dcde07</span><br><span class="line">scsi-36782bcb01d6dd9002199a07f11dcde07-part1</span><br><span class="line">scsi-36782bcb01d6dd9002199a07f11dcde07-part2</span><br><span class="line">scsi-36782bcb01d6dd9002199a07f11dcde07-part9</span><br><span class="line">scsi-36782bcb01d6dd9002199a0b8153ff675</span><br><span class="line">wwn-0x6782bcb01d6dd9002199a07f11dcde07</span><br><span class="line">wwn-0x6782bcb01d6dd9002199a07f11dcde07-part1</span><br><span class="line">wwn-0x6782bcb01d6dd9002199a07f11dcde07-part2</span><br><span class="line">wwn-0x6782bcb01d6dd9002199a07f11dcde07-part9</span><br><span class="line">wwn-0x6782bcb01d6dd9002199a0b8153ff675</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ZFS Mirror</span><br><span class="line">zpool create -f -o ashift=12 &lt;poolname&gt; mirror/</span><br><span class="line">/dev/disk/by-id/scsi-36782bcb01d6dd9002199a0b8153ff675</span><br></pre></td></tr></table></figure>


<h2 id="ZFS-System-Snapshot"><a href="#ZFS-System-Snapshot" class="headerlink" title="ZFS System Snapshot"></a>ZFS System Snapshot</h2><ol>
<li>查看目前有哪些 zfs 的 data sets：<code>zfs list -t all</code> 注意到 proxmox 預設將最上層的 data set 叫做 rpool。</li>
<li>建立整個 zfs 系統的快照， 遞迴地包含 rpool 底下的每個 data set。<br>快照命名為 0-fresh，<code>zfs snapshot -r rpool@0-fresh</code> 不用半秒鐘就建好了!</li>
<li>再次列出 data sets 的清單： zfs list -t all</li>
<li>以後如果有必要，可以用 <code>zfs rollback</code></li>
</ol>
<h2 id="Fix-Update"><a href="#Fix-Update" class="headerlink" title="Fix Update"></a>Fix Update</h2><p>To fix this, its similar to <a href="https://www.svennd.be/proxmox-fix-updates/">V3.X and V4.X.</a> We need to add one repository :<br>    <code>nano /etc/apt/sources.list</code></p>
<ul>
<li>add :<ul>
<li>deb <a href="http://download.proxmox.com/debian">http://download.proxmox.com/debian</a> stretch pve-no-subscription Then disable or remove</li>
<li>rm -f &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-enterprise.list</li>
</ul>
</li>
</ul>
<h2 id="Passthrough-HDD-to-KVM"><a href="#Passthrough-HDD-to-KVM" class="headerlink" title="Passthrough HDD to KVM"></a>Passthrough HDD to KVM</h2><ul>
<li><a href="https://pve.proxmox.com/wiki/Physical_disk_to_kvm">Physical disk to kvm</a></li>
</ul>
<h2 id="Nested-Virtualization-（Guest-OS-調用虛擬化）"><a href="#Nested-Virtualization-（Guest-OS-調用虛擬化）" class="headerlink" title="Nested Virtualization （Guest OS 調用虛擬化）"></a>Nested Virtualization （Guest OS 調用虛擬化）</h2><ul>
<li><a href="https://pve.proxmox.com/wiki/Nested_Virtualization">Nested Virtualization</a></li>
</ul>
<h2 id="Install-SNMP-Service-on-Proxmox-VE"><a href="#Install-SNMP-Service-on-Proxmox-VE" class="headerlink" title="Install SNMP Service on Proxmox VE"></a>Install SNMP Service on Proxmox VE</h2><ul>
<li><a href="https://www.svennd.be/how-to-install-snmp-service-on-proxmox/">how to install SNMP service on Proxmox</a></li>
</ul>
<h2 id="LSI-MSM-on-Debian"><a href="#LSI-MSM-on-Debian" class="headerlink" title="LSI MSM on Debian"></a>LSI MSM on Debian</h2><ul>
<li><a href="https://plus.google.com/+AndreasKotowicz/posts/Teoy9HoCNUx">LSI MegaRAID Storage Manager 11.x for Linux HowTo on Ubuntu 10.04 64 bit (should work on Debian too)</a></li>
</ul>
<h2 id="Qemu-Agent-節省記憶體"><a href="#Qemu-Agent-節省記憶體" class="headerlink" title="Qemu Agent 節省記憶體"></a>Qemu Agent 節省記憶體</h2><ul>
<li><a href="https://pve.proxmox.com/wiki/Qemu-guest-agent">Qemu-guest-agent</a></li>
</ul>
<h2 id="Intel-Graphic-Passthough"><a href="#Intel-Graphic-Passthough" class="headerlink" title="Intel Graphic Passthough"></a>Intel Graphic Passthough</h2><ul>
<li><a href="https://pve.proxmox.com/wiki/Pci_passthrough">Pci passthrough</a></li>
<li><a href="https://forum.proxmox.com/threads/guide-intel-intergrated-graphic-passthrough.30451/">[GUIDE] Intel Intergrated graphic Passthrough</a></li>
<li><a href="https://forum.proxmox.com/threads/kaby-lake-igd-passthrough-on-proxmox-5-1-with-win10-vm.38125/">Kaby Lake IGD passthrough on Proxmox 5.1 with Win10 VM</a></li>
<li><a href="https://pve.proxmox.com/wiki/USB_Devices_in_Virtual_Machines">USB Devices in Virtual Machines</a></li>
</ul>
<h2 id="Windows-VM-設定"><a href="#Windows-VM-設定" class="headerlink" title="Windows VM 設定"></a>Windows VM 設定</h2><ul>
<li>待補</li>
</ul>
]]></content>
      <categories>
        <category>Virtualization</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>Proxmox-VE</tag>
        <tag>虛擬化</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] Aruba AP 故障更換紀錄</title>
    <url>/2018/04/29/Aruba-Aruba-AP-%E6%95%85%E9%9A%9C%E6%9B%B4%E6%8F%9B%E7%B4%80%E9%8C%84/</url>
    <content><![CDATA[<h2 id="Aruba-Thin-AP-初始設定"><a href="#Aruba-Thin-AP-初始設定" class="headerlink" title="Aruba Thin AP 初始設定"></a>Aruba Thin AP 初始設定</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setenv name &lt;AP Name&gt;</span><br><span class="line">setenv group &lt;AP Group&gt;</span><br><span class="line">setenv master &lt;Master Controller IP&gt;</span><br><span class="line">setenv serverip &lt;Controller IP&gt;</span><br><span class="line">setenv ipaddr &lt;Static IP&gt;</span><br><span class="line">setenv netmask &lt;AP Netmask&gt;</span><br><span class="line">setenv gatewayip &lt;AP Gateway&gt;</span><br><span class="line">saveenv</span><br></pre></td></tr></table></figure>

<h2 id="AP-更換"><a href="#AP-更換" class="headerlink" title="AP 更換"></a>AP 更換</h2><p>通電接上後，查看 <code>Controller &gt; Monitorling</code> 發現 <code>Duplicate Ap Names * 1</code>，請點進去 AP Total Down 欄位將離線 AP 從 Database 內移除。</p>
<img src="/2018/04/29/Aruba-Aruba-AP-%E6%95%85%E9%9A%9C%E6%9B%B4%E6%8F%9B%E7%B4%80%E9%8C%84/Aruba_001.png" class="">

<span id="more"></span> 
<img src="/2018/04/29/Aruba-Aruba-AP-%E6%95%85%E9%9A%9C%E6%9B%B4%E6%8F%9B%E7%B4%80%E9%8C%84/Aruba_002.png" class="">


<p>進到 <code>Configuration &gt; AP Installation</code> 檢查新上線 AP 名稱與序號是否正確。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://community.arubanetworks.com/t5/Wireless-Access/Tutorial-AP-Boot-Commands/td-p/91734"> [Tutorial] AP Boot Commands</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>Aruba</tag>
        <tag>AP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows] Hexo Blog 搭建紀錄</title>
    <url>/2018/04/29/Windows-Hexo-Blog-%E6%90%AD%E5%BB%BA%E7%B4%80%E9%8C%84/</url>
    <content><![CDATA[<h2 id="預覽"><a href="#預覽" class="headerlink" title="預覽"></a>預覽</h2><img src="/2018/04/29/Windows-Hexo-Blog-%E6%90%AD%E5%BB%BA%E7%B4%80%E9%8C%84/HexoBlog_01.png" class="">


<h2 id="環境配置"><a href="#環境配置" class="headerlink" title="環境配置"></a>環境配置</h2><span id="more"></span> 
<h4 id="1-安裝-Git"><a href="#1-安裝-Git" class="headerlink" title="1. 安裝 Git"></a>1. 安裝 Git</h4><p><a href="https://git-scm.com/download/win">Download</a></p>
<h4 id="2-安裝-node-js"><a href="#2-安裝-node-js" class="headerlink" title="2. 安裝 node.js"></a>2. 安裝 node.js</h4><p><a href="https://nodejs.org/en/">Download</a></p>
<h4 id="3-建立-Github-Repo"><a href="#3-建立-Github-Repo" class="headerlink" title="3. 建立 Github Repo"></a>3. 建立 Github Repo</h4><p>可以參考之前安裝 Octopress Blog 的紀錄<br><a href="https://blog.downager.com/2017/06/01/Ubuntu-%E4%BD%BF%E7%94%A8-Github-%E6%9E%B6%E8%A8%AD-Octopress-Blog/">[Ubuntu] 使用 Github 架設 Octopress Blog</a></p>
<h2 id="Hexo-初始安裝"><a href="#Hexo-初始安裝" class="headerlink" title="Hexo 初始安裝"></a>Hexo 初始安裝</h2><h4 id="1-打開-cmd，cd-到你要放置-hexo-資料夾的目錄。"><a href="#1-打開-cmd，cd-到你要放置-hexo-資料夾的目錄。" class="headerlink" title="1. 打開 cmd，cd 到你要放置 hexo 資料夾的目錄。"></a>1. 打開 cmd，cd 到你要放置 hexo 資料夾的目錄。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\&gt; npm install hexo -g</span><br><span class="line">D:\&gt; hexo init blog</span><br><span class="line">D:\&gt; cd blog</span><br><span class="line">D:\blog&gt; npm install</span><br><span class="line">D:\blog&gt; hexo server</span><br></pre></td></tr></table></figure>

<h4 id="2-配置-config-yml"><a href="#2-配置-config-yml" class="headerlink" title="2. 配置 _config.yml"></a>2. 配置 _config.yml</h4><p>可以參考 <a href="https://hexo.io/docs/configuration.html">這篇官方說明</a>，以下是我的配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: Relk&#x27;s 工作手札</span><br><span class="line">subtitle: 一個閒來無事愛折騰的網路工程師</span><br><span class="line">description: </span><br><span class="line">author: Relk</span><br><span class="line">language: zh-tw</span><br><span class="line">timezone: Asia/Taipei</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="line">url: https://blog.downager.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render: </span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :year-:month-:day-:title.md</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: true</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line">  </span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  </span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: yilia</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Downager/downager.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># JsonContent</span><br><span class="line">jsonContent:</span><br><span class="line">  meta: false</span><br><span class="line">  pages: false</span><br><span class="line">  posts:</span><br><span class="line">    title: true</span><br><span class="line">    date: true</span><br><span class="line">    path: true</span><br><span class="line">    text: true</span><br><span class="line">    raw: false</span><br><span class="line">    content: false</span><br><span class="line">    slug: false</span><br><span class="line">    updated: false</span><br><span class="line">    comments: false</span><br><span class="line">    link: false</span><br><span class="line">    permalink: false</span><br><span class="line">    excerpt: false</span><br><span class="line">    categories: false</span><br><span class="line">    tags: true</span><br></pre></td></tr></table></figure>
<h4 id="3-安裝主題"><a href="#3-安裝主題" class="headerlink" title="3. 安裝主題"></a>3. 安裝主題</h4><p>我這邊選擇了 <a href="https://github.com/litten/hexo-theme-yilia">yilia</a> 作為我的主題。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\blog&gt; git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>
<ul>
<li>編輯根目錄底下的 <code>_config.yml</code>，將主題修改成 <strong>yilia</strong> <code>theme: yilia</code></li>
<li>編輯 <code>themes/yilia</code> 底下的 <code>_config.yml</code>，以下是我的配置：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Header</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  主頁: /  </span><br><span class="line">  歸檔: /archives/index.html</span><br><span class="line">  Blogger: https://downager.blogspot.tw</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"># SubNav</span><br><span class="line">subnav:</span><br><span class="line">  github: &quot;https://github.com/Downager&quot;</span><br><span class="line">  #weibo: &quot;#&quot;</span><br><span class="line">  rss: &quot;/atom.xml&quot;</span><br><span class="line">  #zhihu: &quot;#&quot;</span><br><span class="line">  #qq: &quot;#&quot;</span><br><span class="line">  #weixin: &quot;#&quot;</span><br><span class="line">  #jianshu: &quot;#&quot;</span><br><span class="line">  #douban: &quot;#&quot;</span><br><span class="line">  #segmentfault: &quot;#&quot;</span><br><span class="line">  #bilibili: &quot;#&quot;</span><br><span class="line">  #acfun: &quot;#&quot;</span><br><span class="line">  #facebook: &quot;#&quot;</span><br><span class="line">  #google: &quot;#&quot;</span><br><span class="line">  #twitter: &quot;#&quot;</span><br><span class="line">  linkedin: &quot;https://www.linkedin.com/in/relk-li/&quot;</span><br><span class="line">  mail: &quot;mailto:zxc140zxc140@gmail.com&quot;</span><br><span class="line"></span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"># 是否需要修改 root 路径</span><br><span class="line"># 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，</span><br><span class="line"># 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。</span><br><span class="line">root: /</span><br><span class="line"></span><br><span class="line"># Content</span><br><span class="line"></span><br><span class="line"># 文章太长，截断按钮文字</span><br><span class="line">excerpt_link: more</span><br><span class="line"># 文章卡片右下角常驻链接，不需要请设置为false</span><br><span class="line">show_all_link: &#x27;展開全文&#x27;</span><br><span class="line"># 数学公式</span><br><span class="line">mathjax: false</span><br><span class="line"># 是否在新窗口打开链接</span><br><span class="line">open_in_new: false</span><br><span class="line"></span><br><span class="line"># 打赏</span><br><span class="line"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span><br><span class="line">reward_type: 0</span><br><span class="line"># 打赏wording</span><br><span class="line">reward_wording: &#x27;Ethereum: 0xaed9ef1a2c584b0a390727fcd4d99f7d9863e13c&#x27;</span><br><span class="line"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg</span><br><span class="line">#alipay: </span><br><span class="line"># 微信二维码图片地址</span><br><span class="line">#weixin: </span><br><span class="line"># Ethereum Address</span><br><span class="line">#Ethereum: 0xaed9ef1a2c584b0a390727fcd4d99f7d9863e13c</span><br><span class="line"></span><br><span class="line"># 目录</span><br><span class="line"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span><br><span class="line">toc: 0</span><br><span class="line"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span><br><span class="line">toc_hide_index: true</span><br><span class="line"># 目录为空时的提示</span><br><span class="line">toc_empty_wording: &#x27;目录，不存在的…&#x27;</span><br><span class="line"></span><br><span class="line"># 是否有快速回到顶部的按钮</span><br><span class="line">top: true</span><br><span class="line"></span><br><span class="line"># Miscellaneous</span><br><span class="line">#baidu_analytics: &#x27;&#x27;</span><br><span class="line">google_analytics: &#x27;UA-********-*&#x27;</span><br><span class="line">favicon: /assets/img/favicon.png</span><br><span class="line"></span><br><span class="line">#你的头像url</span><br><span class="line">avatar: /assets/img/avatar.jpg</span><br><span class="line"></span><br><span class="line">#是否开启分享</span><br><span class="line">share_jia: false</span><br><span class="line"></span><br><span class="line">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span><br><span class="line">#不需要使用某项，直接设置值为false，或注释掉</span><br><span class="line">#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/</span><br><span class="line"></span><br><span class="line">#1、多说</span><br><span class="line">duoshuo: false</span><br><span class="line"></span><br><span class="line">#2、网易云跟帖</span><br><span class="line">wangyiyun: false</span><br><span class="line"></span><br><span class="line">#3、畅言</span><br><span class="line">changyan_appid: false</span><br><span class="line">changyan_conf: false</span><br><span class="line"></span><br><span class="line">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span><br><span class="line">disqus: downager 		  #Shortname</span><br><span class="line"></span><br><span class="line">#5、Gitment</span><br><span class="line">gitment_owner: false      #你的 GitHub ID</span><br><span class="line">gitment_repo: &#x27;&#x27;          #存储评论的 repo</span><br><span class="line">gitment_oauth:</span><br><span class="line">  client_id: &#x27;&#x27;           #client ID</span><br><span class="line">  client_secret: &#x27;&#x27;       #client secret</span><br><span class="line"></span><br><span class="line"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span><br><span class="line">style:</span><br><span class="line">  # 头像上面的背景颜色</span><br><span class="line">  header: &#x27;#4d4d4d&#x27;</span><br><span class="line">  # 右滑板块背景</span><br><span class="line">  slider: &#x27;linear-gradient(200deg,#a0cfe4,#e8c37e)&#x27;</span><br><span class="line"></span><br><span class="line"># slider的设置</span><br><span class="line">slider:</span><br><span class="line">  # 是否默认展开tags板块</span><br><span class="line">  showTags: true</span><br><span class="line"></span><br><span class="line"># 智能菜单</span><br><span class="line"># 如不需要，将该对应项置为false</span><br><span class="line"># 比如</span><br><span class="line">#smart_menu:</span><br><span class="line">#  friends: false</span><br><span class="line">smart_menu:</span><br><span class="line">  innerArchive: &#x27;搜尋文章&#x27;</span><br><span class="line">  friends: &#x27;Donate&#x27;</span><br><span class="line">  aboutme: &#x27;關於我&#x27;</span><br><span class="line"></span><br><span class="line">friends:</span><br><span class="line">  Ethereum Wallet: https://etherscan.io/address/0xaed9ef1a2c584b0a390727fcd4d99f7d9863e13c</span><br><span class="line">#  友情链接2: http://localhost:4000/</span><br><span class="line">#  友情链接3: http://localhost:4000/</span><br><span class="line">#  友情链接4: http://localhost:4000/</span><br><span class="line">#  友情链接5: http://localhost:4000/</span><br><span class="line">#  友情链接6: http://localhost:4000/</span><br><span class="line"></span><br><span class="line">aboutme: 這裡是 Relk 的工作手札 &lt;br&gt; 基本存放隨手寫的筆記 &lt;br&gt; 原 Blogger 於 2013-03-24 建立 &lt;br&gt; 2017-05-28 利用 Octopress 重新構建 Blog &lt;br&gt; 並託管在 Github 上。&lt;br&gt; 2018-03-02 覺得 Octopress 太難維護 &lt;br&gt; 又用 Hexo 重搭了一個，維護 Blog 好難 QQ &lt;br&gt;&lt;br&gt; 目前文章搬家中...</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="4-安裝-RSS、Sitemap、hexo-asset-image-插件"><a href="#4-安裝-RSS、Sitemap、hexo-asset-image-插件" class="headerlink" title="4. 安裝 RSS、Sitemap、hexo-asset-image 插件"></a>4. 安裝 RSS、Sitemap、hexo-asset-image 插件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\blog&gt; npm install hexo-asset-image</span><br><span class="line">D:\blog&gt; npm install hexo-generator-feed</span><br><span class="line">D:\blog&gt; npm install hexo-generator-sitemap</span><br></pre></td></tr></table></figure>
<p>之後重新部屬 Blog，會發現 <code>/atom.xml</code> 和 <code>/sitemap.xml</code> 都已經產生完畢了。<br><a href="https://github.com/CodeFalling/hexo-asset-image">hexo-asset-image</a> 插件可以讓你用 <code>&#123;% asset_img logo.jpg logo %&#125; </code> 語法插入圖片</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://www.jianshu.com/p/956c44c87fb1">Windows下GitHub + Hexo搭建个人博客</a></li>
<li><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/hexo-tutor-1.html">Hexo 入门指南（一） - 简介 &amp; 准备</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] CCNP Switch Ch.1 企業園區網路設計</title>
    <url>/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/</url>
    <content><![CDATA[<h2 id="說明-Cisco-階層式網路設計原則"><a href="#說明-Cisco-階層式網路設計原則" class="headerlink" title="說明 Cisco 階層式網路設計原則"></a>說明 Cisco 階層式網路設計原則</h2><p>可預測行為的網路模型：低維護性、高可用性</p>
<p>網路規劃應根據<strong>資料流</strong>來思考，理想狀況下，所有 End-User 資源存取的<strong>距離成本一致</strong>。</p>
<p>一個標準的網路模型：存取層、分散層、核心層</p>
<ol>
<li>存取層：終端使用者的存取接入點</li>
<li>分散層：匯集存取層交換器</li>
<li>核心層：當使用者成長到一定數量，必須匯集分散層交換器而使用</li>
</ol>
<span id="more"></span> 

<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/CCNP_001.jpg" class="">


<h2 id="說明分層網絡設計模型（Hierarchical-Network-Design-Model）"><a href="#說明分層網絡設計模型（Hierarchical-Network-Design-Model）" class="headerlink" title="說明分層網絡設計模型（Hierarchical Network Design Model）"></a>說明分層網絡設計模型（Hierarchical Network Design Model）</h2><h3 id="存取層（Access-Layer）"><a href="#存取層（Access-Layer）" class="headerlink" title="存取層（Access Layer）"></a>存取層（Access Layer）</h3><p>存取層是 End-User 的網路接入點，存取層交換器通常提供 User 之間 Layer 2（VLAN）的連結性。</p>
<p>此層的設備（有時被稱作 大樓存取層交換器 - Building access switch）應擁有下列功能：</p>
<ul>
<li><strong>低成本的交換埠</strong></li>
<li><strong>高密度的交換埠</strong></li>
<li>可利用上行鏈路（Uplink）擴展到上層</li>
<li>高可用性</li>
<li>能夠集中提供的網路服務（資料、語音、視訊）</li>
<li>防護功能與服務品質（QoS）</li>
</ul>
<h3 id="分散層（Distribution-Layer）"><a href="#分散層（Distribution-Layer）" class="headerlink" title="分散層（Distribution Layer）"></a>分散層（Distribution Layer）</h3><p>分散層匯集了所有<strong>存取層</strong>設備的 <strong>Uplink</strong>，分散層交換器必須能夠處理來自所有連線設備的<strong>總流量</strong>，</p>
<p>也就是應該具備<strong>高密度</strong>的<strong>高速鏈路交換埠</strong>，以便支援存取層交換器所集中的流量。</p>
<p>由於 VLAN 與廣播領域集中在分散層，故通常需要<strong>支援路由繞送</strong>（Support Routing）、<strong>過濾</strong>及安全性。</p>
<p>分散層通常為<strong>第三層</strong>的<strong>邊界</strong>，此為路由 access VLAN 之處。</p>
<p>此層中的設備（有時被稱作 大樓分散層交換器 - Building Distribution switch）應擁有下列功能：</p>
<ul>
<li>可<strong>匯集多個存取層交換器</strong></li>
<li>針對<strong>封包處理</strong>能提供更高的<strong>第 3 層路由效率</strong>（Layer 3）</li>
<li>提供安全性與原則型連線功能</li>
<li>QoS 功能</li>
<li>核心層與存取層之間的<strong>高速鏈路</strong>具備<strong>可擴展性</strong>與<strong>備援性</strong>（e.x. Uplink 1 GbE &gt; 10 GbE）</li>
</ul>
<h3 id="核心層（Core-Layer）"><a href="#核心層（Core-Layer）" class="headerlink" title="核心層（Core Layer）"></a>核心層（Core Layer）</h3><p>園區網路的核心層提供所有分散層設備之間的連接，故核心層（網路骨幹）交換的資料流必須盡可能地有效率。</p>
<p>核心層交換器應具有下列屬性：</p>
<ul>
<li>極高的 Layer 3 路由傳輸率</li>
<li>不執行高成本或不必要的封包處理（存取清單、封包過濾）</li>
<li>支援高可用性的容錯與彈性</li>
<li>進階的 QoS 功能</li>
</ul>
<p>在園區網路的核心層（骨幹）的設備應針對高效率交換進行最佳化，因為核心層必須處理整個園區龐大的資料量，故核心層應針對單純及效率問題來設計。</p>
<h2 id="模組化的網路設計"><a href="#模組化的網路設計" class="headerlink" title="模組化的網路設計"></a>模組化的網路設計</h2><h3 id="交換式區塊好處"><a href="#交換式區塊好處" class="headerlink" title="交換式區塊好處"></a>交換式區塊好處</h3><ul>
<li>擴充方便</li>
<li>不須 Full-Mesh 即有一定的可靠程度</li>
</ul>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/CCNP_002.jpg" class="">


<h3 id="企業網路基本單元"><a href="#企業網路基本單元" class="headerlink" title="企業網路基本單元"></a>企業網路基本單元</h3><ul>
<li>交換式區塊（Switch Block）：</li>
<li>包含<strong>一群存取層交換器</strong>，以及與他們相連的<strong>分散層交換器</strong>。</li>
<li>亦稱作<strong>存取分散式區塊</strong>（_access distribution block_），因包含這兩個交換層而得此名。</li>
<li>核心區塊（Core Block）：園區網路的<strong>骨幹</strong>，連接所有的<strong>交換式區塊</strong></li>
</ul>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/CCNP_003.jpg" class="">


<h3 id="交換式區塊大小"><a href="#交換式區塊大小" class="headerlink" title="交換式區塊大小"></a>交換式區塊大小</h3><h4 id="分散層大小如何決定："><a href="#分散層大小如何決定：" class="headerlink" title="分散層大小如何決定："></a>分散層大小如何決定：</h4><ul>
<li>資料流類型及模式</li>
<li><strong>共同工作</strong>的<strong>群組</strong>與數量</li>
<li>分散層上 Layer 3 交換容量之數量</li>
<li>連接到存取層的 User 總數</li>
<li><strong>Subnet</strong> 或 <strong>VLAN</strong> 之地理邊界</li>
<li>一個<strong>交換式區塊</strong>內的使用者總數不超過 <strong>2000</strong> 個</li>
</ul>
<h4 id="交換式區塊過大時的狀況："><a href="#交換式區塊過大時的狀況：" class="headerlink" title="交換式區塊過大時的狀況："></a>交換式區塊過大時的狀況：</h4><ul>
<li>分散層的 Router（Layer 3 Switch）成為流量瓶頸。</li>
<li>原因可能有：<ul>
<li>跨 VLAN 的流量過高</li>
<li>CPU 處理過於密集</li>
<li>封包原則或安全性功能過多導致交換時間過長</li>
<li>Broadcast 和 Multicast 流量過多，導致佔用了交換式區塊的交換處理速度。</li>
</ul>
</li>
</ul>
<h3 id="交換式區塊備援設計"><a href="#交換式區塊備援設計" class="headerlink" title="交換式區塊備援設計"></a>交換式區塊備援設計</h3><h4 id="設計原則："><a href="#設計原則：" class="headerlink" title="設計原則："></a>設計原則：</h4><ul>
<li>每個<strong>交換式區塊</strong>由 2 台<strong>分散層交換器</strong>所組成</li>
<li>每台<strong>存取層交換器</strong>應具備<strong>一對 uplink</strong></li>
<li>每一個<strong>存取層交換器</strong>只能負責<strong>唯一</strong>一個** VLAN **，避免形成 Layer 2 的邏輯迴圈。</li>
</ul>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/CCNP_004.jpg" class="">

<h3 id="階層網路備援設計原則"><a href="#階層網路備援設計原則" class="headerlink" title="階層網路備援設計原則"></a>階層網路備援設計原則</h3><ul>
<li>每個階層使用<strong>一對</strong>的交換器</li>
<li>每台交換器利用<strong>兩條 Uplink</strong> 作為備援之用</li>
<li><strong>分散層</strong>之間連接<strong>一條鏈路</strong>作為備援即可</li>
<li><strong>存取層</strong>交換器原則上<strong>不要直連</strong></li>
<li>VLAN（<strong>Layer 2</strong>）的範圍<strong>不要</strong>超出<strong>分散層</strong>交換器</li>
</ul>
<h2 id="網路核心"><a href="#網路核心" class="headerlink" title="網路核心"></a>網路核心</h2><h3 id="核心層"><a href="#核心層" class="headerlink" title="核心層"></a>核心層</h3><ul>
<li><strong>分散</strong>與<strong>核心</strong>交換器之間的鏈路最好是<strong>第 3 層路由介面</strong></li>
<li>核心層交換器<strong>之間</strong>的鏈路，最好能夠乘載匯集進入其中一台核心交換器的流量</li>
<li>考慮未來擴充的方便性 e.x. 1GbE Module to 10GbE Module</li>
<li>核心層應當含括<strong>兩台</strong>多層交換器，備援核心被稱為<strong>雙核心</strong>（Dual Core）</li>
<li>核心層形成一個獨立的模組，未併入其他區塊或階層</li>
</ul>
<h3 id="多節點核心（Multinode-Core）"><a href="#多節點核心（Multinode-Core）" class="headerlink" title="多節點核心（Multinode Core）"></a>多節點核心（Multinode Core）</h3><p>當園區網路成長到橫跨兩棟大樓或兩個地區時，核心層即可倍增</p>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/CCNP_005.jpg" class="">


<p>核心層彼此以 <strong>Full-Mesh</strong> 狀態建構，達到互相備援的狀態。</p>
<h3 id="整合式核心區塊（Collapsed-core-block）"><a href="#整合式核心區塊（Collapsed-core-block）" class="headerlink" title="整合式核心區塊（Collapsed core block）"></a>整合式核心區塊（Collapsed core block）</h3><ul>
<li>分散層以及核心層雖然實作在相同設備上，但保持這些功能的獨立性及適當設計很重要</li>
<li>整合式核心非獨立的單元區塊，而是整合到個別獨立交換式區塊的分散層裡</li>
</ul>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-CCNP-Switch-Ch-1-%E4%BC%81%E6%A5%AD%E5%9C%92%E5%8D%80%E7%B6%B2%E8%B7%AF%E8%A8%AD%E8%A8%88/CCNP_006.jpg" class="">


<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p>本篇文章為本人閱讀碁峰出版《CCNP Routing and Switching SWITCH 300-115專業認證手冊》第一章後所整理出的筆記，圖片皆是出自於該書內容，若有侵權疑慮請來信或留言告知，將盡速撤下文章。</p>
<p>請各位支持正版：<a href="http://www.books.com.tw/products/E050025504">博客來</a>、<a href="https://play.google.com/store/books/details?id=cUsfDQAAQBAJ">Google圖書</a></p>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>隨筆</tag>
        <tag>CCNP</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] GLBP、HSRP、VRRP 比較</title>
    <url>/2018/06/12/%E9%9A%A8%E7%AD%86-GLBP%E3%80%81HSRP%E3%80%81VRRP-%E6%AF%94%E8%BC%83/</url>
    <content><![CDATA[<h2 id="GLBP-Gateway-Load-Balancing-Protocol"><a href="#GLBP-Gateway-Load-Balancing-Protocol" class="headerlink" title="GLBP (Gateway Load Balancing Protocol)"></a>GLBP (Gateway Load Balancing Protocol)</h2><ol>
<li><strong>For Cisco</strong></li>
<li><strong>Priority</strong>：數字越大優先權越高，若一樣則比介面 IP</li>
<li>**1x AVG (Active Virtual Gateway)**：唯一，與 <strong>HSRP</strong> 的 <strong>Active</strong> 類似，由優先權決定 <strong>AVG</strong><ol>
<li>負責挑選傳送資料的 <strong>AVF</strong>，以及回應 <strong>ARP</strong></li>
<li><strong>AVG</strong> 也可兼任 <strong>AVF</strong></li>
</ol>
</li>
<li>**4x AVF (Active Virtual Forwarder)**：在 <strong>GLPB</strong> 群組內皆可為之<ol>
<li><strong>Weighted load-balancing</strong>：設定每一台路由器的權重，權重高機會大 (權重高低 &#x3D; 效能高低)</li>
<li><strong>Host-dependent load-balancing</strong>：根據電腦選擇 <strong>AVF</strong>，固定電腦固定<strong>AVF</strong> 路由器</li>
<li><strong>Round-Robin load-balancing</strong>：  輪迴挑選，路由器平均使用。</li>
</ol>
</li>
<li><strong>GLBP 群組</strong>設定時須給定獨立 IP，MAC為 <strong>0007:B400:XXYY</strong></li>
</ol>
<ul>
<li><strong>XX</strong> 為群組號碼、<strong>YY</strong> 為 <strong>AVF</strong> 路由器 ID</li>
</ul>
<span id="more"></span> 

<h2 id="HSRP-Hot-Standby-Router-Protocol"><a href="#HSRP-Hot-Standby-Router-Protocol" class="headerlink" title="HSRP (Hot Standby Router Protocol)"></a>HSRP (Hot Standby Router Protocol)</h2><ol>
<li><strong>For Cisco</strong></li>
<li><strong>Active Router</strong>：唯一，主路由器，優先權大者為主，若相同則介面 IP 最大者為主。</li>
<li><strong>Standby Router</strong>：唯一，副路由器，待主路由器掛點時接手工作，平常<strong>不會負載平衡</strong>。</li>
<li><strong>Listen Router</strong>：若群組內有第三台以上路由器則除主副外皆為此狀態。</li>
<li><strong>HSRP</strong>群組設定時須給定獨立 IP，且虛擬 IP 需與介面 IP 同一網段（IP 不可重複）</li>
<li><strong>Hello Time</strong>間隔為<strong>3</strong>秒，<strong>Hold Time</strong>為<strong>10</strong>秒，超過<strong>10</strong>秒無收到對方回應則接手。</li>
</ol>
<ul>
<li>MAC 為 <strong>0000.0C07.ACxy</strong>，xy is the HSRP group number in hexadecimal based。</li>
</ul>
<p><strong>HSRP 介面追蹤</strong></p>
<p>介面追蹤主要是察看 Internet 的連線狀態，管理者可設定在 Internet 連線中斷時 Active Router 回報 HSRP 減少優先權，使 Active Router 轉移給 Standby Router，維持 Internet 連線。</p>
<h3 id="HSRP-v1-x2F-v2-差異"><a href="#HSRP-v1-x2F-v2-差異" class="headerlink" title="HSRP v1 &#x2F; v2 差異"></a>HSRP v1 &#x2F; v2 差異</h3><table>
<thead>
<tr>
<th>協定</th>
<th>HSRP v1</th>
<th>HSRP v2</th>
</tr>
</thead>
<tbody><tr>
<td>毫秒計時器</td>
<td>不通告不學習</td>
<td>通告及學習，維持 HSRP Group 穩定性</td>
</tr>
<tr>
<td>封包添加 src-mac</td>
<td>N</td>
<td>Y</td>
</tr>
<tr>
<td>Multicast Addr.</td>
<td>224.0.0.2 (conflict with CGMP)</td>
<td>224.0.0.102</td>
</tr>
<tr>
<td>Group Number</td>
<td>0-255</td>
<td>0-4095</td>
</tr>
<tr>
<td>Virtua MAC addr.</td>
<td><code>0000.0C07.AC**</code></td>
<td><code>0000.0C9F.F***</code></td>
</tr>
<tr>
<td>IPv6</td>
<td>N</td>
<td>Y</td>
</tr>
</tbody></table>
<h2 id="VRRP-Virtual-Router-Redundancy-Protocol"><a href="#VRRP-Virtual-Router-Redundancy-Protocol" class="headerlink" title="VRRP (Virtual Router Redundancy Protocol)"></a>VRRP (Virtual Router Redundancy Protocol)</h2><ol>
<li><strong>RFC 3768</strong></li>
<li><strong>Priority</strong>：數字越大優先權越高</li>
<li><strong>Master Router</strong>：唯一，負責回應<strong>ARP</strong></li>
<li><strong>Backup Router</strong>：除<strong>Master</strong>外皆為<strong>Backup</strong></li>
<li><strong>VRRP</strong> 群組設定時須給獨立 IP，MAC 為 <code>0000:5E00:01XX</code> <strong>XX</strong> 為群組編號</li>
<li><strong>Hello Time</strong> 為<strong>1</strong>秒，<strong>Hold Time</strong>為<strong>3</strong>秒</li>
<li><strong>Authentication</strong>：<code>Plain-text</code>、<code>MD5</code>、<code>No Auth</code>。</li>
</ol>
<h3 id="VRRP-v2-x2F-v3-差異"><a href="#VRRP-v2-x2F-v3-差異" class="headerlink" title="VRRP v2 &#x2F; v3 差異"></a>VRRP v2 &#x2F; v3 差異</h3><table>
<thead>
<tr>
<th>差異</th>
<th>VRRP v2</th>
<th>VRRP v3</th>
</tr>
</thead>
<tbody><tr>
<td>RFC</td>
<td>RFC3768</td>
<td>RFC5798</td>
</tr>
<tr>
<td>Protocol</td>
<td>IPv4 Only</td>
<td>IPv4 &amp; IPv6 are supported</td>
</tr>
<tr>
<td>計時器</td>
<td>最小單位到<strong>秒</strong></td>
<td>最小單位到<strong>毫秒</strong></td>
</tr>
<tr>
<td>Multicast addr.</td>
<td>224.0.0.18 (IPv4)</td>
<td>224.0.0.18 (IPv4) <br> <code>FF02::12</code> (IPv6)</td>
</tr>
<tr>
<td>Virtual Router-ID</td>
<td><code>0000.5e00.01**</code> <code>**</code>是十六進制的 Router-ID</td>
<td>IPv4 – <code>0000.5e00.01**</code> <br> IPv6 – The multicast address <code>FF02::12</code> is used to send hello messages.</td>
</tr>
<tr>
<td>Preemption （搶佔原則）</td>
<td>Priority 較高者優先，相同時則擁有較高 IP 優先</td>
<td>只有擁有較高 Priority 才能搶佔</td>
</tr>
<tr>
<td>啟用 VRRP</td>
<td>基於每個介面啟用</td>
<td>需要全域啟用再對端口做設定</td>
</tr>
</tbody></table>
<h2 id="GLBP-HSRP-VRRP-比較"><a href="#GLBP-HSRP-VRRP-比較" class="headerlink" title="GLBP HSRP VRRP 比較"></a>GLBP HSRP VRRP 比較</h2><img src="/2018/06/12/%E9%9A%A8%E7%AD%86-GLBP%E3%80%81HSRP%E3%80%81VRRP-%E6%AF%94%E8%BC%83/HSRP&VRRP&GLBP.jpg" class="">
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>隨筆</tag>
        <tag>CCNP</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] LLDP 筆記</title>
    <url>/2018/06/12/%E9%9A%A8%E7%AD%86-LLDP-%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h2 id="LLDP"><a href="#LLDP" class="headerlink" title="LLDP"></a>LLDP</h2><h3 id="TLV-Packet"><a href="#TLV-Packet" class="headerlink" title="TLV Packet"></a>TLV Packet</h3><img src="/2018/06/12/%E9%9A%A8%E7%AD%86-LLDP-%E7%AD%86%E8%A8%98/LLDP.png" class="">


<h3 id="Cisco-Switch-LLDP"><a href="#Cisco-Switch-LLDP" class="headerlink" title="Cisco Switch LLDP"></a>Cisco Switch LLDP</h3><h4 id="The-Cisco-switch-supports-the-following-basic-management-TLVs-which-are-optional"><a href="#The-Cisco-switch-supports-the-following-basic-management-TLVs-which-are-optional" class="headerlink" title="The Cisco switch supports the following basic management TLVs, which are optional:"></a>The Cisco switch supports the following basic management TLVs, which are optional:</h4><ul>
<li><code>Port description</code> TLV</li>
<li><code>System name</code> TLV</li>
<li><code>System description</code> TLV</li>
<li><code>System capabilities</code> TLV</li>
<li><code>Management address</code> TLV</li>
</ul>
<span id="more"></span> 

<h4 id="These-organizationally-specific-LLDP-TLVs-are-also-advertised-to-support-LLDP-MED"><a href="#These-organizationally-specific-LLDP-TLVs-are-also-advertised-to-support-LLDP-MED" class="headerlink" title="These organizationally specific LLDP TLVs are also advertised to support LLDP-MED."></a>These organizationally specific LLDP TLVs are also advertised to support LLDP-MED.</h4><ul>
<li><code>Port VLAN ID</code> TLV (IEEE 802.1 organizationally specific TLVs)</li>
<li><code>MAC/PHY configuration/status</code> TLV (IEEE 802.3 organizationally specific TLVs)</li>
</ul>
<h3 id="TLV-Type"><a href="#TLV-Type" class="headerlink" title="TLV Type"></a>TLV Type</h3><table>
<thead>
<tr>
<th>TLV type</th>
<th>TLV name</th>
<th>Usage in LLDPPDU</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td><code>End of LLDPDU</code></td>
<td><strong>Mandatory</strong></td>
</tr>
<tr>
<td>1</td>
<td><code>Chassis ID</code></td>
<td><strong>Mandatory</strong></td>
</tr>
<tr>
<td>2</td>
<td><code>Port ID</code></td>
<td><strong>Mandatory</strong></td>
</tr>
<tr>
<td>3</td>
<td><code>Time To Live</code></td>
<td><strong>Mandatory</strong></td>
</tr>
<tr>
<td>4</td>
<td><code>Port description</code></td>
<td>Optional</td>
</tr>
<tr>
<td>5</td>
<td><code>System name</code></td>
<td>Optional</td>
</tr>
<tr>
<td>6</td>
<td><code>System description</code></td>
<td>Optional</td>
</tr>
<tr>
<td>7</td>
<td><code>System capabilities</code></td>
<td>Optional</td>
</tr>
<tr>
<td>8</td>
<td><code>Management address</code></td>
<td>Optional</td>
</tr>
<tr>
<td>9–126</td>
<td>Reserved</td>
<td>-</td>
</tr>
<tr>
<td>127</td>
<td>Custom TLVs</td>
<td>Optional</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>網路</tag>
        <tag>隨筆</tag>
        <tag>CCNP</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] QNAP 原廠技術講習筆記</title>
    <url>/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h2 id="Qtier-自動分層儲存-（Auto-Tiering）"><a href="#Qtier-自動分層儲存-（Auto-Tiering）" class="headerlink" title="Qtier 自動分層儲存 （Auto Tiering）"></a>Qtier 自動分層儲存 （Auto Tiering）</h2><blockquote>
<p>Qtier 技術實現自動分層儲存解決方案，可辨別資料存取頻率，自動將頻繁存取的「熱」資料移動到效能較高的磁碟階層，而將較少存取的「冷」資料移動到成本低、大容量的磁碟階層，讓企業享有效能與成本 （TCO） 兼顧的儲存服務。</p>
</blockquote>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_001.png" class="">


<span id="more"></span> 

<ul>
<li>所有資料會先寫入 SSD，之後再根據設定 （排程或是閒置時） 依照資料常用程度搬去低速裝置或搬來高速裝置</li>
</ul>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_002.png" class="">


<h2 id="磁碟區類型"><a href="#磁碟區類型" class="headerlink" title="磁碟區類型"></a>磁碟區類型</h2><img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_003.png" class="">

<h3 id="單一靜態配置磁碟區（效能最佳）"><a href="#單一靜態配置磁碟區（效能最佳）" class="headerlink" title="單一靜態配置磁碟區（效能最佳）"></a>單一靜態配置磁碟區（效能最佳）</h3><blockquote>
<ul>
<li>靜態磁區使用所有於儲存池可用之空間，沒有快照、彈性調整容量的功能</li>
<li>組建完 Raid 後直接在上層建立檔案系統，效能會比多重完整配置來的好一些 （約 5% ~ 10%）<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_004.jpg" class=""></li>
</ul>
</blockquote>
<h3 id="多重完整配置磁碟區（效能良好和較具彈性）"><a href="#多重完整配置磁碟區（效能良好和較具彈性）" class="headerlink" title="多重完整配置磁碟區（效能良好和較具彈性）"></a>多重完整配置磁碟區（效能良好和較具彈性）</h3><blockquote>
<ul>
<li>多重完整配置同時具有彈性及效能，可以靜態配置多個磁碟區，而非動態配置（彈性成長）<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_005.jpg" class=""></li>
</ul>
</blockquote>
<ul>
<li>快照保留空間<ul>
<li>建立磁區時可設定保留快照空間而不會被佔用</li>
<li>不需要預先設定保留一樣可以使用快照 （所有<strong>未分配空間</strong>都能拿來放快照，若被分配完畢則無法使用）</li>
</ul>
</li>
<li>系統磁區 <strong>DataVol1</strong><ul>
<li>建議設定 40GB 獨立分割給系統專用 （不要放任何資料在這邊）</li>
<li>家目錄預設在 Vol.1，建議先關閉家目錄後再重新在其他 Volume 建立家目錄</li>
</ul>
</li>
</ul>
<h3 id="多重精簡配置磁碟區（彈性極佳和儲存使用效率較佳）"><a href="#多重精簡配置磁碟區（彈性極佳和儲存使用效率較佳）" class="headerlink" title="多重精簡配置磁碟區（彈性極佳和儲存使用效率較佳）"></a>多重精簡配置磁碟區（彈性極佳和儲存使用效率較佳）</h3><blockquote>
<ul>
<li>精簡配置對於儲存空間規劃提供了較佳的彈性。在磁碟區創建時並不會立即預備好實體的空間給予存取，而是在實際寫入時才會開始配置空間。</li>
<li>當你配置多個磁碟區時，初始為磁區設定上限值，當你寫入資料時才會動態配置磁區大小，因此若是有多個磁蝶區配置在上面，則會因為檔案不連續而影響效能。<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_006.jpg" class=""></li>
</ul>
</blockquote>
<h2 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h2><blockquote>
<p>首先，快照並非備份，只是將當前的檔案狀態保存，日後有異動或是被加密可以回復到拍攝快照時的狀態。</p>
</blockquote>
<h3 id="QNAP-快照空間"><a href="#QNAP-快照空間" class="headerlink" title="QNAP 快照空間"></a>QNAP 快照空間</h3><ol>
<li>拍攝第一份快照，才會開始使用快照空間，此時使用大小約 3 MB ~ 5 MB</li>
<li>當你新增 500MB 的資料時，快照使用大小會變成 503 MB （此時尚未拍攝第二份快照）</li>
<li>拍攝第二份快照，此時使用大小變成 506 MB</li>
<li>移除剛剛新增的 500 MB 資料，快照使用大小依然不變</li>
<li>拍攝第三份快照，快照使用大小變成 509MB</li>
</ol>
<blockquote>
<p>根據以上結果簡單的得出一個結論</p>
<ul>
<li>快照和目錄的概念類似，上面記錄著拍攝當下時的檔案版本</li>
<li>快照使用空間跟檔案的新增和異動相關，只要你的檔案和第一份快照所記錄的不同，就會複製一份進快照空間，而做快照的動作只是建立版本號碼，可以讓你選擇回到哪個時間點的狀態</li>
</ul>
</blockquote>
<ul>
<li>根據以上特性，快照很適合用來防範勒索病毒，當資料被加密時就會即時的將被異動的檔案放入快照空間，就算被加密了，只要回到尚未加密的快照時間點即可。</li>
<li>快照本身沒有相依性，快照只是個目錄，所以單獨刪除中間的快照還是可以回到更早以前的版本</li>
</ul>
<h2 id="共用資料夾"><a href="#共用資料夾" class="headerlink" title="共用資料夾"></a>共用資料夾</h2><h3 id="權限大小"><a href="#權限大小" class="headerlink" title="權限大小"></a>權限大小</h3><p>權限大小按照順序來排列是 <strong>Deny &gt; Read&#x2F;Write  &gt; Read-only</strong></p>
<blockquote>
<p>舉例來說：<br>假設你今天建立了一個 <code>MIS</code> 使用者群組，底下有 <code>Tom</code>、<code>Vincent</code> 兩位使用者<br>然後 <code>A</code> 資料夾 <code>MIS</code> 群組權限 <strong>R&#x2F;W</strong>，<code>Tom</code> 使用者權限 <strong>Deny</strong><br>那結果就會是 <code>Tom</code> 無法存取，<code>MIS</code> 其他人一樣可讀可寫</p>
</blockquote>
<blockquote>
<p>例子二：<br><code>A</code> 資料夾 <code>MIS</code> 群組權限 <strong>R&#x2F;W</strong>，<code>Vincent</code> 使用者權限 <strong>Read-only</strong><br>那 <code>Vincent</code> 使用者對於 <code>A</code> 資料夾的權限還是<strong>可讀可寫</strong>，因為 <strong>Read&#x2F;Write  &gt; Read-only</strong><br>所以 <strong>Read&#x2F;Write</strong> 就會覆蓋掉 <strong>Read-only</strong></p>
</blockquote>
<h3 id="Windows-ACL"><a href="#Windows-ACL" class="headerlink" title="Windows ACL"></a>Windows ACL</h3><blockquote>
<p>首先，微軟的資料夾權限有分為 <strong>共用權限</strong> 以及 <strong>安全性權限</strong> 兩種<br>而 QNAP 所提供 <strong>Windows ACL</strong> 功能則是將 <strong>安全性權限</strong> 放給 Windows 做管理</p>
</blockquote>
<ul>
<li>共用權限由 NAS 決定 （共用資料夾根目錄）</li>
<li>安全性權限由 Windows 決定 （子資料夾權限由 Windows 決定）</li>
</ul>
<img src="/2018/06/12/%E9%9A%A8%E7%AD%86-QNAP-%E5%8E%9F%E5%BB%A0%E6%8A%80%E8%A1%93%E8%AC%9B%E7%BF%92%E7%AD%86%E8%A8%98/QNAP_007.png" class="">


<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>以上資訊來自 QNAP 原廠工程師技術講習以及官方網站，若有理解錯誤請不吝告知，謝謝！</p>
]]></content>
      <categories>
        <category>Storage</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>QNAP</tag>
      </tags>
  </entry>
  <entry>
    <title>[Ubuntu] OpenVAS 9 安裝</title>
    <url>/2018/08/05/Ubuntu-OpenVAS-9-%E5%AE%89%E8%A3%9D/</url>
    <content><![CDATA[<h2 id="版本-Ubuntu-16-04-LTS"><a href="#版本-Ubuntu-16-04-LTS" class="headerlink" title="版本 Ubuntu 16.04 LTS"></a>版本 Ubuntu 16.04 LTS</h2><h3 id="加入-PPA-repository"><a href="#加入-PPA-repository" class="headerlink" title="加入 PPA repository"></a>加入 PPA repository</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add-apt-repository ppa:mrazavi/openvas</span><br></pre></td></tr></table></figure>
<h3 id="apt-update-及安裝套件"><a href="#apt-update-及安裝套件" class="headerlink" title="apt update 及安裝套件"></a>apt update 及安裝套件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install sqlite3</span><br><span class="line">apt install openvas9</span><br><span class="line">apt install libopenvas9-dev</span><br><span class="line">apt install smbclient</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<h3 id="同步-NVT-Feed-x2F-SCAP-Database-x2F-CERT-Database"><a href="#同步-NVT-Feed-x2F-SCAP-Database-x2F-CERT-Database" class="headerlink" title="同步 NVT Feed &#x2F; SCAP Database &#x2F; CERT Database"></a>同步 NVT Feed &#x2F; SCAP Database &#x2F; CERT Database</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">greenbone-nvt-sync</span><br><span class="line">greenbone-scapdata-sync</span><br><span class="line">greenbone-certdata-sync</span><br></pre></td></tr></table></figure>
<h3 id="重啟服務並加載-Feed"><a href="#重啟服務並加載-Feed" class="headerlink" title="重啟服務並加載 Feed"></a>重啟服務並加載 Feed</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service openvas-manager restart</span><br><span class="line">service openvas-scanner restart</span><br><span class="line">openvasmd --rebuild --progress</span><br></pre></td></tr></table></figure>
<h3 id="打開瀏覽器查看是否運作正常"><a href="#打開瀏覽器查看是否運作正常" class="headerlink" title="打開瀏覽器查看是否運作正常"></a>打開瀏覽器查看是否運作正常</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://&lt;your-ip-addr&gt;:4000</span><br><span class="line"></span><br><span class="line">預設帳號密碼 admin / admin</span><br></pre></td></tr></table></figure>

<img src="/2018/08/05/Ubuntu-OpenVAS-9-%E5%AE%89%E8%A3%9D/OpenVAS_Web.jpg" class="">



<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://hackertarget.com/openvas-9-install-ubuntu-1604/">OpenVAS 9 install on Ubuntu 16.04</a></li>
<li><a href="http://www.netadmin.com.tw/article_content.aspx?sn=1606210002&jump=2">自建OpenVAS弱點掃描 資安稽核報表不求人(下)</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>弱點掃描</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] Aruba Controller &amp; Palo Alto User-ID 整合筆記</title>
    <url>/2018/10/08/%E9%9A%A8%E7%AD%86-Aruba-Controller-Palo-Alto-User-ID-%E6%95%B4%E5%90%88%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<img src="/2018/10/08/%E9%9A%A8%E7%AD%86-Aruba-Controller-Palo-Alto-User-ID-%E6%95%B4%E5%90%88%E7%AD%86%E8%A8%98/User-ID.png" class="">

<h1 id="Pre-configurations-on-the-Palo-Alto-Networks-Firewall"><a href="#Pre-configurations-on-the-Palo-Alto-Networks-Firewall" class="headerlink" title="Pre-configurations on the Palo Alto Networks Firewall"></a>Pre-configurations on the Palo Alto Networks Firewall</h1><h3 id="1-Create-New-Device-Admin-Account-For-Aruba"><a href="#1-Create-New-Device-Admin-Account-For-Aruba" class="headerlink" title="1. Create New Device Admin Account (For Aruba)"></a>1. Create New Device Admin Account (For Aruba)</h3><blockquote>
<p>An <strong>Device Admin</strong> account must be created on the Palo Alto Networks firewall to allow the controller to send data to it.<br>The built-in Admin account can be used for this purpose but that is not recommended.<br>It is better to create a new Admin account used solely for the purpose of communications between the controller and Palo Alto</p>
</blockquote>
<span id="more"></span> 
<h1 id="Aruba-Controller-Configuration-on-AOS-6-4"><a href="#Aruba-Controller-Configuration-on-AOS-6-4" class="headerlink" title="Aruba Controller Configuration on AOS 6.4"></a>Aruba Controller Configuration on AOS 6.4</h1><h3 id="1-Creating-the-Server-Profile-for-Palo-Alto-Network-on-the-Controller"><a href="#1-Creating-the-Server-Profile-for-Palo-Alto-Network-on-the-Controller" class="headerlink" title="1. Creating the Server Profile for Palo Alto Network on the Controller"></a>1. Creating the Server Profile for Palo Alto Network on the Controller</h3><blockquote>
<p><strong>To configure a new Palo Alto Networks profile</strong></p>
<ol>
<li>Navigate to Configuration &gt; Advanced Services &gt; All Profiles &gt; Other Profiles &gt; Palo Alto Networks Servers</li>
<li>Type the name of the profile and click Add</li>
<li>Click on the name of the profile created to open the Profile Details window</li>
<li>Enter the Host (IP address or hostname) of the Palo Alto Networks firewall</li>
<li>Enter the Port (1 – 65535) of the Palo Alto Networks Firewall<br>Note: The port used by default is 443</li>
<li>Enter the Username of the Palo Alto Networks firewall.<br>The user name is between 1 and 255 bytes in length and must match the Admin Account previously created on the Palo Alto Networks firewall.<br>Note: Refer to section 3.3</li>
<li>Enter the Password of the username in Palo Alto Networks Firewall. The password is between 6 and 100 bytes in length and must match the password of the Admin account previously created on the Palo Alto Networks firewall.</li>
<li>Re-enter the Password entered in the previous step</li>
<li>Click Add</li>
<li>Click Apply</li>
</ol>
</blockquote>
<h3 id="2-Activating-the-Palo-Alto-Networks-profile"><a href="#2-Activating-the-Palo-Alto-Networks-profile" class="headerlink" title="2. Activating the Palo Alto Networks profile"></a>2. Activating the Palo Alto Networks profile</h3><blockquote>
<p><strong>To apply a Palo Alto Networks Server profile on the local controller, complete the following steps:</strong></p>
<ol>
<li>Navigate to Configuration &gt; Advanced Services &gt; All Profiles &gt; Other Profiles &gt; Palo Alto Networks Active.</li>
<li>Select Active Palo Alto Networks. To the right of this link, the name of the active profile is displayed.</li>
<li>Other configured profile can be selected from the Active Palo Alto Networks Profile &gt; drop-down menu.<br>To configure a new profile, select NEW from the drop down menu and complete the configuration details.</li>
<li>Once a profile is selected from the drop-down menu or a new profile is created, click Apply.</li>
</ol>
</blockquote>
<h3 id="3-Enabling-the-Palo-Alto-Networks-Firewall-Integration"><a href="#3-Enabling-the-Palo-Alto-Networks-Firewall-Integration" class="headerlink" title="3. Enabling the Palo Alto Networks Firewall Integration"></a>3. Enabling the Palo Alto Networks Firewall Integration</h3><blockquote>
<p><strong>To enable a Palo Alto Netwokrs firewall integration in the AAA profile:</strong></p>
<ol>
<li>Navigate to Configuration &gt; Security &gt; Authentication &gt; AAA Profiles page</li>
<li>In the AAA Profiles Summary, select the desired profile</li>
<li>Check the PAN firewalls Integration check box</li>
<li>Click Apply</li>
</ol>
</blockquote>
<h1 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h1><h3 id="Q1-Timeout-x2F-Ping-不通"><a href="#Q1-Timeout-x2F-Ping-不通" class="headerlink" title="Q1. Timeout &#x2F; Ping 不通"></a>Q1. Timeout &#x2F; Ping 不通</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(Aruba7210) #ping &lt;pa_ip_addr&gt;</span><br><span class="line"></span><br><span class="line">Press &#x27;q&#x27; to abort.</span><br><span class="line">Sending 5, 92-byte ICMP Echos to &lt;pa_ip_addr&gt;, timeout is 2 seconds:</span><br><span class="line">.....</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(Aruba7210) #show pan state </span><br><span class="line"></span><br><span class="line">Palo Alto Networks Servers Connection State[PA5220]</span><br><span class="line">---------------------------------------------------</span><br><span class="line">Firewall          State</span><br><span class="line">--------          -----</span><br><span class="line">&lt;pa_ip_addr&gt;:443  DOWN[10/08/18 14:29:42]</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(Aruba7210) # show log system all | include |pan|</span><br><span class="line"></span><br><span class="line">Oct 8 14:39:27 :309109:  &lt;WARN&gt; |extifmgr| |pan| Session to PAN server [https://&lt;pa_ip_addr&gt;:443/api/] Failed - code:1004[Timeout was reached(28)]</span><br></pre></td></tr></table></figure>
<h4 id="檢查-PA-是否放行-Controller-IP-訪問管理介面"><a href="#檢查-PA-是否放行-Controller-IP-訪問管理介面" class="headerlink" title="檢查 PA 是否放行 Controller IP 訪問管理介面"></a>檢查 PA 是否放行 Controller IP 訪問管理介面</h4><blockquote>
<p>Device &gt; Setup &gt; Interfaces &gt; Management &gt; Add Permitted IP Addresses</p>
</blockquote>
<h3 id="Q2-憑證問題"><a href="#Q2-憑證問題" class="headerlink" title="Q2. 憑證問題"></a>Q2. 憑證問題</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(Aruba7210) # show log system all | include |pan|</span><br><span class="line"></span><br><span class="line">Oct 8 15:19:20 :309109:  &lt;WARN&gt; |extifmgr| |pan| Session to PAN server [https://&lt;pa_ip_addr&gt;:443/api/] Failed - code:1003[Peer certificate cannot be authenticated with given CA certificates(60)]</span><br></pre></td></tr></table></figure>

<h4 id="從-PA-上匯出憑證至-Aruba-Controller"><a href="#從-PA-上匯出憑證至-Aruba-Controller" class="headerlink" title="從 PA 上匯出憑證至 Aruba Controller"></a>從 PA 上匯出憑證至 Aruba Controller</h4><blockquote>
<p><strong>Palo Alto:</strong><br>Device &gt; Certificate Management &gt; Certificate &gt; Export Certificate</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Export Certificate</span><br><span class="line">File Format: Base64 Encoded Certificate (PEM)</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>Aruba Controller:</strong><br>Configuration &gt; Management &gt; Certificates &gt; Upload</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Upload a Certificate</span><br><span class="line">Certificate Format: PEM</span><br><span class="line">Certificate Type: Trusted CA</span><br></pre></td></tr></table></figure>

<p><strong>信任 CA 後依然顯示憑證有問題，嘗試以下做法</strong></p>
<blockquote>
<p><strong>Palo Alto 重新產生自簽證書</strong><br><strong><a href="https://www.paloaltonetworks.com/documentation/71/pan-os/pan-os/certificate-management/create-a-self-signed-root-ca-certificate">Generate a Self-signed Root CA Certificate</a></strong></p>
<ol>
<li>Select Device &gt; Certificate Management &gt; Certificates &gt; Device Certificates.</li>
<li>If the firewall has more than one virtual system (vsys), select a Location (vsys or Shared) for the certificate.</li>
<li>Click Generate.</li>
<li>Enter a Certificate Name, such as GlobalProtect_CA. The name is case-sensitive and can have up to 31 characters. It must be unique and use only letters, numbers, hyphens, and underscores.</li>
<li>In the Common Name field, enter the FQDN (recommended) or IP address of the interface where you will configure the service that will use this certificate.</li>
<li>If the firewall has more than one vsys and you want the certificate to be available to every vsys, select the Shared check box.</li>
<li>Leave the Signed By field blank to designate the certificate as self-signed.</li>
<li>(Required) Select the Certificate Authority check box.</li>
<li>Leave the OCSP Responder field blank; revocation status verification doesn’t apply to root CA certificates.</li>
<li>Click Generate and Commit.</li>
</ol>
</blockquote>
<blockquote>
<p><strong>Palo Alto 證書替換管理流量證書（HTTPS）</strong><br><strong><a href="https://www.paloaltonetworks.com/documentation/71/pan-os/pan-os/certificate-management/replace-the-certificate-for-inbound-management-traffic">Replace the Certificate for Inbound Management Traffic</a></strong></p>
<ol>
<li>Configure an SSL&#x2F;TLS Service Profile.</li>
</ol>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select Device &gt; Certificate Management &gt; SSL/TLS Service Profile &gt; </span><br><span class="line">Add &gt; Select the Certificate you just obtained</span><br><span class="line">Protocol Min Version: TLSv1.1</span><br></pre></td></tr></table></figure>
<blockquote>
<ol start="2">
<li>Apply the SSL&#x2F;TLS Service Profile to inbound management traffic.</li>
</ol>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select Device &gt; Setup &gt; Management and edit the General Settings.</span><br><span class="line">Select the SSL/TLS Service Profile you just configured.</span><br><span class="line">Click OK and Commit.</span><br></pre></td></tr></table></figure>

<h4 id="重新匯出剛剛新產生的憑證至-Aruba-Controller-並測試"><a href="#重新匯出剛剛新產生的憑證至-Aruba-Controller-並測試" class="headerlink" title="重新匯出剛剛新產生的憑證至 Aruba Controller 並測試"></a>重新匯出剛剛新產生的憑證至 Aruba Controller 並測試</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(Aruba7210) #show pan state </span><br><span class="line"></span><br><span class="line">Palo Alto Networks Servers Connection State[PA5220]</span><br><span class="line">---------------------------------------------------</span><br><span class="line">Firewall          State</span><br><span class="line">--------          -----</span><br><span class="line">&lt;pa_ip_addr&gt;:443  UP[10/08/18 16:42:21]Established</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://www.arubanetworks.com/pdf/partners/SG_PaloAltoNetworks.pdf">Palo Alto Networks NextGeneration Firewall and Aruba WLAN Integration</a></li>
<li><a href="https://community.arubanetworks.com/t5/Wireless-Access/Troubleshoot-PAN-Integration/td-p/256433">Troubleshoot PAN Integration</a></li>
<li><a href="https://www.paloaltonetworks.com/documentation/71/pan-os/pan-os/certificate-management/create-a-self-signed-root-ca-certificate">Generate a Self-signed Root CA Certificate</a></li>
<li><a href="https://www.paloaltonetworks.com/documentation/71/pan-os/pan-os/certificate-management/replace-the-certificate-for-inbound-management-traffic">Replace the Certificate for Inbound Management Traffic</a></li>
</ul>
]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>Aruba</tag>
        <tag>Palo-Alto</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] Cisco 2960X IOS 版本挑選 &amp; 更新</title>
    <url>/2018/11/25/%E9%9A%A8%E7%AD%86-Cisco-2960X-IOS-%E7%89%88%E6%9C%AC%E6%8C%91%E9%81%B8-%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h2 id="版本挑選"><a href="#版本挑選" class="headerlink" title="版本挑選"></a>版本挑選</h2><h4 id="版本號說明請參考友站連結："><a href="#版本號說明請參考友站連結：" class="headerlink" title="版本號說明請參考友站連結："></a>版本號說明請參考友站連結：</h4><p><a href="http://bigpxuan.blogspot.com/2017/02/cisco12415.html">大軒軒的筆記本 - Cisco版本號說明12.4和15</a></p>
<h4 id="官方工具："><a href="#官方工具：" class="headerlink" title="官方工具："></a>官方工具：</h4><ul>
<li><a href="https://software.cisco.com/download/home/">Cisco Software Download</a><br>輸入 Product Name 來搜尋 &amp; 下載 IOS，沒有特別需求一般推薦選擇 Suggested Release</li>
<li><a href="https://tools.cisco.com/security/center/softwarechecker.x">Cisco IOS Software Checker</a><br>檢查對應版本是否有已知漏洞</li>
<li><a href="https://bst.cloudapps.cisco.com/bugsearch/">Cisco Bug Search Tool</a><br>輸入 Product Name &amp; Releases，查詢是否有已知的 Bug</li>
</ul>
<span id="more"></span> 

<h2 id="更新步驟"><a href="#更新步驟" class="headerlink" title="更新步驟"></a>更新步驟</h2><h4 id="1-設定-Layer-3-介面（int-vlan1-也可以），待會要利用-TFTP-來傳輸-Image"><a href="#1-設定-Layer-3-介面（int-vlan1-也可以），待會要利用-TFTP-來傳輸-Image" class="headerlink" title="1. 設定 Layer 3 介面（int vlan1 也可以），待會要利用 TFTP 來傳輸 Image"></a>1. 設定 Layer 3 介面（int vlan1 也可以），待會要利用 TFTP 來傳輸 Image</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#conf t</span><br><span class="line"></span><br><span class="line">Switch(config)#int fastEthernet 0</span><br><span class="line">Switch(config-if)#ip address 192.168.1.33 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#</span><br></pre></td></tr></table></figure>

<h4 id="2-測通-TFTP-Server"><a href="#2-測通-TFTP-Server" class="headerlink" title="2. 測通 TFTP Server"></a>2. 測通 TFTP Server</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#ping 192.168.1.100</span><br><span class="line">Type escape sequence to abort.</span><br><span class="line">Sending 5, 100-byte ICMP Echos to 192.168.1.100, timeout is 2 seconds:</span><br><span class="line">!!!!!</span><br><span class="line">Success rate is 100 percent (5/5), round-trip min/avg/max = 1/203/1000 ms</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure>

<h4 id="3-Copy-IOS-Image-到-flash-上"><a href="#3-Copy-IOS-Image-到-flash-上" class="headerlink" title="3. Copy IOS Image 到 flash 上"></a>3. Copy IOS Image 到 flash 上</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#copy tftp flash:</span><br><span class="line">Address or name of remote host []? 192.168.1.100</span><br><span class="line">Source filename []? c2960x-universalk9-mz.152-2.E9.bin</span><br><span class="line">Destination filename [c2960x-universalk9-mz.152-2.E9.bin]? </span><br><span class="line">Accessing tftp://192.168.1.100/c2960x-universalk9-mz.152-2.E9.bin...</span><br><span class="line">Loading c2960x-universalk9-mz.152-2.E9.bin from 192.168.1.100 (via FastEthernet0): !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span><br><span class="line">[OK - 21141504 bytes]</span><br><span class="line"></span><br><span class="line">21141504 bytes copied in 171.882 secs (123000 bytes/sec)</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure>

<h4 id="4-檢查檔案"><a href="#4-檢查檔案" class="headerlink" title="4. 檢查檔案"></a>4. 檢查檔案</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#show flash:</span><br><span class="line"></span><br><span class="line">Directory of flash:/</span><br><span class="line"></span><br><span class="line">  671  -rwx        1048  Nov 23 2018 02:34:38 +00:00  multiple-fs</span><br><span class="line">    2  -rwx          34  Nov 23 2018 02:38:12 +00:00  pnp-tech-time</span><br><span class="line">    3  -rwx       11117  Nov 23 2018 02:38:14 +00:00  pnp-tech-discovery-summary</span><br><span class="line">  672  -rwx    21141504  Nov 23 2018 02:53:15 +00:00  c2960x-universalk9-mz.152-2.E9.bin</span><br><span class="line">    4  drwx         512   Aug 8 2018 17:23:16 +00:00  c2960x-universalk9-mz.152-2.E7</span><br><span class="line">  669  drwx         512   Aug 8 2018 17:23:16 +00:00  dc_profile_dir</span><br><span class="line"></span><br><span class="line">122185728 bytes total (73718272 bytes free)</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure>

<h4 id="5-設定-boot-參數為新的-IOS-Image"><a href="#5-設定-boot-參數為新的-IOS-Image" class="headerlink" title="5. 設定 boot 參數為新的 IOS Image"></a>5. 設定 boot 參數為新的 IOS Image</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#show boot</span><br><span class="line">BOOT path-list      : flash:/c2960x-universalk9-mz.152-2.E7/c2960x-universalk9-mz.152-2.E7.bin</span><br><span class="line">Config file         : flash:/config.text</span><br><span class="line">Private Config file : flash:/private-config.text</span><br><span class="line">Enable Break        : yes</span><br><span class="line">Manual Boot         : no</span><br><span class="line">Allow Dev Key         : yes</span><br><span class="line">HELPER path-list    : </span><br><span class="line">Auto upgrade        : yes</span><br><span class="line">Auto upgrade path   : </span><br><span class="line">NVRAM/Config file</span><br><span class="line">      buffer size:   524288</span><br><span class="line">Timeout for Config</span><br><span class="line">          Download:    0 seconds</span><br><span class="line">Config Download </span><br><span class="line">       via DHCP:       disabled (next boot: disabled)</span><br><span class="line">Switch#</span><br><span class="line"></span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#boot system flash:c2960x-universalk9-mz.152-2.E9.bin</span><br><span class="line"></span><br><span class="line">Switch(config)#end</span><br><span class="line">Switch#show boot</span><br><span class="line">BOOT path-list      : flash:c2960x-universalk9-mz.152-2.E9.bin</span><br><span class="line">Config file         : flash:/config.text</span><br><span class="line">Private Config file : flash:/private-config.text</span><br><span class="line">Enable Break        : yes</span><br><span class="line">Manual Boot         : no</span><br><span class="line">Allow Dev Key         : yes</span><br><span class="line">HELPER path-list    : </span><br><span class="line">Auto upgrade        : yes</span><br><span class="line">Auto upgrade path   : </span><br><span class="line">NVRAM/Config file</span><br><span class="line">      buffer size:   524288</span><br><span class="line">Timeout for Config</span><br><span class="line">          Download:    0 seconds</span><br><span class="line">Config Download </span><br><span class="line">       via DHCP:       disabled (next boot: disabled)</span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure>

<h4 id="6-存檔-amp-reload"><a href="#6-存檔-amp-reload" class="headerlink" title="6. 存檔 &amp; reload"></a>6. 存檔 &amp; reload</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#write </span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br><span class="line">Switch#reload</span><br><span class="line">Proceed with reload? [confirm]</span><br><span class="line"></span><br><span class="line">Nov 23 03:05:08.769: %SYS-5-RELOAD: Reload requested by console. Reload Reason: Reload command.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Networking</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>Cisco</tag>
      </tags>
  </entry>
  <entry>
    <title>[CentOS] CentOS 7 GitLab 安裝 &amp; HTTPS 設定</title>
    <url>/2019/01/31/CentOS-CentOS-7-GitLab-%E5%AE%89%E8%A3%9D-HTTPS-%E8%A8%AD%E5%AE%9A/</url>
    <content><![CDATA[<h2 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h2><h3 id="1-安裝基礎套件"><a href="#1-安裝基礎套件" class="headerlink" title="1. 安裝基礎套件"></a>1. 安裝基礎套件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 更新並安裝套件</span><br><span class="line">yum update</span><br><span class="line">yum install -y curl policycoreutils-python openssh-server openssh-clients</span><br><span class="line"># sshd 開機啟動</span><br><span class="line">systemctl enable sshd</span><br><span class="line">systemctl start sshd</span><br><span class="line"></span><br><span class="line"># 安裝 postfix</span><br><span class="line">yum install postfix</span><br><span class="line"># postfix 開機自動啟用</span><br><span class="line">systemctl enable postfix</span><br><span class="line">systemctl start postfix</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<h3 id="2-安裝-GitLab-CE"><a href="#2-安裝-GitLab-CE" class="headerlink" title="2. 安裝 GitLab-CE"></a>2. 安裝 GitLab-CE</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash</span><br><span class="line">yum install -y gitlab-ce</span><br></pre></td></tr></table></figure>

<h3 id="3-拷貝-HTTPS-證書"><a href="#3-拷貝-HTTPS-證書" class="headerlink" title="3. 拷貝 HTTPS 證書"></a>3. 拷貝 HTTPS 證書</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/gitlab/ssl</span><br><span class="line">chmod 700 /etc/gitlab/ssl</span><br><span class="line">cp gitlab.example.com.key gitlab.example.com.crt /etc/gitlab/ssl/</span><br></pre></td></tr></table></figure>

<h3 id="4-編輯-gitlab-rb"><a href="#4-編輯-gitlab-rb" class="headerlink" title="4. 編輯 gitlab.rb"></a>4. 編輯 gitlab.rb</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改配置文件</span><br><span class="line">vim /etc/gitlab/gitlab.rb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 修改對外域名</span><br><span class="line">external_url &#x27;https://gitlab.example.com&#x27;</span><br><span class="line"># HTTPS 重導向</span><br><span class="line">nginx[&#x27;redirect_http_to_https&#x27;] = true</span><br><span class="line">nginx[&#x27;redirect_http_to_https_port&#x27;] = 80</span><br><span class="line"># 修改證書 &amp; 私鑰對應檔案位置</span><br><span class="line">nginx[&#x27;ssl_certificate&#x27;] = &quot;/etc/gitlab/ssl/gitlab.example.com.crt&quot;</span><br><span class="line">nginx[&#x27;ssl_certificate_key&#x27;] = &quot;/etc/gitlab/ssl/gitlab.example.com.key&quot;</span><br><span class="line"></span><br><span class="line"># SMTP 設定依照需求自行參考此篇</span><br><span class="line">[SMTP settings](https://docs.gitlab.com/omnibus/settings/smtp.html)</span><br><span class="line"></span><br><span class="line"># 重新加載配置文件</span><br><span class="line">gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>
<h3 id="5-防火牆放行-https-流量"><a href="#5-防火牆放行-https-流量" class="headerlink" title="5. 防火牆放行 https 流量"></a>5. 防火牆放行 https 流量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-service=https</span><br><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://about.gitlab.com/install/#centos-7?version=ce">Omnibus package installation (recommended)</a></li>
<li><a href="https://docs.gitlab.com/omnibus/settings/smtp.html">SMTP settings</a></li>
<li><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md">NGINX settings</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>GitLab</tag>
      </tags>
  </entry>
  <entry>
    <title>[Windows] Windows 10 2019 LTSC Eval（評估版）無痛轉換成 Full version（完整版）</title>
    <url>/2019/02/22/Windows-Win10-2019-LTSC-Eval%EF%BC%88%E8%A9%95%E4%BC%B0%E7%89%88%EF%BC%89%E7%84%A1%E7%97%9B%E8%BD%89%E6%8F%9B%E6%88%90-Full-version%EF%BC%88%E5%AE%8C%E6%95%B4%E7%89%88%EF%BC%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近剛好要重灌電腦就順便裝了 LTSC 版本，本來想說不要亂下載非官方的 ISO 檔比較安全，特別去下載微軟官方評估版來安裝，結果 Eval 版本沒辦法用完整版序號來洗成正版，官方表明不能升級只能重裝，還好最後有找到免重裝的方法，重灌實在是太麻煩了…</p>
<h1 id="準備完整版-Windows-10-2019-LTSC-ISO"><a href="#準備完整版-Windows-10-2019-LTSC-ISO" class="headerlink" title="準備完整版 Windows 10 2019 LTSC ISO"></a>準備完整版 Windows 10 2019 LTSC ISO</h1><h4 id="1-下載-EN-US-Windows-10-2019-LTSC-Eval-ISO（微軟載點）"><a href="#1-下載-EN-US-Windows-10-2019-LTSC-Eval-ISO（微軟載點）" class="headerlink" title="1. 下載 EN-US Windows 10 2019 LTSC Eval ISO（微軟載點）"></a>1. 下載 EN-US Windows 10 2019 LTSC Eval ISO（微軟載點）</h4><ul>
<li><a href="https://software-download.microsoft.com/download/pr/17763.1.180914-1434.rs5_release_CLIENT_LTSC_EVAL_x64FRE_en-us.iso">17763.1.180914-1434.rs5_release_CLIENT_LTSC_EVAL_x64FRE_en-us.iso</a></li>
<li><a href="https://software-download.microsoft.com/download/pr/17763.1.180914-1434.rs5_release_CLIENT_LTSC_EVAL_x86FRE_en-us.iso">17763.1.180914-1434.rs5_release_CLIENT_LTSC_EVAL_x86FRE_en-us.iso</a></li>
</ul>
<h4 id="2-下載-SPF-檔案-Language-Patch"><a href="#2-下載-SPF-檔案-Language-Patch" class="headerlink" title="2.  下載 SPF 檔案 (Language Patch)"></a>2.  下載 SPF 檔案 (Language Patch)</h4><p><a href="https://multiup.org/project/27b404c4cdef0b7def4a9c7f0e303f3e"><code>Password: MDL</code></a></p>
<span id="more"></span> 
<h4 id="3-利用-SVF-ISO-convertor-將檔案合併成完整版-ISO"><a href="#3-利用-SVF-ISO-convertor-將檔案合併成完整版-ISO" class="headerlink" title="3. 利用 SVF ISO convertor 將檔案合併成完整版 ISO"></a>3. 利用 SVF ISO convertor 將檔案合併成完整版 ISO</h4><ul>
<li>下載 <a href="https://www.softpedia.com/get/System/Back-Up-and-Recovery/SVF-eXtractor.shtml">svfx.exe</a>，選取 ISO &amp; SVF 並驗證</li>
</ul>
<img src="/2019/02/22/Windows-Win10-2019-LTSC-Eval%EF%BC%88%E8%A9%95%E4%BC%B0%E7%89%88%EF%BC%89%E7%84%A1%E7%97%9B%E8%BD%89%E6%8F%9B%E6%88%90-Full-version%EF%BC%88%E5%AE%8C%E6%95%B4%E7%89%88%EF%BC%89/SVF.png" class="">


<h1 id="修改-Register-騙過微軟升級檢測"><a href="#修改-Register-騙過微軟升級檢測" class="headerlink" title="修改 Register 騙過微軟升級檢測"></a>修改 Register 騙過微軟升級檢測</h1><p>路徑：<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion</code></p>
<ul>
<li><code>Composition edition ID</code>:  EnterpriseS</li>
<li><code>EditionID</code>: EnterpriseS</li>
<li><code>Product name</code>: Windows 10 Enterprise LTSC 2019</li>
</ul>
<h1 id="掛載-Full-version-ISO-進行升級"><a href="#掛載-Full-version-ISO-進行升級" class="headerlink" title="掛載 Full version ISO 進行升級"></a>掛載 Full version ISO 進行升級</h1><p><strong>修改完 Register 後不要重開機，直接掛載 ISO 進行升級並保留資料，記得要勾選下載更新，才不會有問題</strong></p>
<img src="/2019/02/22/Windows-Win10-2019-LTSC-Eval%EF%BC%88%E8%A9%95%E4%BC%B0%E7%89%88%EF%BC%89%E7%84%A1%E7%97%9B%E8%BD%89%E6%8F%9B%E6%88%90-Full-version%EF%BC%88%E5%AE%8C%E6%95%B4%E7%89%88%EF%BC%89/Win10_Installer.jpg" class="">



<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://forums.mydigitallife.net/threads/windows-10-svf-repository.63324/page-128#post-1468363">Windows 10 SVF Repository#2546 @Enthousiast</a></li>
<li><a href="https://gist.github.com/CHEF-KOCH/35a857cf4a08a837958fb71e252a84da">CHEF-KOCH&#x2F;How to use svf to upgrade your Windows.txt</a></li>
<li><a href="https://winaero.com/blog/upgrade-windows-10-evaluation-to-full-version-easily/">Upgrade Windows 10 Evaluation to Full version easily</a></li>
<li><a href="https://www.reddit.com/r/Piracy/comments/a6zabz/windows_10_ltsc_evaluation_activation/">Windows 10 LTSC Evaluation - Activation</a></li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>[CentOS] zsh &amp; z.lua 快速選徑安裝</title>
    <url>/2019/03/07/CentOS-zsh-z-lua-%E5%BF%AB%E9%80%9F%E9%81%B8%E5%BE%91%E5%AE%89%E8%A3%9D/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>菜鳥如我最近剛學了些提升命令行下生產力的工具，筆記一下安裝方法。</p>
<h1 id="安裝-zsh"><a href="#安裝-zsh" class="headerlink" title="安裝 zsh"></a>安裝 zsh</h1><h3 id="1-安裝-zsh-amp-git-包"><a href="#1-安裝-zsh-amp-git-包" class="headerlink" title="1. 安裝 zsh &amp; git 包"></a>1. 安裝 zsh &amp; git 包</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install zsh git</span><br></pre></td></tr></table></figure>

<h3 id="2-將預設-shell-更換為-zsh"><a href="#2-將預設-shell-更換為-zsh" class="headerlink" title="2. 將預設 shell 更換為 zsh"></a>2. 將預設 shell 更換為 zsh</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>

<h3 id="3-登出帳號讓配置生效"><a href="#3-登出帳號讓配置生效" class="headerlink" title="3. 登出帳號讓配置生效"></a>3. 登出帳號讓配置生效</h3><h3 id="4-安裝-Oh-My-Zsh"><a href="#4-安裝-Oh-My-Zsh" class="headerlink" title="4. 安裝 Oh My Zsh"></a>4. 安裝 Oh My Zsh</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure>

<h3 id="5-可以根據需要自行調整主題"><a href="#5-可以根據需要自行調整主題" class="headerlink" title="5. 可以根據需要自行調整主題"></a>5. 可以根據需要自行調整主題</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME=&quot;robbyrussell&quot;</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<h1 id="安裝-z-lua"><a href="#安裝-z-lua" class="headerlink" title="安裝 z.lua"></a>安裝 z.lua</h1><h3 id="1-下載-z-lua"><a href="#1-下載-z-lua" class="headerlink" title="1. 下載 z.lua"></a>1. 下載 z.lua</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc</span><br><span class="line">sudo curl -O https://raw.githubusercontent.com/skywind3000/z.lua/master/z.lua</span><br></pre></td></tr></table></figure>

<h3 id="2-編輯-zshrc-啟用-z-lua"><a href="#2-編輯-zshrc-啟用-z-lua" class="headerlink" title="2. 編輯 .zshrc 啟用 z.lua"></a>2. 編輯 .zshrc 啟用 z.lua</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>新增以下內容</strong><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval &quot;$(lua /etc/z.lua  --init zsh enhanced once echo)&quot;  </span><br><span class="line"></span><br><span class="line">alias zc=&#x27;z -c&#x27;      # 嚴格匹配當前路徑的子路徑</span><br><span class="line">alias zz=&#x27;z -i&#x27;      # 使用交互式選擇模式</span><br><span class="line">alias zf=&#x27;z -I&#x27;      # 使用 fzf 對多個結果進行選擇</span><br><span class="line">alias zb=&#x27;z -b&#x27;      # 快速回到父目錄</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-重新登錄後即可生效"><a href="#3-重新登錄後即可生效" class="headerlink" title="3. 重新登錄後即可生效"></a>3. 重新登錄後即可生效</h3><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://zhuanlan.zhihu.com/p/56077546">一个会学习你习惯的 cd 命令 - z.lua</a></li>
<li><a href="https://www.zhihu.com/question/21418449">为什么说 zsh 是 shell 中的极品？</a></li>
<li><a href="https://www.jianshu.com/p/556ff130fc65">CentOs安装oh my zsh</a></li>
<li><a href="https://github.com/skywind3000/z.lua">skywind3000&#x2F;z.lua</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] VMWare ESXi 筆記</title>
    <url>/2019/03/21/%E9%9A%A8%E7%AD%86-VMWare-ESXi-%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h2 id="ESXi-Command"><a href="#ESXi-Command" class="headerlink" title="ESXi Command"></a>ESXi Command</h2><ul>
<li><p><strong>Restart</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@node01:~] esxcli system maintenanceMode set -e true</span><br><span class="line">[root@node01:~] esxcli system shutdown reboot -d 10 -r &quot;WEB CRASH&quot;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Shutdown guest vm</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@node01:~] esxcli vm process list </span><br><span class="line">[root@node01:~] esxcli vm process kill --type=soft --world-id=70636</span><br></pre></td></tr></table></figure></li>
<li><p><strong>hostname</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost:~] esxcli system hostname set --host=esxi</span><br><span class="line">[root@esxi:~] esxcli system hostname set --domain=fape.cloud</span><br><span class="line">[root@esxi:~] esxcli system hostname set --fqdn=esxi.fape.cloud</span><br></pre></td></tr></table></figure>
<span id="more"></span></li>
<li><p><strong>Disk Clone</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@esxi:~] cd /vmfs/volumes/WD500G/</span><br><span class="line">[root@esxi:/vmfs/volumes/5b53a83f-dd90c63a-c2d4-0015176a9387] vmkfstools -i Ubuntu-Clean.vmdk -d thin /vmfs/volumes/DSM_iSCSI_320GB/SSR/SSR.vmdk</span><br><span class="line">Destination disk format: VMFS thin-provisioned</span><br><span class="line">Cloning disk &#x27;Ubuntu-Clean.vmdk&#x27;...</span><br><span class="line">Clone: 100% done.</span><br><span class="line">[root@esxi:/vmfs/volumes/5b53a83f-dd90c63a-c2d4-0015176a9387] exit</span><br></pre></td></tr></table></figure></li>
<li><p><strong>Enable SNMP</strong></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@node01:~] esxcli system snmp get</span><br><span class="line">[root@node01:~] esxcli system snmp set --help</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Disk Passthrough</strong><br>  <a href="https://kb.vmware.com/s/article/1017530">https://kb.vmware.com/s/article/1017530</a></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@node01:~] ls -l /vmfs/devices/disks</span><br><span class="line">[root@node01:~] vmkfstools -z /vmfs/devices/disks/naa.5000c5002a06ade0 /vmfs/volumes/datastore1/FreeNAS/320G_Disk1.vmdk</span><br><span class="line">[root@node01:~] vmkfstools -z /vmfs/devices/disks/naa.5000cca35bc41ad6 /vmfs/volumes/datastore1/FreeNAS/320G_Disk2.vmdk</span><br><span class="line">[root@node01:~] vmkfstools -z /vmfs/devices/disks/naa.5000cca369d2fef5 /vmfs/volumes/datastore1/FreeNAS/2TB_Disk1.vmdk</span><br><span class="line">[root@node01:~] vmkfstools -z /vmfs/devices/disks/naa.5000cca221dab4df /vmfs/volumes/datastore1/FreeNAS/2TB_Disk2.vmdk</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Virtualization</category>
      </categories>
      <tags>
        <tag>虛擬化</tag>
        <tag>VMWare-ESXi</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] CentOS 7 常用指令筆記</title>
    <url>/2019/04/28/%E9%9A%A8%E7%AD%86-CentOS-7-%E5%B8%B8%E7%94%A8%E7%AD%86%E8%A8%98%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="更改-Hostname"><a href="#更改-Hostname" class="headerlink" title="更改 Hostname"></a>更改 Hostname</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname &lt;new_hostname&gt;</span><br></pre></td></tr></table></figure>
<h3 id="設定-IP"><a href="#設定-IP" class="headerlink" title="設定 IP"></a>設定 IP</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 進入設定精靈</span><br><span class="line">nmtui</span><br><span class="line"></span><br><span class="line"># 重啟 network</span><br><span class="line">systemctl restart network</span><br><span class="line"></span><br><span class="line"># 檢查設定是否正確</span><br><span class="line">ip address</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="安裝-EPEL-Repository"><a href="#安裝-EPEL-Repository" class="headerlink" title="安裝 EPEL Repository"></a>安裝 EPEL Repository</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure>
<h3 id="安裝-open-vm-tools"><a href="#安裝-open-vm-tools" class="headerlink" title="安裝 open-vm-tools"></a>安裝 open-vm-tools</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install open-vm-tools</span><br></pre></td></tr></table></figure>
<h3 id="停用-SSH-root-登入"><a href="#停用-SSH-root-登入" class="headerlink" title="停用 SSH root 登入"></a>停用 SSH root 登入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 編輯 sshd_config</span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"># 修改以下內容</span><br><span class="line">PermitRootLogin no</span><br><span class="line"></span><br><span class="line"># 重啟 sshd</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>
<h3 id="yum-rollback-到安裝前的狀態"><a href="#yum-rollback-到安裝前的狀態" class="headerlink" title="yum rollback 到安裝前的狀態"></a>yum rollback 到安裝前的狀態</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看預計要退的版本號</span><br><span class="line">yum history</span><br><span class="line"></span><br><span class="line"># undo</span><br><span class="line">yum history undo 8</span><br></pre></td></tr></table></figure>
<h3 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看目前網卡套用的 Zone</span><br><span class="line">firewall-cmd --get-active-zones</span><br><span class="line"></span><br><span class="line"># 將服務或端口永久新增或移除</span><br><span class="line">firewall-cmd --zone=public --permanent --add-service=http</span><br><span class="line">firewall-cmd --zone=public --permanent --add-port=8080/tcp</span><br><span class="line">firewall-cmd --zone=public --permanent --remove-service=http</span><br><span class="line">firewall-cmd --zone=public --permanent --remove-port=8080/tcp</span><br><span class="line"></span><br><span class="line"># reload 防火牆來套用新規則</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"># 檢查設定</span><br><span class="line">firewall-cmd --list-all-zones</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>[CentOS] Zabbix + Grafana 安裝</title>
    <url>/2019/05/29/CentOS-Zabbix-Grafana-%E5%AE%89%E8%A3%9D/</url>
    <content><![CDATA[<h2 id="Zabbix-安裝步驟"><a href="#Zabbix-安裝步驟" class="headerlink" title="Zabbix 安裝步驟"></a>Zabbix 安裝步驟</h2><p><strong>安裝環境：CentOS 7</strong></p>
<p><strong>1. 關閉 SELINUX</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/selinux/config</span><br><span class="line"></span><br><span class="line">## 將 SELINUX 修改為 disabled ##</span><br><span class="line">config&gt;SELINUX=disabled</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<p><strong>2. 安裝 Zabbix 4.0 LTS</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><strong>3. 若沒有安裝 MySQL 或 Maria DB，請按照以下步驟安裝 Maria DB</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/MariaDB.repo</span><br></pre></td></tr></table></figure>
<p>貼上以下內容（根據需求參考以下網址調整　<a href="http://downloads.mariadb.org/mariadb/repositories/">http://downloads.mariadb.org/mariadb/repositories/</a> ）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># MariaDB 10.3 CentOS repository list - created 2019-05-28 01:56 UTC</span><br><span class="line"># http://downloads.mariadb.org/mariadb/repositories/</span><br><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://yum.mariadb.org/10.3/centos7-amd64</span><br><span class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure>
<p><strong>4. 啟動 MariaDB 並設定開機啟動</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start mariadb</span><br><span class="line">systemctl enable mariadb</span><br></pre></td></tr></table></figure>
<p><strong>5. 設定 MariaDB root 密碼</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/mysqladmin -u root password &#x27;new-password&#x27;</span><br></pre></td></tr></table></figure>
<p><strong>6. MariaDB 安全性設定</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p><strong>7. 建立 Zabbix 用帳號 &amp; Database</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">## 建立 zabbix 帳號，記得修改 &lt;password&gt; 並拿掉 &lt;&gt; ##</span><br><span class="line">MariaDB [(none)]&gt; CREATE USER &#x27;zabbix&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;&lt;password&gt;&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &#x27;zabbix&#x27;;  </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; quit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure>

<p><strong>8. 將 Zabbix 初始 SQL 架構和數據導入 MariaDB</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br></pre></td></tr></table></figure>

<p><strong>9. 編輯 zabbix_server.conf</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line"></span><br><span class="line">## 將 DB 密碼設成剛剛 zabbix@localhost 所設定的 ##</span><br><span class="line">DBPassword=&lt;password&gt;</span><br></pre></td></tr></table></figure>

<p><strong>10. 編輯 zabbix.conf</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line"></span><br><span class="line">## 將 timezone 修改為 Asia/Taipei ##</span><br><span class="line">php_value date.timezone Asia/Taipei</span><br></pre></td></tr></table></figure>

<p><strong>11. 重開服務並設定開機啟動</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd</span><br></pre></td></tr></table></figure>
<p><strong>12. 打開防火牆</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=10050/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=10051/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure>
<p><strong>13. 打開 <code>http://server_ip_or_name/zabbix</code> 測試</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Default Username: Admin</span><br><span class="line">Default Password: zabbix</span><br></pre></td></tr></table></figure>
<h2 id="Grafana-安裝步驟"><a href="#Grafana-安裝步驟" class="headerlink" title="Grafana 安裝步驟"></a>Grafana 安裝步驟</h2><p><strong>1. 安裝 Grafana（<a href="https://grafana.com/grafana/download">https://grafana.com/grafana/download</a> ）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-6.2.1-1.x86_64.rpm </span><br><span class="line">yum localinstall grafana-6.2.1-1.x86_64.rpm </span><br></pre></td></tr></table></figure>
<p><strong>2. 設定開機自動啟動 &amp; 啟動 Grafana</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable grafana-server</span><br><span class="line">systemctl start grafana-server</span><br></pre></td></tr></table></figure>
<p><strong>3. 打開防火牆</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=3000/tcp</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure>
<p><strong>4. 打開 <code>http://server_ip_or_name:3000</code> 測試</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Default Username: admin</span><br><span class="line">Default Password: admin</span><br></pre></td></tr></table></figure>
<p><strong>5. 安裝 Zabbix Plugin</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grafana-cli plugins install alexanderzobnin-zabbix-app</span><br><span class="line">systemctl restart grafana-server</span><br></pre></td></tr></table></figure>
<p><strong>6. 增加 Data source</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">URL: http://localhost/zabbix/api_jsonrpc.php</span><br><span class="line">Username: Admin</span><br><span class="line">Password: zabbix</span><br></pre></td></tr></table></figure>
<img src="/2019/05/29/CentOS-Zabbix-Grafana-%E5%AE%89%E8%A3%9D/Data_source.png" class="">

<p><strong>7. 新增 Dashboard 監控設備</strong><br>可以到這邊找模板 <a href="https://grafana.com/dashboards?category=zabbix">https://grafana.com/dashboards?category=zabbix</a></p>
<img src="/2019/05/29/CentOS-Zabbix-Grafana-%E5%AE%89%E8%A3%9D/Dashboard.png" class="">




<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://www.zabbix.com/documentation/current/manual/installation/install_from_packages/rhel_centos">Zabbix Documentation 4.0</a></li>
<li><a href="https://ezbox.idv.tw/76/rhel-centos-7-yum-mariadb-10/">RHEL &#x2F; CentOS 7 用 yum 安裝 MariaDB 10.x</a></li>
<li><a href="https://www.opencli.com/mysql/mysql-add-new-users-databases-privileges">MySQL 新增使用者及建立資料庫權限</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10190611">1-1.監控工具之一:Zabbix Server</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10190837">2-1.監控工具之二:Grafana</a></li>
<li><a href="http://benjr.tw/97973">MariaDB 資料庫使用者登入權限</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
        <tag>Zabbix</tag>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>[隨筆] Install Linux Mint 19.2 on Dell Inspiron 7375</title>
    <url>/2019/11/10/%E9%9A%A8%E7%AD%86-Install-Linux-Mint-19-2-on-Dell-Inspiron-7375/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近搞了台 Ryzen 筆電來跑 Linux，筆記下安裝上的細節</p>
<h1 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h1><ol>
<li><p>安裝部份就跳過了，開機後到 Grub 選單時，按 <code>e</code> 編輯開機選項，找到 <code>Linux</code> 開頭那行，移除 <code>quite</code>，加上 <code>noapic noacpi irqpoll</code></p>
</li>
<li><p>登入後，打開 <code>Update Manager</code> &gt; <code>View</code> &gt; <code>Linux Kernels</code> 選擇最新的穩定版 (當前是 <code>5.3.0-19</code>)並安裝</p>
</li>
<li><p>打開 <code>Terminal</code>，編輯 <code>/etc/default/grub</code>，修改成以下資訊：</p>
<ol>
<li><code>sudo vi /etc/default/grub</code> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;amd_iommu=on ivrs_ioapic[4]=00:14.0 ivrs_ioapic[5]=00:00.2 splash&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>2020-05-15 Update:</code> 改用以下這段，忘了從哪邊抄來的，系統比較不會凍結<br><code>kernel: 5.3.0-40-generic</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;vga=current ivrs_ioapic[4]=00:14.0 ivrs_ioapic[5]=00:00.2 iommu=pt idle=nomwait acpi_backlight=vendor acpi_enforce_resources=lax scsi_mod.use_blk_mq=1&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><code>sudo update-grub</code><span id="more"></span></li>
</ol>
</li>
<li><p>更改預設的中文字體<br> <code>sudo vi /etc/fonts/conf.avail/64-language-selector-prefer.conf</code></p>
<pre><code class="xml">    &lt;?xml version=&quot;1.0&quot;?&gt;
    &lt;!DOCTYPE fontconfig SYSTEM &quot;fonts.dtd&quot;&gt;
    &lt;fontconfig&gt;
        &lt;alias&gt;
            &lt;family&gt;sans-serif&lt;/family&gt;
            &lt;prefer&gt;
                &lt;family&gt;Noto Sans CJK TC&lt;/family&gt;
                &lt;family&gt;Noto Sans CJK SC&lt;/family&gt;
                &lt;family&gt;Noto Sans CJK JP&lt;/family&gt;
                &lt;family&gt;Noto Sans CJK KR&lt;/family&gt;
            &lt;/prefer&gt;
        &lt;/alias&gt;
        &lt;alias&gt;
            &lt;family&gt;serif&lt;/family&gt;
            &lt;prefer&gt;
                &lt;family&gt;Noto Serif CJK TC&lt;/family&gt;
                &lt;family&gt;Noto Serif CJK SC&lt;/family&gt;
                &lt;family&gt;Noto Serif CJK JP&lt;/family&gt;
                &lt;family&gt;Noto Serif CJK KR&lt;/family&gt;
            &lt;/prefer&gt;
        &lt;/alias&gt;
        &lt;alias&gt;
            &lt;family&gt;monospace&lt;/family&gt;
            &lt;prefer&gt;
                &lt;family&gt;Noto Sans Mono CJK TC&lt;/family&gt;
                &lt;family&gt;Noto Sans Mono CJK SC&lt;/family&gt;
                &lt;family&gt;Noto Sans Mono CJK JP&lt;/family&gt;
                &lt;family&gt;Noto Sans Mono CJK KR&lt;/family&gt;
            &lt;/prefer&gt;
        &lt;/alias&gt;
    &lt;/fontconfig&gt;

    cd /etc/fonts/conf.d
    sudo ln -s ../conf.avail/64-language-selector-prefer.conf 64-language-selector-prefer.conf
</code></pre>
</li>
<li><p>重新開機</p>
</li>
</ol>
<h1 id="額外調整"><a href="#額外調整" class="headerlink" title="額外調整"></a>額外調整</h1><ol>
<li>停用觸控螢幕<ul>
<li><code>xinput list</code> 找到觸控螢幕 ID </li>
<li><code>xinput disable &lt;ID&gt;</code></li>
</ul>
</li>
</ol>
<h1 id="參考資訊"><a href="#參考資訊" class="headerlink" title="參考資訊"></a>參考資訊</h1><ul>
<li><a href="https://www.gottahavacuppamocha.com/2019/09/13/installing-linux-mint-19-2-on-a-dell-inspiron-13-7375-2-in-1/">Installing Linux Mint 19.2 on a Dell Inspiron 13 7375 2-in-1</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Dell_Inspiron_7375#Troubleshooting">Arch linux Dell Inspiron 7375</a></li>
<li><a href="https://forums.linuxmint.com/viewtopic.php?t=277544">default Chinese font changed in LM 19, very hard to read - where can I configure it</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>隨筆</tag>
        <tag>Mint</tag>
      </tags>
  </entry>
  <entry>
    <title>[踩坑] fluentd daemonset failed to flush the buffer</title>
    <url>/2019/11/24/%E8%B8%A9%E5%9D%91-fluentd-daemonset-failed-to-flush-the-buffer/</url>
    <content><![CDATA[<h1 id="除錯紀錄"><a href="#除錯紀錄" class="headerlink" title="除錯紀錄"></a>除錯紀錄</h1><p>最近同事抱怨 elasticsearch 常常掉資料，請我幫忙檢查下 ES 是不是有問題，看了下 cluster 的健康狀態也正常，node 硬碟剩餘空間也都還不少，手動打了下也有資料，實在摸不著頭緒。回頭往資料源頭查，<code>kubectl logs &lt;application_pod&gt;</code> 看了下也都有正常吐 log 到 stdout，往上檢查到 fluentd 時發現不太對勁，<code>kubectl logs &lt;fluentd_pod&gt; | grep -v info</code> 看了下發現報了 Warning：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2019-11-17 05:07:05 +0000 [warn]: #0 failed to write data into buffer by buffer overflow action=:block</span><br><span class="line">2019-11-17 05:24:05 +0000 [warn]: #0 failed to flush the buffer. retry_time=3 next_retry_seconds=2019-11-17 05:24:32 +0000 chunk=&quot;59778cb47a5c5dcf401f4d1c5b2cc88f&quot; error_class=Fluent::Plugin::ElasticsearchOutput::RecoverableRequestFailure error=&quot;could not push logs to Elasticsearch cluster (&#123;:host=&gt;\&quot;&lt;elastic_cluster&gt;\&quot;, :port=&gt;9200, :scheme=&gt;\&quot;http\&quot;, :user=&gt;\&quot;elastic\&quot;, :password=&gt;\&quot;obfuscated\&quot;, :path=&gt;\&quot;\&quot;&#125;): connect_write timeout reached&quot;</span><br></pre></td></tr></table></figure>
<p>初步檢查看起來是 Buffer 炸掉了，調整一下 Buffer Size 先，順便把 timeout 時間拉長點觀察看看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">buffer_chunk_limit &quot;#&#123;ENV[&#x27;FLUENT_ELASTICSEARCH_BUFFER_CHUNK_LIMIT_SIZE&#x27;] || &#x27;8M&#x27;&#125;&quot;</span><br><span class="line">buffer_queue_limit &quot;#&#123;ENV[&#x27;FLUENT_ELASTICSEARCH_BUFFER_QUEUE_LIMIT_LENGTH&#x27;] || &#x27;256&#x27;&#125;&quot;</span><br><span class="line">request_timeout 15s</span><br></pre></td></tr></table></figure>
<p>隔天看 Log 還是炸掉，後來仔細爬了一下才發現有人提過這個 Issue: <a href="https://github.com/uken/fluent-plugin-elasticsearch/issues/525">Fluentd stopped sending data to ES for somewhile. #525</a></p>
<span id="more"></span> 

<p>官方其實 FAQ 就有寫了 XD</p>
<blockquote>
<p><a href="https://github.com/uken/fluent-plugin-elasticsearch#stopped-to-send-events-on-k8s-why">Stopped to send events on k8s, why?</a><br>fluent-plugin-elasticsearch reloads connection after 10000 requests. (Not correspond to events counts because ES plugin uses bulk API.)<br>This functionality which is originated from elasticsearch-ruby gem is enabled by default.<br>Sometimes this reloading functionality bothers users to send events with ES plugin.<br>On k8s platform, users sometimes shall specify the following settings:</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reload_connections false</span><br><span class="line">reconnect_on_error true</span><br><span class="line">reload_on_failure true</span><br></pre></td></tr></table></figure>

<p>調整完後就沒有 timeout 過了，總算搞定了這問題。</p>
]]></content>
      <categories>
        <category>Cloud-Native</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>fluentd</tag>
        <tag>elasticsearch</tag>
        <tag>踩坑</tag>
        <tag>除錯</tag>
      </tags>
  </entry>
  <entry>
    <title>[DevOps] 利用 Jenkins 與 Ansible 搭建 CI/CD Pipeline</title>
    <url>/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/</url>
    <content><![CDATA[<h1 id="簡易-CI-x2F-CD-Pipeline-設計原則"><a href="#簡易-CI-x2F-CD-Pipeline-設計原則" class="headerlink" title="簡易 CI&#x2F;CD Pipeline 設計原則"></a>簡易 CI&#x2F;CD Pipeline 設計原則</h1><p><a href="https://github.com/Downager/flask-realworld-example-app">範例用 GitHub Repository</a></p>
<ol>
<li>遵循 GitHub Flow，<code>master</code> 分支永遠是經過驗證且可佈署的</li>
<li>建立新 <code>Pull Request</code> 時，自動 deploy 到 Staging 環境並執行 <code>Smoke Testing</code>，等團隊其他成員或主管完成 <code>Code Review</code> 以及測試後才能 <code>Merge</code> 至 <code>master</code></li>
<li>只有被 <code>Tag</code> 的 commit，才能 deploy 到 Production 環境（手動）</li>
<li>為了方便測試，可以手動 deploy 其他 branch 到 Staging 環境</li>
</ol>
<h1 id="Pipeline-設定"><a href="#Pipeline-設定" class="headerlink" title="Pipeline 設定"></a>Pipeline 設定</h1><h2 id="Jenkinsfile-說明"><a href="#Jenkinsfile-說明" class="headerlink" title="Jenkinsfile 說明"></a><a href="https://github.com/Downager/flask-realworld-example-app/blob/master/Jenkinsfile">Jenkinsfile</a> 說明</h2><ol>
<li>全域環境變數設定 <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">environment &#123;</span><br><span class="line">    # 登入 Docker Hub 的 credential</span><br><span class="line">    DOCKER_HUB_CREDS = credentials(<span class="string">&#x27;dockerhub-downager&#x27;</span>)</span><br><span class="line">    # 設定 Staging 和 Production 環境 Postgresql UserName &amp; Password</span><br><span class="line">    FLASK_POSTGRES_CREDS = credentials(<span class="string">&#x27;flask-app-postgres-user-pass&#x27;</span>)</span><br><span class="line">    # 決定本次佈署是否要執行 db_migrate.sh 這隻腳本</span><br><span class="line">    DB_MIGRATION = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span> </li>
<li>在 Jenkins Node 上 build 出 UnitTest 專用的 docker image，並進行測試 <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stage(<span class="string">&#x27;Test&#x27;</span>) &#123;</span><br><span class="line">  steps &#123;</span><br><span class="line">    sh <span class="string">&#x27;docker build -t flask-realworld-example-app:UnitTest -f ./UnitTest_Dockerfile .&#x27;</span></span><br><span class="line">    sh <span class="string">&#x27;docker run flask-realworld-example-app:UnitTest&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Build 出 Production 專用的 Image，並推至 Private Docker Registry，並用 <code>COMMIT_ID</code> 當作 Image Tag <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stage(<span class="string">&#x27;Build&#x27;</span>) &#123;</span><br><span class="line">  steps &#123;</span><br><span class="line">    sh <span class="string">&#x27;docker login -u $DOCKER_HUB_CREDS_USR -p $DOCKER_HUB_CREDS_PSW&#x27;</span></span><br><span class="line">    sh <span class="string">&#x27;docker build -t downager/flask-realworld-example-app:$GIT_COMMIT .&#x27;</span></span><br><span class="line">    sh <span class="string">&#x27;docker push downager/flask-realworld-example-app:$GIT_COMMIT&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>每次觸發 Jenkins Job 時都會佈署至 Staging 環境，並執行 Smoke Testing <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stage(<span class="string">&#x27;Deploy - Staging&#x27;</span>) &#123;</span><br><span class="line">  environment &#123;</span><br><span class="line">    # 設定本次 Ansible Playbook 要執行的 Host Group</span><br><span class="line">    HOST_GROUP = <span class="string">&#x27;Staging&#x27;</span></span><br><span class="line">    # 設定本次 docker-compose 的 image tag，Staging 環境是 COMMIT_ID</span><br><span class="line">    IMAGE_TAG = sh(<span class="attr">returnStdout:</span> <span class="literal">true</span>, <span class="attr">script:</span> <span class="string">&#x27;echo $GIT_COMMIT&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  steps &#123;</span><br><span class="line">    echo <span class="string">&#x27;Deploy to staging servers&#x27;</span></span><br><span class="line">    ansiColor(<span class="attr">colorMapName:</span> <span class="string">&#x27;xterm&#x27;</span>) &#123;</span><br><span class="line">      ansiblePlaybook(</span><br><span class="line">        <span class="symbol">disableHostKeyChecking:</span> <span class="literal">true</span>,</span><br><span class="line">        # 設定登入 Staging 環境的 SSH KEY</span><br><span class="line">        <span class="symbol">credentialsId:</span> <span class="string">&#x27;devops-ssh-key&#x27;</span>,</span><br><span class="line">        <span class="symbol">playbook:</span> <span class="string">&#x27;ansible/playbook-deploy-flask-app.yml&#x27;</span>,</span><br><span class="line">        <span class="symbol">inventory:</span> <span class="string">&#x27;ansible/hosts&#x27;</span>,</span><br><span class="line">        <span class="symbol">colorized:</span> <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    echo <span class="string">&#x27;Make a smoke testing on staging servers (MAX_RETRIES = 3)&#x27;</span></span><br><span class="line">    # 進行 Smoke Testing，如果連續三次都失敗才報錯退出</span><br><span class="line">    retry(<span class="number">3</span>) &#123;</span><br><span class="line">      ansiColor(<span class="attr">colorMapName:</span> <span class="string">&#x27;xterm&#x27;</span>) &#123;</span><br><span class="line">        ansiblePlaybook(</span><br><span class="line">          <span class="symbol">disableHostKeyChecking:</span> <span class="literal">true</span>,</span><br><span class="line">          # 設定登入 Staging 環境的 SSH KEY</span><br><span class="line">          <span class="symbol">credentialsId:</span> <span class="string">&#x27;devops-ssh-key&#x27;</span>,</span><br><span class="line">          <span class="symbol">playbook:</span> <span class="string">&#x27;ansible/playbook-smoke-testing.yml&#x27;</span>,</span><br><span class="line">          <span class="symbol">inventory:</span> <span class="string">&#x27;ansible/hosts&#x27;</span>,</span><br><span class="line">          <span class="symbol">colorized:</span> <span class="literal">true</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>佈署至 Production 環境，只有觸發帶 <code>Tag</code> 的 Job 才會執行此階段 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/001.png" class="">

 <figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">stage(<span class="string">&#x27;Deploy - Production&#x27;</span>) &#123;</span><br><span class="line">  when &#123;</span><br><span class="line">    tag <span class="string">&#x27;*&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  environment &#123;</span><br><span class="line">    # 設定本次 Ansible Playbook 要執行的 Host Group</span><br><span class="line">    HOST_GROUP = <span class="string">&#x27;Production&#x27;</span></span><br><span class="line">    # 設定本次 docker-compose 的 image tag，Production 環境是 Git tag</span><br><span class="line">    IMAGE_TAG = sh(<span class="attr">returnStdout:</span> <span class="literal">true</span>, <span class="attr">script:</span> <span class="string">&#x27;echo $TAG_NAME&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  steps &#123;</span><br><span class="line">    echo <span class="string">&#x27;Deploying only because this commit is tagged&#x27;</span></span><br><span class="line">    # 將本次 commit 的 image 打上 Git Tag，並推上 docker registry</span><br><span class="line">    sh <span class="string">&#x27;docker tag downager/flask-realworld-example-app:$GIT_COMMIT downager/flask-realworld-example-app:$TAG_NAME&#x27;</span></span><br><span class="line">    sh <span class="string">&#x27;docker push downager/flask-realworld-example-app:$TAG_NAME&#x27;</span></span><br><span class="line">    echo <span class="string">&#x27;Deploy to production servers&#x27;</span></span><br><span class="line">    ansiColor(<span class="attr">colorMapName:</span> <span class="string">&#x27;xterm&#x27;</span>) &#123;</span><br><span class="line">      ansiblePlaybook(</span><br><span class="line">        <span class="symbol">disableHostKeyChecking:</span> <span class="literal">true</span>,</span><br><span class="line">        # 設定登入 Production 環境的 SSH KEY</span><br><span class="line">        <span class="symbol">credentialsId:</span> <span class="string">&#x27;devops-ssh-key&#x27;</span>,</span><br><span class="line">        <span class="symbol">playbook:</span> <span class="string">&#x27;ansible/playbook-deploy-flask-app.yml&#x27;</span>,</span><br><span class="line">        <span class="symbol">inventory:</span> <span class="string">&#x27;ansible/hosts&#x27;</span>,</span><br><span class="line">        <span class="symbol">colorized:</span> <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    echo <span class="string">&#x27;Make a smoke testing on production servers (MAX_RETRIES = 3)&#x27;</span></span><br><span class="line">    # 進行 Smoke Testing，如果連續三次都失敗才報錯退出</span><br><span class="line">    retry(<span class="number">3</span>) &#123;</span><br><span class="line">      ansiColor(<span class="attr">colorMapName:</span> <span class="string">&#x27;xterm&#x27;</span>) &#123;</span><br><span class="line">        ansiblePlaybook(</span><br><span class="line">          <span class="symbol">disableHostKeyChecking:</span> <span class="literal">true</span>,</span><br><span class="line">          # 設定登入 Production 環境的 SSH KEY</span><br><span class="line">          <span class="symbol">credentialsId:</span> <span class="string">&#x27;devops-ssh-key&#x27;</span>,</span><br><span class="line">          <span class="symbol">playbook:</span> <span class="string">&#x27;ansible/playbook-smoke-testing.yml&#x27;</span>,</span><br><span class="line">          <span class="symbol">inventory:</span> <span class="string">&#x27;ansible/hosts&#x27;</span>,</span><br><span class="line">          <span class="symbol">colorized:</span> <span class="literal">true</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="Ansible-Playbook-說明"><a href="#Ansible-Playbook-說明" class="headerlink" title="Ansible Playbook 說明"></a>Ansible Playbook 說明</h2><h3 id="playbook-deploy-flask-app-yml"><a href="#playbook-deploy-flask-app-yml" class="headerlink" title="playbook-deploy-flask-app.yml"></a><a href="https://github.com/Downager/flask-realworld-example-app/blob/master/ansible/playbook-deploy-flask-app.yml">playbook-deploy-flask-app.yml</a></h3><ol>
<li>建立資料夾以及設定權限 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得 Jenkinsfile 設定的 HOST_GROUP 環境變數，決定要 deploy 到 Staging 或 Production 環境</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; lookup(&#x27;env&#x27;,&#x27;HOST_GROUP&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">devops</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="comment"># 取得 DB_MIGRATION 環境變數，決定是否執行 DB migrate 步驟</span></span><br><span class="line">    <span class="attr">DB_MIGRATION:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; lookup(&#x27;env&#x27;,&#x27;DB_MIGRATION&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Change</span> <span class="string">ownership</span> <span class="string">of</span> <span class="string">/opt</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/opt</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="attr">owner:</span> <span class="string">devops</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">devops</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&quot;0775&quot;</span></span><br><span class="line">      <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">flask-realworld-example-app</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/opt/flask-realworld-example-app</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="attr">owner:</span> <span class="string">devops</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">devops</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&quot;0775&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>複製 <code>docker-compose.yaml</code>，以及將 container 所需環境變數寫入 <code>.env</code> 內 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Copy</span> <span class="string">docker-compose</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">copy:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">docker-compose.yaml</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">/opt/flask-realworld-example-app</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Create</span> <span class="string">.env</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">copy:</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">/opt/flask-realworld-example-app/.env</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      TAG=&#123;&#123; lookup(&#x27;env&#x27;,&#x27;IMAGE_TAG&#x27;) &#125;&#125;</span></span><br><span class="line"><span class="string">      POSTGRES_USER=&#123;&#123; lookup(&#x27;env&#x27;,&#x27;FLASK_POSTGRES_CREDS_USR&#x27;) &#125;&#125;</span></span><br><span class="line"><span class="string">      POSTGRES_PASSWORD=&#123;&#123; lookup(&#x27;env&#x27;,&#x27;FLASK_POSTGRES_CREDS_PSW&#x27;) &#125;&#125;</span></span><br></pre></td></tr></table></figure></li>
<li>登入 Private Docker Registry，以及使用 docker-compose 管理容器編排 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Log</span> <span class="string">into</span> <span class="string">DockerHub</span></span><br><span class="line">      <span class="attr">docker_login:</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; lookup(&#x27;env&#x27;,&#x27;DOCKER_HUB_CREDS_USR&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; lookup(&#x27;env&#x27;,&#x27;DOCKER_HUB_CREDS_PSW&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-compose</span> <span class="string">down</span> <span class="string">&#x27;flask-realworld-example-app&#x27;</span></span><br><span class="line">      <span class="attr">docker_compose:</span></span><br><span class="line">        <span class="attr">project_src:</span> <span class="string">/opt/flask-realworld-example-app</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">absent</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">output</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">&#x27;flask-realworld-example-app&#x27;</span></span><br><span class="line">      <span class="attr">docker_compose:</span></span><br><span class="line">        <span class="attr">project_src:</span> <span class="string">/opt/flask-realworld-example-app</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="comment"># 強迫重新拉取 image</span></span><br><span class="line">        <span class="attr">pull:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">output</span></span><br></pre></td></tr></table></figure></li>
<li>根據環境變數設定決定是否執行 <code>./db_migrate.sh</code> 腳本 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DB</span> <span class="string">migrate</span> <span class="bullet">-</span> <span class="string">flask-realworld-example-app</span> </span><br><span class="line">  <span class="attr">command:</span> <span class="string">docker</span> <span class="string">exec</span> <span class="string">flask-realworld-example-app</span> <span class="string">bash</span> <span class="string">-c</span> <span class="string">&#x27;./db_migrate.sh&#x27;</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">DB_MIGRATION</span> <span class="string">==</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="playbook-smoke-testing-yml"><a href="#playbook-smoke-testing-yml" class="headerlink" title="playbook-smoke-testing.yml"></a><a href="https://github.com/Downager/flask-realworld-example-app/blob/master/ansible/playbook-smoke-testing.yml">playbook-smoke-testing.yml</a></h3><ul>
<li>登入到主機中，進行簡易的本機測試，只要回傳的不是 HTTP 200 就會報錯，退出 Jenkins Job  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得 Jenkinsfile 設定的 HOST_GROUP 環境變數，決定要測試 Staging 或 Production 環境</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; lookup(&#x27;env&#x27;,&#x27;HOST_GROUP&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">devops</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">HOST_NAME:</span> <span class="string">&quot;http://localhost:8080&quot;</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GET</span> <span class="string">&#x27;/api/tags&#x27;</span></span><br><span class="line">      <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; HOST_NAME &#125;&#125;</span>/api/tags&quot;</span></span><br><span class="line">        <span class="attr">method:</span> <span class="string">GET</span></span><br><span class="line">        <span class="attr">status_code:</span> <span class="number">200</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GET</span> <span class="string">&#x27;/api/articles&#x27;</span></span><br><span class="line">      <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; HOST_NAME &#125;&#125;</span>/api/articles&quot;</span></span><br><span class="line">        <span class="attr">method:</span> <span class="string">GET</span></span><br><span class="line">        <span class="attr">status_code:</span> <span class="number">200</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="docker-compose-說明"><a href="#docker-compose-說明" class="headerlink" title="docker-compose 說明"></a><a href="https://github.com/Downager/flask-realworld-example-app/blob/master/ansible/docker-compose.yaml">docker-compose</a> 說明</h2><ul>
<li><code>docker-compose.yaml</code> 上的環境變數設定，都是由 Ansible Playbook 寫入 <code>.env</code> 檔案中，如果需要人工介入重啟 docker-compose 時才不會缺少環境變數  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">flask-realworld-example-app</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">downager/flask-realworld-example-app:$&#123;TAG&#125;</span></span><br><span class="line">    <span class="attr">environment:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_URL=postgresql://$&#123;POSTGRES_USER&#125;:$&#123;POSTGRES_PASSWORD&#125;@db/flask-app</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./app/migrations:/app/migrations</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:12.1</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_USER=$&#123;POSTGRES_USER:-postgres&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=$&#123;POSTGRES_PASSWORD:-changeme&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_DB=flask-app</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pgdata:/var/lib/postgresql/data/</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5432</span><span class="string">:5432</span>  </span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">web</span></span><br><span class="line"><span class="attr">networks:</span> </span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">pgdata:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="Jenkins-amp-GitHub-設定"><a href="#Jenkins-amp-GitHub-設定" class="headerlink" title="Jenkins &amp; GitHub 設定"></a>Jenkins &amp; GitHub 設定</h1><ol>
<li><p>請先參考本篇進行初步設定：<br><a href="https://blog.yowko.com/github-plugin-jenkins-webhook/">GitHub Repository 有變動時自動通知 Jenkins 2 進行編譯建置 (GitHub Plugin)</a></p>
</li>
<li><p>調整 GitHub Webhook 設定，只勾選<code>Branch or tag creation / deletion</code>、<code>Pull requests</code>、<code>Pushes</code></p>
<img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/002.png" class="">
</li>
<li><p>回到 Jenkins，設定 <code>Discover tags</code></p>
<img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/003.png" class="">
</li>
<li><p>設定預設行為 <code>Suppress automatic SCM triggering</code>，只有 <code>master</code> 和 <code>Pull Requests</code> 觸發 Jenkins Job</p>
<img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/004.png" class=""></li>
</ol>
<h1 id="成果截圖"><a href="#成果截圖" class="headerlink" title="成果截圖"></a>成果截圖</h1><ul>
<li><p>當新的 Pull Request 建立時，會自動 Trigger Jenkins 執行測試，以及回報結果至 GitHub PR 上</p>
 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/005.png" class="">

 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/006.png" class="">
</li>
<li><p>只有帶 <code>Tag</code> 的事件才會進入 <code>Deploy - Production</code> 階段</p>
 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/007.png" class="">
</li>
<li><p>Ansible Playbook 執行截圖</p>
 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/008.png" class="">
</li>
<li><p>Jenkins BlueOcean 截圖</p>
 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/009.png" class="">
</li>
<li><p>Jenkins Stage View</p>
 <img src="/2020/01/31/DevOps-%E5%88%A9%E7%94%A8-Jenkins-%E8%88%87-Ansible-%E6%90%AD%E5%BB%BA-CI-CD-Pipeline/010.png" class=""></li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://jenkins.io/doc/book/pipeline/jenkinsfile/#handling-credentials">Using a Jenkinsfile - Handling credentials</a></li>
<li><a href="https://jenkins.io/blog/2018/05/16/pipelines-with-git-tags/">When using tags in Jenkins Pipeline</a></li>
<li><a href="https://medium.com/@dillson/triggering-a-jenkins-pipeline-on-git-push-321d29a98cf3">Triggering a Jenkins Pipeline on ‘git push’</a></li>
<li><a href="https://www.redhat.com/en/blog/integrating-ansible-jenkins-cicd-process">Integrating Ansible with Jenkins in a CI&#x2F;CD process</a></li>
<li><a href="https://stackoverflow.com/questions/42798006/how-to-disable-automatic-build-from-scm-change-in-jenkinsfile">How to disable automatic build from scm change in Jenkinsfile</a></li>
<li><a href="https://medium.com/appgambit/ansible-playbook-with-jenkins-pipeline-2846d4442a31">Ansible Playbook with Jenkins Pipeline</a></li>
<li><a href="https://github.com/gothinkster/flask-realworld-example-app/pull/29/commits/13a1d0f112c386eb73a97b1c1b7aba8c7e39c5ac">Fix unique constraint on userprofile.user_id #29</a></li>
<li><a href="https://blog.wu-boy.com/2017/12/github-flow-vs-git-flow/">GitHub Flow 及 Git Flow 流程使用時機</a></li>
</ul>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
        <tag>CI/CD</tag>
        <tag>Ansible</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>[除錯] G-Suite 被擋信問題排除</title>
    <url>/2020/05/13/%E9%99%A4%E9%8C%AF-G-Suite-%E8%A2%AB%E6%93%8B%E4%BF%A1%E5%95%8F%E9%A1%8C%E6%8E%92%E9%99%A4/</url>
    <content><![CDATA[<h1 id="除錯紀錄"><a href="#除錯紀錄" class="headerlink" title="除錯紀錄"></a>除錯紀錄</h1><p>最近公司同仁有在抱怨常常寄信到特定單位會寄丟，利用 <a href="https://toolbox.googleapps.com/apps/checkmx/">Google CheckMX</a> 檢查發現</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SPF must allow Google servers to send mail on behalf of your domain.</span><br></pre></td></tr></table></figure>
<img src="/2020/05/13/%E9%99%A4%E9%8C%AF-G-Suite-%E8%A2%AB%E6%93%8B%E4%BF%A1%E5%95%8F%E9%A1%8C%E6%8E%92%E9%99%A4/spf-must-allow-google.png" class="" title="spf-must-allow-google">


<p>根據<a href="https://support.google.com/a/answer/33786?hl=zh-Hant">說明文件</a>表示，需要新增一筆 <code>SPF TXT Record</code> </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v=spf1 include:_spf.google.com ~all</span><br></pre></td></tr></table></figure>
<span id="more"></span> 

<p>由於我們有利用第三方 Mail Service 來寄信，可以使用 <a href="https://www.spfwizard.net/">SPF Wizard</a> 來幫助產出正確的 <code>SPF TXT Record</code><br>在 <code>Any domains that may deliver or relay mail for this domain</code> 新增所有 Mail Service 的 Domain</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_spf.google.com mailgun.org</span><br></pre></td></tr></table></figure>
<img src="/2020/05/13/%E9%99%A4%E9%8C%AF-G-Suite-%E8%A2%AB%E6%93%8B%E4%BF%A1%E5%95%8F%E9%A1%8C%E6%8E%92%E9%99%A4/spf-wizard.png" class="" title="spf-wizard">


<p>到 DNS Server 更新 <code>SPF TXT Record</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v=spf1 include:_spf.google.com include:mailgun.org ~all</span><br></pre></td></tr></table></figure>

<p>回到 <a href="https://toolbox.googleapps.com/apps/checkmx/">Google CheckMX</a> 檢查，通過測試～～</p>
<img src="/2020/05/13/%E9%99%A4%E9%8C%AF-G-Suite-%E8%A2%AB%E6%93%8B%E4%BF%A1%E5%95%8F%E9%A1%8C%E6%8E%92%E9%99%A4/checkmx-successes.png" class="" title="checkmx-successes">
]]></content>
      <categories>
        <category>MIS</category>
      </categories>
      <tags>
        <tag>除錯</tag>
        <tag>G-Suite</tag>
      </tags>
  </entry>
  <entry>
    <title>[除錯] SSL Certificate Troubleshooting 記錄</title>
    <url>/2020/05/13/%E9%99%A4%E9%8C%AF-SSL-Certificate-Troubleshooting-%E8%A8%98%E9%8C%84/</url>
    <content><![CDATA[<ol>
<li><p>利用 openssl-cli 來測試目標 domain</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl s_client -connect example.com:443</span><br></pre></td></tr></table></figure>
</li>
<li><p>檢視輸出訊息，會顯示 <code>Certificate chain</code>、<code>Server certificate</code>、<code>Verification</code>、<code>SSL handshake</code> 等資訊</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"> 0 s:OU = Domain Control Validated, CN = *.example.com</span><br><span class="line">   i:C = US, ST = Arizona, L = Scottsdale, O = &quot;GoDaddy.com, Inc.&quot;, OU = http://certs.godaddy.com/repository/, CN = Go Daddy Secure Certificate Authority - G2</span><br><span class="line">---</span><br><span class="line">SSL handshake has read 2283 bytes and written 420 bytes</span><br><span class="line">Verification error: unable to verify the first certificate</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
</ol>
<span id="more"></span> 

<ol start="3">
<li><p>根據輸出我們知道是 <code>certificate chain</code> 斷了無法驗證上游， 利用以下指令將 <code>domain cert</code> 與 <code>intermediate cert</code> 重新合併</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat domain.crt gd_bundle-g2-g1.crt &gt; combined_domain.crt</span><br></pre></td></tr></table></figure>
</li>
<li><p>到 web server 將合併過後的 certificate 替換上去，重新測試後就可以發現 <code>certificate chain</code> 重新接上了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"> 0 s:OU = Domain Control Validated, CN = *.example.com</span><br><span class="line">   i:C = US, ST = Arizona, L = Scottsdale, O = &quot;GoDaddy.com, Inc.&quot;, OU = http://certs.godaddy.com/repository/, CN = Go Daddy Secure Certificate Authority - G2</span><br><span class="line"> 1 s:C = US, ST = Arizona, L = Scottsdale, O = &quot;GoDaddy.com, Inc.&quot;, OU = http://certs.godaddy.com/repository/, CN = Go Daddy Secure Certificate Authority - G2</span><br><span class="line">   i:C = US, ST = Arizona, L = Scottsdale, O = &quot;GoDaddy.com, Inc.&quot;, CN = Go Daddy Root Certificate Authority - G2</span><br><span class="line"> 2 s:C = US, ST = Arizona, L = Scottsdale, O = &quot;GoDaddy.com, Inc.&quot;, CN = Go Daddy Root Certificate Authority - G2</span><br><span class="line">   i:C = US, O = &quot;The Go Daddy Group, Inc.&quot;, OU = Go Daddy Class 2 Certification Authority</span><br><span class="line"> 3 s:C = US, O = &quot;The Go Daddy Group, Inc.&quot;, OU = Go Daddy Class 2 Certification Authority</span><br><span class="line">   i:C = US, O = &quot;The Go Daddy Group, Inc.&quot;, OU = Go Daddy Class 2 Certification Authority</span><br><span class="line">---</span><br><span class="line">SSL handshake has read 5709 bytes and written 420 bytes</span><br><span class="line">Verification: OK</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>除錯</tag>
        <tag>SSL</tag>
      </tags>
  </entry>
  <entry>
    <title>[Kubernetes] 在 GKE 上同時啟用 internal 與 external 兩種 nginx ingress controller</title>
    <url>/2020/05/17/Kubernetes-%E5%9C%A8-GKE-%E4%B8%8A%E5%90%8C%E6%99%82%E5%95%9F%E7%94%A8-internal-%E8%88%87-external-%E5%85%A9%E7%A8%AE-nginx-ingress-controller/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>GKE 上原生的 Ingress Controller 限制非常多，需要設定 <code>ServiceType=NodePort</code> 才能使用，<br>於是我選擇 <a href="https://github.com/kubernetes/ingress-nginx">kubernetes&#x2F;ingress-nginx</a> 來作為 ingress 使用，不要和我一樣一開始裝成 <a href="https://github.com/nginxinc/kubernetes-ingress">nginxinc&#x2F;kubernetes-ingress</a> 的 Ingress Controller XD</p>
<p>這張圖是 Kube Ingress Controller 在 GKE 上的架構，除了 external 以外我還需要 internal 的 ingress</p>
<img src="/2020/05/17/Kubernetes-%E5%9C%A8-GKE-%E4%B8%8A%E5%90%8C%E6%99%82%E5%95%9F%E7%94%A8-internal-%E8%88%87-external-%E5%85%A9%E7%A8%AE-nginx-ingress-controller/gke-ingress.png" class="" title="gke-ingress">
<span id="more"></span> 
<p>所以我總共會起兩個 Ingress Controller，Ingress Class 分別是 <code>nginx</code> 與 <code>nginx-internal</code>，<br>只要在 Ingress Controller 的 Service annotations 加上 <code>cloud.google.com/load-balancer-type: &quot;Internal&quot;</code>，<br>GKE 就會起 Internal Loadbalancer 給你的 ingress controller，詳細可以參考以下步驟來安裝</p>
<h1 id="安裝步驟"><a href="#安裝步驟" class="headerlink" title="安裝步驟"></a>安裝步驟</h1><ol>
<li>下載 kube-ingress 的 helm chart <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx</span><br><span class="line">helm repo update</span><br><span class="line">helm fetch ingress-nginx/ingress-nginx</span><br><span class="line">tar zxvf ingress-nginx-2.1.0.tgz</span><br></pre></td></tr></table></figure></li>
<li>安裝 external kube-ingress，根據自己需求修改 default value <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">helm upgrade --install ingress-nginx --namespace default ingress-nginx/</span><br></pre></td></tr></table></figure></li>
<li>新建一個叫 <code>internal-values.yml</code> 的文件，放到 <code>ingress-nginx/</code> 底下 <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">controller:</span></span><br><span class="line">  <span class="attr">ingressClass:</span> <span class="string">nginx-internal</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">cloud.google.com/load-balancer-type:</span> <span class="string">&quot;Internal&quot;</span></span><br></pre></td></tr></table></figure></li>
<li>安裝 internal kube-ingress <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">helm upgrade --install ingress-nginx-internal --namespace default ingress-nginx/ -f internal-values.yml</span><br></pre></td></tr></table></figure></li>
<li>檢查 ingress controller 的 LoadBalancer 是否如預期配到需要的 IP <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># relk @ relk-Inspiron-7375 in ~ [0:35:09] </span><br><span class="line">$ k get service</span><br><span class="line">NAME                                          TYPE           CLUSTER-IP      EXTERNAL-IP      PORT(S)                      AGE</span><br><span class="line">ingress-nginx-controller                      LoadBalancer   10.202.0.24     35.***.***.164   80:30499/TCP,443:31137/TCP   32h</span><br><span class="line">ingress-nginx-internal-controller             LoadBalancer   10.202.15.138   10.200.***.***   80:32401/TCP,443:32427/TCP   32h</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h1><ol>
<li>宣告新的 ingress，在 annotations 下指定你要哪種 ingress class (Repo: <a href="https://github.com/Downager/gke-kube-ingress-demo">gke-kube-ingress-demo</a>) <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># External Ingress</span></span><br><span class="line"><span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line"><span class="comment"># Internal Ingress</span></span><br><span class="line"><span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx-internal</span></span><br></pre></td></tr></table></figure></li>
<li>檢查結果 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># relk @ relk-Inspiron-7375 in ~ [0:59:35] </span><br><span class="line">$ kgi</span><br><span class="line">NAME                HOSTS                           ADDRESS          PORTS     AGE</span><br><span class="line">demo-app            demo-app.example.com            35.***.***.164   80        35s</span><br><span class="line">demo-app-internal   demo-app-internal.example.com   10.200.***.***   80        29s</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://www.infoq.cn/article/FwOkvi6zuxDSsiALsaHz">GKE 多种 Ingress 的实现</a></li>
<li><a href="https://cloud.google.com/community/tutorials/nginx-ingress-gke">Ingress with NGINX controller on Google Kubernetes Engine</a></li>
</ul>
]]></content>
      <categories>
        <category>Cloud-Native</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>ingress</tag>
        <tag>nginx</tag>
        <tag>GKE</tag>
      </tags>
  </entry>
  <entry>
    <title>[Raspberry Pi] 設定開機自動掛載 exFAT 格式行動硬碟</title>
    <url>/2020/05/30/Raspberry-Pi-%E8%A8%AD%E5%AE%9A%E9%96%8B%E6%A9%9F%E8%87%AA%E5%8B%95%E6%8E%9B%E8%BC%89-exFAT-%E6%A0%BC%E5%BC%8F%E8%A1%8C%E5%8B%95%E7%A1%AC%E7%A2%9F/</url>
    <content><![CDATA[<h4 id="1-接上行動硬碟，檢查一下被分配到哪個裝置代號"><a href="#1-接上行動硬碟，檢查一下被分配到哪個裝置代號" class="headerlink" title="1. 接上行動硬碟，檢查一下被分配到哪個裝置代號"></a>1. 接上行動硬碟，檢查一下被分配到哪個裝置代號</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看分割表狀態</span><br><span class="line">sudo fdisk -l</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Disk /dev/mmcblk0: 29.7 GiB, 31914983424 bytes, 62333952 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0xda84cd12</span><br><span class="line"></span><br><span class="line">Device         Boot  Start      End  Sectors  Size Id Type</span><br><span class="line">/dev/mmcblk0p1 *      2048   526335   524288  256M  c W95 FAT32 (LBA)</span><br><span class="line">/dev/mmcblk0p2      526336 62333918 61807583 29.5G 83 Linux</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/sda: 1.8 TiB, 2000398934016 bytes, 3907029168 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 4096 bytes</span><br><span class="line">I/O size (minimum/optimal): 4096 bytes / 4096 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0x2ac1c561</span><br><span class="line"></span><br><span class="line">Device     Boot Start        End    Sectors  Size Id Type</span><br><span class="line">/dev/sda1  *     2048 3907026943 3907024896  1.8T  c W95 FAT32 (LBA)</span><br></pre></td></tr></table></figure>

<span id="more"></span> 

<h4 id="2-將硬碟分割表設定成-GPT，並建立一個完整的磁碟分割"><a href="#2-將硬碟分割表設定成-GPT，並建立一個完整的磁碟分割" class="headerlink" title="2. 將硬碟分割表設定成 GPT，並建立一個完整的磁碟分割"></a>2. 將硬碟分割表設定成 <code>GPT</code>，並建立一個完整的磁碟分割</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 設定分割表</span><br><span class="line">sudo fdisk /dev/sda</span><br></pre></td></tr></table></figure>
<ol>
<li>輸入 <code>g</code> 設定成 <code>GPT</code> 分割表 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Command (m for help): g</span><br><span class="line">Created a new GPT disklabel (GUID: 2BD8CEBF-23A4-4C49-B0E5-3D8A45B6E883).</span><br></pre></td></tr></table></figure></li>
<li>輸入 <code>n</code> 建立新磁碟分區 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Command (m for help): n</span><br><span class="line">Partition number (1-128, default 1): 1</span><br><span class="line">First sector (2048-3907029134, default 2048): 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-3907029134, default 3907029134): 3907029134</span><br><span class="line"></span><br><span class="line">Created a new partition 1 of type &#x27;Linux filesystem&#x27; and of size 1.8 TiB.</span><br><span class="line">Partition #1 contains a exfat signature.</span><br><span class="line"></span><br><span class="line">Do you want to remove the signature? [Y]es/[N]o: Y</span><br><span class="line"></span><br><span class="line">The signature will be removed by a write command.</span><br></pre></td></tr></table></figure></li>
<li>輸入 <code>p</code> 檢查分區狀況，沒問題後輸入 <code>w</code> 寫入 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Command (m for help): p</span><br><span class="line">Disk /dev/sda: 1.8 TiB, 2000398934016 bytes, 3907029168 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 4096 bytes</span><br><span class="line">I/O size (minimum/optimal): 4096 bytes / 4096 bytes</span><br><span class="line">Disklabel type: gpt</span><br><span class="line">Disk identifier: 2BD8CEBF-23A4-4C49-B0E5-3D8A45B6E883</span><br><span class="line"></span><br><span class="line">Device     Start        End    Sectors  Size Type</span><br><span class="line">/dev/sda1   2048 3907029134 3907027087  1.8T Linux filesystem</span><br><span class="line"></span><br><span class="line">Filesystem/RAID signature on partition 1 will be wiped.</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="3-將硬碟掛載到-media-external-hd-下，並設定開機自動掛載"><a href="#3-將硬碟掛載到-media-external-hd-下，並設定開機自動掛載" class="headerlink" title="3. 將硬碟掛載到 /media/external-hd 下，並設定開機自動掛載"></a>3. 將硬碟掛載到 <code>/media/external-hd</code> 下，並設定開機自動掛載</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安裝 exFAT 相關套件</span><br><span class="line">sudo apt install exfat-fuse exfat-utils</span><br><span class="line"></span><br><span class="line"># 將硬碟格式化成 exFAT 格式</span><br><span class="line">sudo mkfs.exfat /dev/sda1</span><br><span class="line"></span><br><span class="line"># 建立掛載資料夾</span><br><span class="line">mkdir /media/external-hd/</span><br><span class="line"></span><br><span class="line"># 編輯 fstab 設定開機自動掛載</span><br><span class="line">sudo vim /etc/fstab</span><br><span class="line"></span><br><span class="line"># 將以下內容增加到 /etc/fstab 最尾行</span><br><span class="line">/dev/sda1    /media/external-hd/    exfat    defaults    0 0</span><br><span class="line"></span><br><span class="line"># 將硬碟掛載上去</span><br><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure>
<h4 id="4-檢查掛載狀況"><a href="#4-檢查掛載狀況" class="headerlink" title="4. 檢查掛載狀況"></a>4. 檢查掛載狀況</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ubuntu@raspberry-pi:~$ lsblk</span><br><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0  1.8T  0 disk </span><br><span class="line">└─sda1        8:1    0  1.8T  0 part /media/external-hd</span><br><span class="line">mmcblk0     179:0    0 29.7G  0 disk </span><br><span class="line">├─mmcblk0p1 179:1    0  256M  0 part /boot/firmware</span><br><span class="line">└─mmcblk0p2 179:2    0 29.5G  0 part /</span><br><span class="line"></span><br><span class="line">ubuntu@raspberry-pi:~$ df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            1.9G     0  1.9G   0% /dev</span><br><span class="line">tmpfs           380M  7.0M  373M   2% /run</span><br><span class="line">/dev/mmcblk0p2   29G  3.1G   25G  12% /</span><br><span class="line">tmpfs           1.9G     0  1.9G   0% /dev/shm</span><br><span class="line">tmpfs           5.0M     0  5.0M   0% /run/lock</span><br><span class="line">tmpfs           1.9G     0  1.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mmcblk0p1  253M  116M  137M  46% /boot/firmware</span><br><span class="line">/dev/sda1       1.9T   61M  1.9T   1% /media/external-hd</span><br><span class="line">tmpfs           380M     0  380M   0% /run/user/1000</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Raspberry-Pi</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>[Elastic] 利用 Filebeat 來收集與解析 Kubernetes nginx ingress logs</title>
    <url>/2020/06/14/Elastic-%E5%88%A9%E7%94%A8-Filebeat-%E4%BE%86%E6%94%B6%E9%9B%86%E8%88%87%E8%A7%A3%E6%9E%90-Kubernetes-nginx-ingress-logs/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近在配置 Filebeat 在 Kubernetes 上解析 nginx-ingress logs 時遇到了一些困難，主要是 <code>autodiscover</code> 與 <code>hints</code> 部份在新舊版本上有些差異，這邊將我最後測試成功的配置給記錄下來</p>
<h1 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h1><ul>
<li><code>GKE Container-Optimized OS</code></li>
<li><code>Filebeat: 7.7.1</code></li>
<li><code>ElasticSearch: 7.7.1</code></li>
<li><code>Kubernetes/ingress-nginx: 0.32.0</code></li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h4 id="helm-chart-elastic-filebeat"><a href="#helm-chart-elastic-filebeat" class="headerlink" title="helm chart: elastic/filebeat"></a>helm chart: <code>elastic/filebeat</code></h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filebeatConfig:</span></span><br><span class="line">  <span class="attr">filebeat.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    filebeat.autodiscover:</span></span><br><span class="line"><span class="string">      providers:</span></span><br><span class="line"><span class="string">        - type: kubernetes</span></span><br><span class="line"><span class="string">          hints.enabled: true</span></span><br><span class="line"><span class="string">          hints.default_config.enabled: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">output.elasticsearch:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">&#x27;$&#123;NODE_NAME&#125;&#x27;</span></span><br><span class="line">      <span class="attr">hosts:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_HOSTS:elasticsearch-master:9200&#125;&#x27;</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_USERNAME&#125;&#x27;</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_PASSWORD&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span> 

<h4 id="helm-chart-ingress-nginx-ingress-nginx"><a href="#helm-chart-ingress-nginx-ingress-nginx" class="headerlink" title="helm chart: ingress-nginx/ingress-nginx"></a>helm chart: <code>ingress-nginx/ingress-nginx</code></h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Annotations to be added to controller pods</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">podAnnotations:</span> </span><br><span class="line">  <span class="attr">co.elastic.logs/enabled:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">co.elastic.logs/module:</span> <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  <span class="attr">co.elastic.logs/fileset.stdout:</span> <span class="string">&quot;ingress_controller&quot;</span></span><br><span class="line">  <span class="attr">co.elastic.logs/fileset.stderr:</span> <span class="string">&quot;error&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://stackoverflow.com/questions/62302527/error-extracting-container-id-source-value-does-not-contain-matchers-logs-pat">Error extracting container id - source value does not contain matcher’s logs_path ‘&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers&#x2F;‘</a></li>
<li><a href="https://discuss.elastic.co/t/problem-to-update-to-filebeat-7-7-0-and-parser-nginx-ingress-controller-on-kubernetes/232461/2">Problem to update to filebeat 7.7.0 and parser nginx-ingress-controller on Kubernetes</a></li>
</ul>
]]></content>
      <categories>
        <category>Elastic</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>elasticsearch</tag>
        <tag>ingress</tag>
        <tag>nginx</tag>
        <tag>filebeat</tag>
      </tags>
  </entry>
  <entry>
    <title>[除錯] Fluentd UDP Log 掉包問題分析</title>
    <url>/2020/07/19/%E9%99%A4%E9%8C%AF-Fluentd-UDP-Log-%E6%8E%89%E5%8C%85%E5%95%8F%E9%A1%8C%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前陣子與 Backend Team 最終討論出要使用 UDP 方式直接將 JSON format 的 log message 送到 fluentd，實際接上後觀察發現會掉 log，以下是除錯過程的紀錄。</p>
<h1 id="除錯紀錄"><a href="#除錯紀錄" class="headerlink" title="除錯紀錄"></a>除錯紀錄</h1><p>一開始不確定問題是 fluentd 丟棄太大的 UDP 封包還是 MTU 導致，於是建立了幾個特定大小的 JSON 檔案來測試：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls -la</span><br><span class="line">-rw-rw-r--  1 relk relk    1400 Jul 16 10:33 size-1400</span><br><span class="line">-rw-rw-r--  1 relk relk    1410 Jul 16 10:39 size-1410</span><br><span class="line">-rw-rw-r--  1 relk relk    1420 Jul 16 10:41 size-1420</span><br><span class="line">-rw-rw-r--  1 relk relk    1430 Jul 16 10:42 size-1430</span><br><span class="line">-rw-rw-r--  1 relk relk    1432 Jul 16 10:54 size-1432</span><br><span class="line">-rw-rw-r--  1 relk relk    1440 Jul 16 10:42 size-1440</span><br><span class="line">-rw-rw-r--  1 relk relk    2000 Jul 16 10:30 size-2000</span><br></pre></td></tr></table></figure>
<p>一開始先從 <code>2000 bytes</code> 的開始丟，檢查 fluentd log 沒發現有收到 <code>2000 bytes</code> 大小的 log，轉而測試 <code>1400 bytes</code> 到 <code>1440 bytes</code> 訊息後，發現超過 <code>1432 bytes</code> 的 log 像是被丟到黑洞一樣，不知去向</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat size-2000 &gt; /dev/udp/192.168.100.200/5160</span><br><span class="line">$ cat size-1400 &gt; /dev/udp/192.168.100.200/5160</span><br><span class="line">$ cat size-1432 &gt; /dev/udp/192.168.100.200/5160</span><br></pre></td></tr></table></figure>
<p>使用 <code>tcpdump</code> 來檢查 5160 port 的封包狀況，確認的確是封包過大會有 <code>UDP, bad length</code> 的錯誤訊息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo tcpdump -i ens4 -nn -v &#x27;port 5160&#x27;</span><br><span class="line">08:15:07.295252 IP (tos 0x0, ttl 64, id 798, offset 0, flags [+], proto UDP (17), length 1460)</span><br><span class="line">    192.168.100.1.5160 &gt; 192.168.100.200.5160: UDP, bad length 2064 &gt; 1432</span><br></pre></td></tr></table></figure>
<span id="more"></span> 

<p>在 Google 上查了一下，看到有人<a href="https://iota.stackexchange.com/questions/756/possible-udp-mtu-problems-udp-bad-length-1650-1368-in-tcpdump">提到</a> <code>udp-fragmentation-offload</code> 會導致這個問題，檢查了一下確實沒有開啟這功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo ethtool -k ens4 | grep udp-fragmentation-offload</span><br><span class="line">udp-fragmentation-offload: off</span><br></pre></td></tr></table></figure>
<p>針對這功能<a href="https://hustcat.github.io/udp-and-vxlan-fragment/">研究</a>了下，<code>udp-fragmentation-offload (UFO)</code> 主要是網卡提供硬體 IP Fragmentation 的功能，使得上層 <code>Layer 3</code> 不需要透過軟體 Fragmentation，減少 CPU 資源消耗，因此我認為 UFO 的啟用與否不影響 UDP Packet 的發送。</p>
<p>根據這個思維，利用 <code>tcpdump</code> 來觀察所有發送到目標 fluentd 的封包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sudo tcpdump -i ens4 -nn -v -X &#x27;dst host 192.168.100.200&#x27;</span><br><span class="line"></span><br><span class="line">16:43:18.375508 IP (tos 0x0, ttl 64, id 30236, offset 0, flags [+], proto UDP (17), length 1460)</span><br><span class="line">    192.168.100.1.33543 &gt; 192.168.100.200.5160: UDP, bad length 1440 &gt; 1432</span><br><span class="line">	0x0000:  4500 05b4 761c 2000 4011 c94c 0aa0 0002  E...v...@..L....</span><br><span class="line">	0x0010:  0ac8 0067 8307 1428 05a8 090f 7b22 6c61  ...g...(....&#123;&quot;la</span><br><span class="line">	0x0020:  6265 6c22 3a22 7265 6c6b 5f61 6363 6573  bel&quot;:&quot;relk_acces</span><br><span class="line">	0x0030:  7322 2c22 6d65 7373 6167 6522 3a22 3634  s&quot;,&quot;message&quot;:&quot;64</span><br><span class="line">	0x0040:  3634 3634 3634 3634 3634 3634 3634 3634  6464646464646464</span><br><span class="line">	... 略</span><br><span class="line">	0x0550:  3132 3232 3232 3232 3232 3233 3333 3333  1222222222233333</span><br><span class="line">	0x0560:  3333 3333 3334 3434 3434 3434 3434 3422  333334444444444&quot;</span><br><span class="line">	0x0570:  2c22 686f 7374 6e61 6d65 223a 2273 6973  ,&quot;hostname&quot;:&quot;my-</span><br><span class="line">	0x0580:  7970 6875 7322 2c22 7069 6422 3a32 3233  host1&quot;,&quot;pid&quot;:123</span><br><span class="line">	0x0590:  3336 2c22 7469 6d65 7374 616d 7022 3a22  45,&quot;timestamp&quot;:&quot;</span><br><span class="line">	0x05a0:  3230 3230 2d30 372d 3136 5431 303a 3131  2020-07-16T10:11</span><br><span class="line">	0x05b0:  3a32 392e                                :29.</span><br><span class="line">16:43:18.375526 IP (tos 0x0, ttl 64, id 30236, offset 1440, flags [none], proto UDP (17), length 28)</span><br><span class="line">    10.160.0.2 &gt; 192.168.100.200: ip-proto-17</span><br><span class="line">	0x0000:  4500 001c 761c 00b4 4011 ee30 0aa0 0002  E...v...@..0....</span><br><span class="line">	0x0010:  0ac8 0067 3238 3630 3022 7d0a            ...g28600&quot;&#125;.</span><br></pre></td></tr></table></figure>
<p>可以觀察到確實 IP Layer 會將大於 MTU 的封包做切割，而切割後會喪失 UDP Header，但接收端應該要能夠在 IP Layer 重組（IP Header 有 ID、offset），而我們目前測試的架構為 <code>VM</code> &gt; <code>GCP Internal Loadbalancer</code> &gt; <code>Kubernetes Worker Node </code>&gt; <code>Fluentd Pod (Kubernetes)</code>，為了定位問題點，我選擇先從 Kubernetes 內部測試被 IP 分片的 UDP Datagram 是否能組回且被 Fluentd 正確處理：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ls -la</span><br><span class="line">-rw-r--r--    1 root     root          2312 Jul 19 12:37 size2300.txt</span><br><span class="line">$ cat size2300.txt | nc -u -w1 fluentd.monitoring 5160</span><br></pre></td></tr></table></figure>
<p>同時間在 Fluentd Pod 上進行 <code>tcpdump</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ tcpdump -nn -v -A &#x27;src host 10.203.0.20&#x27;</span><br><span class="line"></span><br><span class="line">12:37:50.159977 IP (tos 0x0, ttl 62, id 42754, offset 0, flags [+], proto UDP (17), length 1460)</span><br><span class="line">    10.203.0.20.46424 &gt; 10.203.3.189.5160: UDP, bad length 2312 &gt; 1432</span><br><span class="line">E..... .&gt;...</span><br><span class="line">...</span><br><span class="line">....X.(	..(</span><br><span class="line">&#123;&quot;label&quot;:&quot;relk_access&quot;,&quot;timestamp&quot;:&quot;2020-07-19T12:11:29.286Z&quot;,&quot;message&quot;:&quot;sEgYYUOdiyVk...略</span><br><span class="line"></span><br><span class="line">12:37:50.159993 IP (tos 0x0, ttl 62, id 42754, offset 1440, flags [none], proto UDP (17), length 900)</span><br><span class="line">    10.203.0.20 &gt; 10.203.3.189: ip-proto-17</span><br><span class="line">E.......&gt;..L</span><br><span class="line">...</span><br><span class="line">...VW0iQRjLz9QqVBzkfmNThUaOgC3HA4RkkhcoTYBJOS1rw8bwt9SD4xWMhLIa5X1uCrCdfgFnmp3A4I1NSeMYow2mbsa6...略&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到接收端是有收到被分片過的 Packet，Fluentd 也有正確處理並送到 elasticsearch，因此可以確認說問題是出在 <code>GCP Internal Loadbalancer</code>，根據<a href="https://cloud.google.com/load-balancing/docs/network#load_balancing_and_fragmented_udp_packets">文檔</a>指出：</p>
<blockquote>
<p>Google Cloud does not wait for all fragments; it forwards each fragment as soon as it arrives.</p>
<p>Because subsequent UDP fragments do not contain the destination port, problems can occur in these situations:</p>
<ul>
<li>If the target pools session affinity is set to NONE (5-tuple affinity), the subsequent fragments may be dropped because the load balancer cannot calculate the 5-tuple hash.</li>
<li>If there is more than one UDP forwarding rule for the same load-balanced IP address, subsequent fragments may arrive at the wrong forwarding rule.</li>
</ul>
</blockquote>
<p>可以看到根據 <code>session affinity</code> 的設定，可能會導致後續 <code>fragments</code> 被送到不正確的目的地或是被丟棄，基本上可以確定這次掉 Log 是 Loadbalancer 導致，查了一下沒有找到能夠調整 <code>session affinity</code> 的 Kubernetes service annotations，暫時擱置著先，再想想要怎麼解決這問題…</p>
<p><strong>2020&#x2F;07&#x2F;31 Update:</strong><br>後續測試時發現部份 log message 會超過 UDP datagram 大小限制 <code>65,535 bytes</code>，只好轉回用 TCP 做為連線協定，回去面對 Long-Lived TCP 連線的負載平衡問題，以及 TCP 連線開銷等等性能挑戰。<br>可以參考 <a href="https://docs.fluentd.org/installation/before-install">Before Installation - Fluentd</a>，有提到關於 File Descriptors 及 Network Kernel Parameters 等等的調整</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://iota.stackexchange.com/questions/756/possible-udp-mtu-problems-udp-bad-length-1650-1368-in-tcpdump">Possible UDP MTU problems (UDP, bad length 1650 &gt; 1368 in tcpdump)
</a></li>
<li><a href="https://www.zhihu.com/question/68641339">UDP分片的问题？ - 知乎</a></li>
<li><a href="https://hustcat.github.io/udp-and-vxlan-fragment/">Packet fragmentation and segmentation offload in UDP and VXLAN</a></li>
<li><a href="http://blog.nsfocus.net/network-packets-analysis-nic-offload/">网络数据包分析 网卡OFFLOAD</a></li>
<li><a href="https://cloud.google.com/load-balancing/docs/network#load_balancing_and_fragmented_udp_packets">#Load balancing and fragmented UDP packets</a></li>
<li><a href="https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing#restrictions_for_internal_udp_load_balancers">#Restrictions for internal UDP load balancers</a></li>
</ul>
]]></content>
      <categories>
        <category>Cloud-Native</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>fluentd</tag>
        <tag>除錯</tag>
        <tag>udp</tag>
      </tags>
  </entry>
</search>
